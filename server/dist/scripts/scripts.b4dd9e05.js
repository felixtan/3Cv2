"use strict";angular.module("clientApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","xeditable","ng-sortable","ui.bootstrap","ui.router","ngMessages","stormpath.templates","config","frapontillo.bootstrap-switch"]).config(["ENV","$stateProvider","$urlRouterProvider","$provide",function(a,b,c,d){d.decorator("$state",["$delegate","$stateParams",function(a,b){return a.forceReload=function(){return a.go(a.current,b,{reload:!0,inherit:!1,notify:!0})},a}]);var e=function(){var a={};return a};c.otherwise("/dashboard/cars"),b.state("wtf",{url:"/",templateUrl:"<div></div>"}).state("login",{url:"/login",templateUrl:"login.html"}).state("registration",{url:"/registration",templateUrl:"registration.html"}).state("forgot-password",{url:"/forgot-password",templateUrl:"forgotpw.html"}).state("reset-password",{url:"/reset?sptoken",templateUrl:"resetpw.html"}).state("dashboard",{"abstract":!0,url:"/dashboard",template:"<ui-view/>",sp:e()}).state("dashboard.cars",{url:"/cars",templateUrl:"views/objectsList.html",controller:"ObjectListCtrl",resolve:{objectType:function(){return"car"}}}).state("dashboard.drivers",{url:"/drivers",templateUrl:"views/objectsList.html",controller:"ObjectListCtrl",resolve:{objectType:function(){return"driver"}}}).state("dashboard.prospects",{url:"/prospects",templateUrl:"views/objectsList.html",controller:"ObjectListCtrl",resolve:{objectType:function(){return"prospect"}}}).state("dashboard.assets",{url:"/assets",templateUrl:"views/objectsList.html",controller:"ObjectListCtrl",resolve:{objectType:function(){return"asset"}}}).state("logs",{"abstract":!0,url:"/logs",template:"<ui-view/>",sp:e()}).state("logs.cars",{url:"/cars",templateUrl:"views/objectsLogs.html",controller:"ObjectsLogsCtrl",resolve:{objectType:function(){return"car"}},sp:e()}).state("logs.drivers",{url:"/drivers",templateUrl:"views/objectsLogs.html",controller:"ObjectsLogsCtrl",resolve:{objectType:function(){return"driver"}},sp:e()}).state("logs.assets",{url:"/assets",templateUrl:"/views/objectsLogs.html",controller:"ObjectsLogsCtrl",resolve:{objectType:function(){return"asset"}},sp:e()}).state("carData",{url:"/cars/:id/data",templateUrl:"/views/objectData.html",controller:"ObjectDataCtrl",sp:e(),resolve:{objectType:function(){return"car"},objectId:["$stateParams",function(a){return a.id}]}}).state("carLogs",{url:"/cars/:id/logs",templateUrl:"/views/objectLogs.html",controller:"ObjectLogsCtrl",sp:e(),resolve:{objectType:function(){return"car"},objectId:["$stateParams",function(a){return a.id}]}}).state("driverData",{url:"/drivers/:id/data",templateUrl:"/views/objectData.html",controller:"ObjectDataCtrl",sp:e(),resolve:{objectType:function(){return"driver"},objectId:["$stateParams",function(a){return a.id}]}}).state("driverLogs",{url:"/drivers/:id/logs",templateUrl:"/views/objectLogs.html",controller:"ObjectLogsCtrl",sp:e(),resolve:{objectType:function(){return"driver"},objectId:["$stateParams",function(a){return a.id}]}}).state("prospectData",{url:"/prospects/:id/data",templateUrl:"/views/objectData.html",controller:"ObjectDataCtrl",sp:e(),resolve:{objectType:function(){return"prospect"},objectId:["$stateParams",function(a){return a.id}]}}).state("assetData",{url:"/assets/:id/data",templateUrl:"/views/objectData.html",controller:"ObjectDataCtrl",sp:e(),resolve:{objectType:function(){return"asset"},objectId:["$stateParams",function(a){return a.id}]}}).state("assetLogs",{url:"/assets/:id/logs",templateUrl:"/views/objectLogs.html",controller:"ObjectLogsCtrl",sp:e(),resolve:{objectType:function(){return"asset"},objectId:["$stateParams",function(a){return a.id}]}})}]).run(["ENV","editableOptions","$state","$stateParams","$rootScope",function(a,b,c,d,e){b.theme="bs3",e.$state=c,e.$stateParams=d}]),angular.module("clientApp").factory("dataService",["$state","$http","$q","ENV",function(a,b,c,d){var e="production"===d.name?{}:{organizationId:"3Qnv2pMAxLZqVdp7n8RZ0x"};return{getAssetTypes:function(){return b({method:"GET",url:"/api/asset-types",params:e}).then(function(a){return a},function(a){console.error(a)})},updateAssetTypes:function(c){return b({method:"PUT",url:"/api/asset-types",params:e,data:c}).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},getAssets:function(){return b({method:"GET",url:"/api/assets",params:e}).then(function(a){return a},function(a){console.error(a)})},getAssetsOfType:function(a){return b({method:"GET",url:"/api/assets/"+a,params:e}).then(function(a){return a},function(a){console.error(a)})},getAsset:function(a){return b.get("/api/assets/"+a).then(function(a){return a},function(a){console.error(a)})},createAsset:function(c){return b.post("/api/assets",c).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},updateAsset:function(c){return b({method:"PUT",url:"/api/assets/"+c.id,params:e,data:c}).then(function(a){return a},function(b){a.forceReload(),console.error(b)})},deleteAsset:function(c){return b["delete"]("/api/assets/"+c).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},getProspectStatuses:function(){return b({method:"GET",url:"/api/prospect-statuses",params:e}).then(function(a){return a},function(a){console.error(a)})},updateProspectStatuses:function(c){return b({method:"PUT",url:"/api/prospect-statuses",params:e,data:c}).then(function(a){return a},function(b){a.forceReload(),console.error(b)})},getProspects:function(){return b({method:"GET",url:"/api/prospects",params:e}).then(function(a){return a},function(a){console.error(a)})},getProspect:function(a){return b.get("/api/prospects/"+a).then(function(a){return a},function(a){console.error(a)})},createProspect:function(c){return b.post("/api/prospects",c).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},updateProspect:function(c){return b({method:"PUT",url:"/api/prospects/"+c.id,params:e,data:c}).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},deleteProspect:function(c,d){return b({method:"DELETE",url:"/api/prospects/"+c,params:d}).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},getDrivers:function(){return b({method:"GET",url:"/api/drivers",params:e}).then(function(a){return a},function(a){throw console.error(a),a})},getDriver:function(a){return b.get("/api/drivers/"+a).then(function(a){return a},function(a){console.error(a)})},createDriver:function(c){return b.post("/api/drivers",c).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},updateDriver:function(c){return b({method:"PUT",url:"/api/drivers/"+c.id,params:e,data:c}).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},deleteDriver:function(c,d){return b({method:"DELETE",url:"/api/drivers/"+c,params:d}).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},getCars:function(){return b({method:"GET",url:"/api/cars",params:e}).then(function(a){return a},function(a){throw console.error(a),a})},getCar:function(a){return b.get("/api/cars/"+a).then(function(a){return a},function(a){console.error(a)})},updateCar:function(c){return b({method:"PUT",url:"/api/cars/"+c.id,params:e,data:c}).then(function(b){return a.forceReload(),b},function(b){console.error(b),a.forceReload()})},createCar:function(c){return b.post("/api/cars",c).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},deleteCar:function(c,d){return b({method:"DELETE",url:"/api/cars/"+c,params:d}).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},getGasCards:function(){return b.get("/api/assets/gas-cards",e).then(function(a){return a},function(a){console.error(a)})},getEzPasses:function(){return b.get("/api/assets/ez-passes",e).then(function(a){return a},function(a){console.error(a)})}}}]),angular.module("clientApp").directive("repeatFinished",function(){return function(a){a.$last&&a.status===a.prospectStatuses[a.prospectStatuses.length-1]&&a.$emit("repeatFinished")}}),angular.module("clientApp").controller("AddFieldModalInstanceCtrl",["objectHelpers","assetType","objectType","$q","$state","getAssets","getCars","getDrivers","getProspects","$scope","$modalInstance","dataService",function(a,b,c,d,e,f,g,h,i,j,k,l){var m=a.isValid,n=a.buildEvalExpression,o=this;if(o.update=null,o.fields=[],o.objects=[],o.objectType=c,o.assetType=b,j.formData={},j.expressionFieldSelect={value:null},j.expressionConstantInput={value:null},j.rightSide={value:!1},j.validExpression={value:!0},j.expressionErrorMessage=null,j.validFieldsForExpressions=[],o.testExpressionItems=[],o.testExpression="",o.rightTestExpressionItems=[],o.leftTestExpressionItems=[],j.field={name:null,type:null,dataType:null,expressionItems:[],expression:"",inequalitySign:"",inequalitySignId:null,leftExpressionItems:[],leftExpression:"",rightExpressionItems:[],rightExpression:""},o.setValidFieldsForExpressions=function(a){var b=Object.keys(a);j.validFieldsForExpressions=_.filter(b,function(b){return"number"===a[b].dataType})},j.setInequalitySign=function(a){switch(parseInt(a)){case 0:j.field.inequalitySign=">",j.field.inequalitySignId=0;break;case 1:j.field.inequalitySign="≥",j.field.inequalitySignId=1;break;case 2:j.field.inequalitySign="<",j.field.inequalitySignId=2;break;case 3:j.field.inequalitySign="≤",j.field.inequalitySignId=3;break;default:j.field.inequalitySign=void 0}},j.setDataType=function(a){switch(j.clearExpression(),a){case"text":j.field.dataType="text";break;case"number":j.field.dataType="number";break;case"boolean":j.field.dataType="boolean";break;case"function":j.field.dataType="number";break;case"inequality":j.field.dataType="boolean";break;default:j.field.dataType=void 0}},j.invalidFieldType=function(){return null===j.field.type||"undefined"==typeof j.field.type||null===j.field.dataType||"undefined"==typeof j.field.dataType},j.appendItemToFunction=function(a,b){var c=[];"function"===j.field.type?(j.field.expressionItems.push({type:b,value:a,location:"expressionItems"}),c=o.testExpressionItems):j.rightSide.value?(j.field.rightExpressionItems.push({type:b,value:a,location:"rightExpressionItems"}),c=o.rightTestExpressionItems):(j.field.leftExpressionItems.push({type:b,value:a,location:"leftExpressionItems"}),c=o.leftTestExpressionItems),o.validate(c,b,a),j.expressionFieldSelect.value=null,j.expressionConstantInput.value=null},o.validate=function(a,b,c){o.firstStageValidation(a,b,c).then(function(a){o.displayExpression().then(function(){o.buildTestExpression(a._testExpressionItems_).then(function(){a.valid&&(j.validExpression.value=!0,o.validateExpression())})})})},o.firstStageValidation=function(a,b,c){var e=d.defer();return j.validExpression.value=!0,a.length?"field"===b||"constant"===b?"operator"!==a[a.length-1].type?(a.push({type:b,value:c}),j.validExpression.value=!1,j.expressionErrorMessage="Missing operator before "+b+" "+c):"field"===b?a.push({type:b,value:"1"}):a.push({type:b,value:c}):a.push({type:b,value:c}):"field"===b?a.push({type:b,value:"1"}):a.push({type:b,value:c}),e.resolve({_testExpressionItems_:a,valid:j.validExpression.value}),e.reject(new Error("Error in first stage validation of expression")),e.promise},o.validateExpression=function(){j.expressionErrorMessage=void 0;try{j.$eval(o.testExpression)}catch(a){j.validExpression.value=!1,j.expressionErrorMessage=a.message}},o.buildTestExpression=function(a){var b=d.defer();return o.testExpression="",_.each(a,function(a){o.testExpression=o.testExpression+a.value}),b.resolve(o.testExpression),b.reject(new Error("Error building test expression")),b.promise},o.displayExpression=function(){var a=d.defer();return"function"===j.field.type?(j.field.expression="",a.resolve(_.each(j.field.expressionItems,function(a){j.field.expression=j.field.expression+a.value}))):j.rightSide.value?(j.field.rightExpression="",a.resolve(_.each(j.field.rightExpressionItems,function(a){j.field.rightExpression+=a.value}))):(j.field.leftExpression="",a.resolve(_.each(j.field.leftExpressionItems,function(a){j.field.leftExpression+=a.value}))),a.reject(new Error("Error getting display expression")),a.promise},j.undoExpression=function(){var a={},b=[];"function"===j.field.type?(b=o.testExpressionItems,a=j.field.expressionItems.pop()):j.rightSide.value?(b=o.rightTestExpressionItems,a=j.field.rightExpressionItems.pop()):(b=o.leftTestExpressionItems,a=j.field.leftExpressionItems.pop()),b.pop(),o.firstStageValidate_Undo().then(function(a){o.displayExpression().then(function(){o.buildTestExpression(b).then(function(){a&&(j.validExpression.value=!0,o.validateExpression())})})})},o.firstStageValidate_Undo=function(){var a,b=d.defer(),c=[];if(c="function"===j.field.type?o.testExpressionItems:j.rightSide.value?o.rightTestExpressionItems:o.leftTestExpressionItems,j.validExpression.value=!0,c.length>1&&(a=c[c.length-1],"field"===a.type||"constant"===a.type)){var e=c[c.length-2];"operator"!==e.type&&(j.validExpression.value=!1,j.expressionErrorMessage="Missing operator before "+e.type+" "+e.value)}return b.resolve(j.validExpression.value),b.reject(new Error("Error during first stage validation after undo")),b.promise},j.clearExpression=function(){o.testExpression="",o.testExpressionItems=[],o.leftTestExpressionItems=[],o.rightTestExpressionItems=[],j.field.expression="",j.field.expressionItems=[],j.field.leftExpressionItems=[],j.field.leftExpression="",j.field.rightExpressionItems=[],j.field.rightExpression="",j.field.inequalitySign="",j.field.inequalitySignId=null,j.validExpression.value=!0,j.expressionErrorMessage=void 0},"car"===c)o.update=l.updateCar,"undefined"!=typeof g&&g.length>0&&(o.objects=g);else if("driver"===c)o.update=l.updateDriver,"undefined"!=typeof h&&h.length>0&&(o.objects=h);else if("prospect"===c)o.update=l.updateProspect,"undefined"!=typeof i&&i.length>0&&(o.objects=i);else if("asset"===c){o.update=l.updateAsset;var p=_.filter(f,function(a){return a.assetType===o.assetType});"undefined"!==p&&p.length>0&&(o.objects=p)}else e.go("dashboard.cars");o.objects.length>0&&(o.fields=Object.keys(o.objects[0].data),o.setValidFieldsForExpressions(o.objects[0].data)),j.fieldNameAlreadyExists=function(){return _.contains(o.fields,j.field.name)},o.createNewFieldData=function(b){var c=d.defer();return"function"===b.type?c.resolve({value:null,log:j.formData.log||!1,dataType:b.dataType,type:b.type,expressionItems:b.expressionItems,expression:b.expression,fieldsUsed:{},expressionsUsedIn:{}}):"inequality"===b.type?c.resolve({value:null,log:j.formData.log||!1,dataType:b.dataType,type:b.type,leftExpressionItems:b.leftExpressionItems,rightExpressionItems:b.rightExpressionItems,inequalitySignId:b.inequalitySignId,leftExpression:b.leftExpression,rightExpression:b.rightExpression,inequalitySign:a.getInequalitySign(b.inequalitySignId),fieldsUsed:{}}):c.resolve({value:null,log:j.formData.log||!1,dataType:b.dataType,type:b.type,expressionsUsedIn:"number"===b.type?{}:void 0}),c.reject(new Error("Error creating new field data")),c.promise},o.appendNewFieldToObject=function(a,b,c){return c.data[a]=b,c},o.evaluateInequalityValue=function(a,b){return 0===j.field.inequalitySignId?(console.log(a+" > "+b),a>b):1===j.field.inequalitySignId?a>=b:2===j.field.inequalitySignId?b>a:3===j.field.inequalitySignId?b>=a:void 0},j.inequalityIsComplete=function(){return"inequality"===j.field.type?j.field.rightExpressionItems.length>0&&j.field.leftExpressionItems.length>0&&null!==j.field.inequalitySignId&&"undefined"!=typeof j.field.inequalitySignId:!0},j.emptyExpression=function(){return"function"===j.field.type?j.field.expressionItems.length>0?!1:!0:"inequality"===j.field.type?j.field.leftExpressionItems.length>0&&j.field.rightExpressionItems.length>0&&null!==j.field.inequalitySignId&&"undefined"!=typeof j.field.inequalitySignId?!1:!0:!1},j.submit=function(){o.createNewFieldData(j.field).then(function(b){o.objects.length>0&&("function"===j.field.type?_.each(o.objects,function(c){o.evaluateExpression(c,j.field.expressionItems).then(function(d){b.value=d;var e=o.appendNewFieldToObject(j.field.name,b,c);a.storeFieldsUsed(e,j.field.name).then(function(a){o.update(a)})})}):"inequality"===j.field.type?_.each(o.objects,function(c){o.evaluateExpression(c,j.field.leftExpressionItems).then(function(d){o.evaluateExpression(c,j.field.rightExpressionItems).then(function(e){d=parseFloat(d),e=parseFloat(e),b.value=o.evaluateInequalityValue(d,e);var f=o.appendNewFieldToObject(j.field.name,b,c);a.storeFieldsUsed(f,j.field.name).then(function(a){o.update(a)})})})}):_.each(o.objects,function(a){var c=o.appendNewFieldToObject(j.field.name,b,a);o.update(c)})),j.ok(b,j.field.name)})},j.reset=function(){j.formData={},j.form.$setPristine(),j.form.$setUntouched(),e.forceReload()},j.ok=function(a,b){e.forceReload(),k.close({name:b,data:a})},j.close=function(){e.forceReload(),k.dismiss("cancel")},o.evaluateExpression=function(a,b){var c=d.defer();return n(a.data,b).then(function(a){c.resolve(m(j.$eval(a))?j.$eval(a):null),c.reject(new Error("Error evaluating expression"))}),c.promise}}]),angular.module("clientApp").factory("carHelpers",["ENV","$q","dataService","$state",function(a,b,c,d){var e=c.getCars,f=c.getCar,g=c.createCar,h=c.updateCar,i=function(){return"production"===a.name?$scope.user.customData.organizationId:"3Qnv2pMAxLZqVdp7n8RZ0x"},j=function(){var a=b.defer();return e().then(function(b){a.resolve("undefined"!=typeof b.data[0]),a.reject(new Error("Error determining if there are cars."))}),a.promise},k=function(){var a=b.defer();return e().then(function(b){a.resolve(Object.keys(b.data[0].data)),a.reject(new Error("Failed to get fields"))}),a.promise},l=function(){var a=b.defer();return e().then(function(b){if("undefined"!=typeof b.data&&b.data.length>0){var c=b.data[0];a.resolve(c.identifier),a.reject(new Error("Error getting identifier."))}else a.resolve(null),a.reject(new Error("Error getting identifier."))}),a.promise},m=function(a,c,d){var e=b.defer();return a.assetType&&delete a.assetType,w().then(function(b){s().then(function(d){u(d,b).then(function(b){e.resolve({identifier:c,data:a,logs:b,driversAssigned:[],organizationId:i()}),e.reject(new Error("Error creating car"))})})}),e.promise},n=function(){var a=b.defer();return a.resolve({identifier:null,data:{},logs:[],driversAssigned:[],organizationId:i()}),a.reject(new Error("Error getting default car.")),a.promise},o=function(){var a=b.defer(),c={};return j().then(function(b){b?e().then(function(b){var d=b.data[0].data;_.each(d,function(a,b){c[b]={value:"boolean"===a.type?!1:null,log:a.log,dataType:a.dataType,type:a.type,expression:"function"===a.type?a.expression:void 0,expressionItems:"function"===a.type?a.expressionItems:void 0,leftExpressionItems:"inequality"===a.type?a.leftExpressionItems:void 0,rightExpressionItems:"inequality"===a.type?a.rightExpressionItems:void 0,inequalitySignId:"inequality"===a.type?a.inequalitySignId:void 0,leftExpression:"inequality"===a.type?a.leftExpression:void 0,rightExpression:"inequality"===a.type?a.rightExpression:void 0,inequalitySign:"inequality"===a.type?a.inequalitySign:void 0}}),a.resolve({formData:c,representativeData:d}),a.reject(new Error("Error initializing car form data"))}):(a.resolve({formData:n().data,representativeData:{}}),a.reject(new Error("Error initializing car form data")))}),a.promise},p=function(a,b){return{id:a.id,identifierValue:a.data[b].value}},q=function(a,b,e){b!==e&&_.each(a,function(a){a.identifier=e,c.updateCar(a)}),d.forceReload()},r=function(a){e().then(function(b){var c=b.data;_.each(c,function(b){b.identifier=a,h(b)})})},s=function(){var a=b.defer(),c=[];return e().then(function(b){var d=b.data;_.each(d,function(a){_.each(a.logs,function(a){c.push(a.weekOf)})}),a.resolve(_.uniq(c.sort(),!0).reverse()),a.reject(new Error("Error getting log dates"))}),a.promise},t=function(a,c){return b(function(b,d){var e={};e.data=a,e.createdAt=new Date,e.weekOf=c,b(e),d(new Error("Error creating blank log object"))})},u=function(a,c){var d=b.defer(),e=[];return _.each(a,function(a){e.push({data:c,weekOf:a,createdAt:new Date})}),d.resolve(e),d.reject(new Error("Error creating logs")),d.promise},v=function(){var a=b.defer(),c=[];return e().then(function(b){var d=b.data;d.length>0&&(c=_.filter(Object.keys(d[0].data),function(a){return d[0].data[a].log})),a.resolve(c),a.reject(new Error("Error getting fields to be logged"))}),a.promise},w=function(){var a=b.defer(),c={};return v().then(function(b){_.each(b,function(a){c[a]=null}),a.resolve(c),a.reject(new Error("Error creating log data"))}),a.promise},x=function(a){var c=b.defer(),d=function(a){console.error(a)},f=v(a).then(w,d),g=e().then(s,d);return b.all([f,g]).then(function(b){u(b[1],b[0]).then(function(b){a.logs=b,c.resolve(a),c.reject(new Error("Failed to populate logs for car "+a.id))},d)},d),c.promise};return{get:e,getById:f,update:h,saveCar:g,createCar:m,thereAreCars:j,getDefaultCar:n,getFields:k,simplify:p,updateIdentifier:q,_updateIdentifier:r,getIdentifier:l,getOrganizationId:i,getFormDataAndRepresentative:o,getLogDates:s,getFieldsToBeLogged:v,createLogData:w,createLog:t,populateLogs:x}}]),angular.module("clientApp").factory("underscore",["$window",function(a){return{_:a._}}]),angular.module("clientApp").factory("driverHelpers",["$q","dataService","ENV",function(a,b,c){var d=b.getDrivers,e=b.getDriver,f=b.createDriver,g=b.updateDriver,h=function(){return"production"===c.name?$scope.user.customData.organizationId:"3Qnv2pMAxLZqVdp7n8RZ0x"},i=function(a){return a["First Name"].value+" "+a["Last Name"].value},j=function(){var b=a.defer();return d().then(function(a){b.resolve("undefined"!=typeof a.data[0]),b.reject(new Error("Error determining if there are drivers."))}),b.promise},k=function(){var b=a.defer();return d().then(function(a){b.resolve(Object.keys(a.data[0].data)),b.reject(new Error("Failed to get fields"))}),b.promise},l=function(a){return"First Name"!=a&&"Last Name"!=a&&"Name"!=a},m=function(a){return console.log(a),null!==a["First Name"].value&&null!==a["Last Name"].value},n=function(b){var c=a.defer();return b.Name={value:i(b),log:!1,dataType:"text",type:"text"},c.resolve(b),c.reject(new Error("Failed to inject full name")),c.promise},o=function(b,c){var d=a.defer();return b.assetType&&delete b.assetType,n(b).then(function(a){v().then(function(a){r().then(function(c){t(c,a).then(function(a){d.resolve({identifier:"Name",data:b,logs:a,carsAssigned:[],assetsAssigned:[],organizationId:h()}),d.reject(new Error("Error creating driver"))})})})}),d.promise},p=function(){var b=a.defer();return b.resolve({identifier:"Name",data:{"First Name":{value:null,log:!1,dataType:"text",type:"text"},"Last Name":{value:null,log:!1,dataType:"text",type:"text"},Name:{value:null,log:!1,dataType:"text",type:"text"}},logs:[],carsAssigned:[],assetsAssigned:[],organizationId:h()}),b.reject(new Error("Error getting default driver.")),b.promise},q=function(){var b=a.defer(),c={};return j().then(function(a){if(a)d().then(function(a){var d=a.data[0].data;_.each(Object.keys(d),function(a){c[a]={value:null,log:d[a].log,dataType:d[a].dataType,type:d[a].type}}),b.resolve({formData:c,representativeData:d}),b.reject(new Error("Error initializing driver form data"))});else{var e=p();b.resolve({formData:e.data,representativeData:e.data}),b.reject(new Error("Error initializing driver form data"))}}),b.promise},r=function(){var b=a.defer(),c=[];return d().then(function(a){var d=a.data;d.length>0&&_.each(d,function(a){_.each(a.logs,function(a){c.push(a.weekOf),c=_.uniq(c.sort(),!0).reverse()})}),b.resolve(c),b.reject(new Error("Error getting log dates"))}),b.promise},s=function(b,c){return a(function(a,d){var e={};e.data=b,e.createdAt=new Date,e.weekOf=c,a(e),d(new Error("Error creating blank log object"))})},t=function(b,c){var d=a.defer(),e=[];return _.each(b,function(a){e.push({data:c,weekOf:a,createdAt:new Date})}),d.resolve(e),d.reject(new Error("Error creating blank logs array")),d.promise},u=function(){var b=a.defer(),c=[];return d().then(function(a){var d=a.data;d.length>0&&(c=_.filter(Object.keys(d[0].data),function(a){return d[0].data[a].log})),b.resolve(c),b.reject(new Error("Error getting fields to be logged"))}),b.promise},v=function(){var b=a.defer(),c={};return u().then(function(a){_.each(a,function(a){c[a]=null}),b.resolve(c),b.reject(new Error("Error creating log data"))}),b.promise},w=function(b){var c=a.defer(),e=function(a){console.error(a)},f=u(b).then(v,e),g=d().then(r,e);return a.all([f,g]).then(function(a){t(a[1],a[0]).then(function(a){b.logs=a,c.resolve(b),c.reject(new Error("Failed to populate logs for driver "+b.id))},e)},e),c.promise};return{getOrganizationId:h,get:d,getById:e,saveDriver:f,update:g,createDriver:o,thereAreDrivers:j,getFields:k,notName:l,namesNotNull:m,getFullName:i,updateFullName:n,getDefaultDriver:p,getFormDataAndRepresentative:q,getLogDates:r,getFieldsToBeLogged:u,createLogData:v,createLog:s,createLogs:t,populateLogs:w}}]),angular.module("clientApp").controller("DeleteObjModalCtrl",["$scope","$modal",function(a,b){a.open=function(a){var c=b.open({animation:!0,templateUrl:"views/deleteobjmodal.html",controller:"DeleteObjModalInstanceCtrl",size:"md",resolve:{id:function(){return a}}});c.result.then(function(a){console.log("passed back from DeleteFieldModalInstanceCtrl:",a)},function(){console.log("Modal dismissed at: "+new Date)})}}]),angular.module("clientApp").controller("DeleteObjModalInstanceCtrl",["id","dataService","$scope","$modalInstance","$state",function(a,b,c,d,e){c.input=null,c.objectType=null,c["delete"]=function(a){},c.postDeleteState=null,e.includes("driverProfile")?(console.log("called from driver ui"),c.objectType="driver",c["delete"]=b.deleteDriver,c.postDeleteState="dashboard.drivers"):e.includes("carProfile")?(console.log("called from car ui"),c.objectType="car",c.postDeleteState="dashboard.cars",c["delete"]=b.deleteCar):e.includes("prospectProfile")?(console.log("called from prospect ui"),c.objectType="prospect",c["delete"]=b.deleteProspect,c.postDeleteState="dashboard.prospects"):console.log("delete field modal called from invalid state",e.current),c.submit=function(){"DELETE"===c.input&&("undefined"!=typeof a&&null!==a&&"string"==typeof c.objectType&&c["delete"](a),c.ok())},c.ok=function(){e.go(c.postDeleteState),d.close({type:c.objectType,id:a})},c.close=function(){e.forceReload(),d.dismiss("cancel")}}]),angular.module("clientApp").controller("DeleteFieldModalCtrl",["dataService","$scope","$modal","$state",function(a,b,c,d){b.open=function(a,e){var f=c.open({animation:!0,templateUrl:"views/deletefieldmodal.html",controller:"DeleteFieldModalInstanceCtrl",size:a,resolve:{thing:function(){return e},getCars:["dataService",function(a){return d.includes("carProfile")||d.includes("dashboard.cars")?a.getCars():{}}],getDrivers:["dataService",function(a){return d.includes("driverrProfile")||d.includes("dashboard.drivers")?a.getDrivers():{}}],getProspects:["dataService",function(a){return d.includes("prospectProfile")||d.includes("dashboard.prospects")?a.getProspects():{}}],getAssets:function(){}}});f.result.then(function(a){b.input=a,console.log("passed back from DeleteFieldModalInstanceCtrl:",a)},function(){console.log("Modal dismissed at: "+new Date)})}}]),angular.module("clientApp").controller("DeleteFieldModalInstanceCtrl",["objectHelpers","$q","getAssets","getProspects","getDrivers","getCars","objectType","thing","dataService","$scope","$modalInstance","$state",function(a,b,c,d,e,f,g,h,i,j,k,l){var m=this;if(m.objects=[],m.update=null,j.confirmation={value:""},j.objectType=g,j.thing=h,"driver"===j.objectType)m.objects=e,m.update=i.updateDriver;else if("car"===j.objectType)m.objects=f,m.update=i.updateCar;else if("prospect"===j.objectType)m.objects=d,m.update=i.updateProspect;else{if("asset"!==j.objectType)throw Error("Undefined object type");m.objects=c,console.log(c),m.update=i.updateAsset}m.deleteExpressionsUsingField=function(a){var c=b.defer();return _.each(a.data,function(b,c,d){"function"===b.type?_.each(b.expressionItems,function(b){b.value===j.thing.fieldName&&(console.log(b.value+" is used in "+c+". deleting "+c+" from"+j.objectType+" "+a.id),delete a.data[c])}):"inequality"===b.type&&(_.each(b.leftExpressionItems,function(b){b.value===j.thing.fieldName&&(console.log(b.value+" is used in "+c+". deleting "+c+" from"+j.objectType+" "+a.id),delete a.data[c])}),_.each(b.rightExpressionItems,function(b){b.value===j.thing.fieldName&&(console.log(b.value+" is used in "+c+". deleting "+c+" from"+j.objectType+" "+a.id),delete a.data[c])}))}),c.resolve(a),c.reject(new Error("Error deleting functions and inequalities using "+j.thing.fieldName)),c.promise},j.submit=function(){if(console.log(j.thing),"DELETE"===j.confirmation.value&&void 0!==m.objects&&null!==m.objects)switch(j.thing.type){case"field":m.objects.forEach(function(b){a.removeFieldFromExpressions(b,j.thing.fieldName).then(function(c){a.updateDisplayExpressions(c).then(function(a){delete b.data[j.thing.fieldName],m.update(a)})})});break;case"log":m.objects.forEach(function(a){a.logs.forEach(function(b){b.weekOf===j.thing.logDate&&(a.logs.splice(a.logs.indexOf(b),1),m.update(a))})});break;default:console.error("Invalid delete")}j.ok()},j.ok=function(){l.forceReload(),k.close()},j.close=function(){l.forceReload(),k.dismiss("cancel")}}]),angular.module("clientApp").controller("AssignmentModalCtrl",["$datepicker","objectHelpers","objectType","subjectType","$q","$scope","getAssetTypes","getAssets","getCars","getDrivers","asset","car","driver","dataService","$modalInstance","$state",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){var q=this;q.fullObjects=[],q.simpleObjects=[],q.subject={},q.subjectType=d,q.updateObj=null,q.updateSubj=null,f.datepicker=datepicker,f.objIdentifier=null,f.formData={},f.objectType=c,f.assetTypes=g.data;var r=b.simplify;f.getAssetTypeIdentifier=function(){null!==f.formData.assetType&&"undefined"!=typeof f.formData.assetType},"driver"===q.subjectType?(console.log("assignment modal called from driverProfile"),q.subject=m,q.updateSubj=n.updateDriver,q.subjIdentifier="Name","car"===f.objectType?(q.updateObj=n.updateCar,i().then(function(a){q.fullObjects=a.data,f.objIdentifier=q.fullObjects[0].identifier,q.simpleObjects=r(q.fullObjects)})):"asset"===f.objectType&&(q.updateObj=n.updateAsset,h().then(function(a){q.fullObjects=a.data,q.simpleObjects=r(q.fullObjects),f.objIdentifiers=_.uniq(_.map(q.fullObjects,function(a){return a.assetType}))}))):"car"===q.subjectType?(console.log("assignment modal called from carProfile"),q.subject=l,q.updateSubj=n.updateCar,q.updateObj=n.updateDriver,q.subjIdentifier=q.subject.identifier,q.fullObjects=j.data,f.objIdentifier="Name",q.simpleObjects=r(q.fullObjects)):"asset"===q.subjectType?(console.log("assignment modal called from assetProfile"),q.subject=k,q.updateSubj=n.updateAsset,q.updateObj=n.updateDriver,q.subjIdentifier=q.subject.identifier,q.fullObjects=j.data,f.objIdentifier="Name",q.simpleObjects=r(q.fullObjects)):console.log("assignment modal called from invalid state",p.current),f.validForm=function(){return null===f.formData.objId||"undefined"==typeof f.formData.objId},f.reset=function(){f.formData={},f.form.$setPristine(),f.form.$setUntouched(),p.forceReload()},f.close=function(){p.forceReload(),o.close("ok")},q.getObjectIdentifierValue=function(a){var b=e.defer(),c=_.find(q.simpleObjects,function(b){return b.id==a});return b.resolve(c.identifierValue),b.reject("Failed to get identifier value"),b.promise},q.assignSubjectToObject=function(){console.log(q.subjIdentifier),console.log(q.subject);var a={id:q.subject.id,identifier:{name:q.subjIdentifier,value:q.subject.data[q.subjIdentifier].value},assetType:"asset"===q.subjectType?q.subject.assetType:null,dateAssigned:f.datepicker.dt.getTime(),dateUnassigned:null},b=_.find(q.fullObjects,function(a){return a.id==f.formData.objId});"driver"===f.objectType?"car"===q.subjectType?b.carsAssigned.push(a):"asset"===q.subjectType&&b.assetsAssigned.push(a):"car"===f.objectType?b.driversAssigned.push(a):"asset"===f.objectType?b.driversAssigned.push(a):console.log("Invalid assignment operation",{
subject:q.subjectType,objects:f.objectType}),q.updateObj(b)},f.submit=function(){q.getObjectIdentifierValue(f.formData.objId).then(function(a){var b={id:parseInt(f.formData.objId),identifier:{name:f.objIdentifier,value:a},assetType:"asset"===f.objectType?f.assetType:null,dateAssigned:f.datepicker.dt.getTime(),dateUnassigned:null};"driver"===q.subjectType?("car"===f.objectType?q.subject.carsAssigned.push(b):"asset"===f.objectType&&q.subject.assetsAssigned.push(b),q.updateSubj(q.subject)):"car"===q.subjectType?(q.subject.driversAssigned.push(b),q.updateSubj(q.subject)):"asset"===q.subjectType?(q.subject.driversAssigned.push(b),q.updateSubj(q.subject)):console.log("Invalid assignment operation",{subject:q.subjectType,objects:f.objectType}),q.assignSubjectToObject(),f.close()})}}]),angular.module("clientApp").factory("prospectHelpers",["ENV","$q","dataService","$state",function(a,b,c,d){function e(a){return null!==a&&"undefined"!=typeof a}var f=c.getProspects,g=c.getProspect,h=c.createProspect,i=c.updateProspect,j=c.deleteProspect,k=c.getProspectStatuses,l=c.updateProspectStatuses,m=function(){return"production"===a.name?$scope.user.customData.organizationId:"3Qnv2pMAxLZqVdp7n8RZ0x"},n=function(a){return a["First Name"].value+" "+a["Last Name"].value},o=function(){var a=b.defer();return f().then(function(b){a.resolve("undefined"!=typeof b.data[0]),a.reject(new Error("Error determining if there are prospects."))}),a.promise},p=function(){var a=b.defer();return f().then(function(b){a.resolve(Object.keys(b.data[0].data)),a.reject(new Error("Failed to get fields"))}),a.promise},q=function(a){return Object.keys(a.data)},r=function(a){return"First Name"!==a&&"Last Name"!==a&&"Name"!==a},s=function(a){return null!==a["First Name"].value&&null!==a["Last Name"].value},t=function(a){var c=b.defer();return a.Name={value:n(a),log:!1,dataType:"text",type:"text"},c.resolve(a),c.reject(new Error("Failed to inject full name")),c.promise},u=function(a){var c=b.defer();return a.assetType&&delete a.assetType,t(a).then(function(a){c.resolve({identifier:"Name",status:a.status.value,data:a,organizationId:m()}),c.reject(new Error("Error creating prospect"))}),c.promise},v=function(){var a,c,d=b.defer();return k().then(function(b){e(b.data)?b.data.statuses.length>0?(a=b.data.statuses,c=_.find(a,function(a){return a.special}),d.resolve(c),d.reject(new Error("Error getting default prospect status"))):d.reject(new Error("Error getting default prospect status: no statuses")):d.reject(new Error("Error getting default prospect status: return from getStatuses undefined"))}),d.promise},w=function(){return v().then(function(a){return{identifier:"Name",status:a,data:{"First Name":{value:null,log:!1,dataType:"text",type:"text"},"Last Name":{value:null,log:!1,dataType:"text",type:"text"},Name:{value:null,log:!1,dataType:"text",type:"text"},status:{value:a.value,log:!1,dataType:"text",type:"text"}},organizationId:m()}})},x=function(){var a=b.defer(),c={};return o().then(function(b){b?(console.log("there are prospects"),f().then(function(b){var d=b.data[0].data;_.each(Object.keys(d),function(a){c[a]={value:null,log:d[a].log,dataType:d[a].dataType,type:d[a].type}}),a.resolve({formData:c,representativeData:d}),a.reject(new Error("Error initializing prospect form data"))})):w().then(function(b){a.resolve({formData:b.data,representativeData:b}),a.reject(new Error("Error initializing prospect form data"))})}),a.promise},y=function(a,b){return a.status.value===b.value};return{getOrganizationId:m,get:f,getById:g,getStatuses:k,saveProspect:h,update:i,updateStatuses:l,createProspect:u,deleteProspect:j,thereAreProspects:o,_getFields:p,getFields:q,notName:r,namesNotNull:s,getFullName:n,updateFullName:t,getDefaultProspect:w,getFormDataAndRepresentative:x,getDefaultStatus:v,belongsToStatus:y}}]),angular.module("clientApp").controller("ProspectStatusModalCtrl",["dataService","$scope","getProspectStatuses","$state","$modalInstance",function(a,b,c,d,e){b.statuses=c.data,b.newStatus={value:null},b.validForm=function(){return null!==b.newStatus.value&&"undefined"!=typeof b.newStatus.value},b.submit=function(){b.statuses.statuses.push(b.newStatus),a.updateProspectStatuses(b.statuses),b.close()},b.reset=function(){b.newStatus={value:null}},b.close=function(){d.forceReload(),e.dismiss("cancel")}}]),angular.module("clientApp").controller("AddObjectModalCtrl",["$state","dataService","$scope","$modal",function(a,b,c,d){c.open=function(){var b=d.open({animation:!0,templateUrl:"views/addobjectmodal.html",controller:"AddObjectModalInstanceCtrl",size:"md"});b.result.then(function(b){a.forceReload()},function(){a.forceReload(),console.log("Modal dismissed at: "+new Date)})}}]),angular.module("clientApp").controller("AddObjectModalInstanceCtrl",["$timeout","getCars","getAssets","getProspects","getDrivers","objectType","$q","$modal","objectHelpers","assetHelpers","prospectHelpers","carHelpers","driverHelpers","dataService","$scope","$modalInstance","$state",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){var r=this;o.formData={},o.objects=[],o.identifier={value:null},o.currentIdentifier={value:null},o.fields=[],o.fieldsToHide=["Name","assetType","status"],o.statuses=[],o.status={},o.assetTypes=[],o.assetType={value:null},o.expressions=[],o.objectType=f,r.getFormDataAndReference=function(){},o.create=function(){},o.update=function(){},o.save=function(){},o.disableConditions=function(){return!0},o.hide=function(a){return _.contains(o.fieldsToHide,a)},o.invalidIdentifier=function(a){return null===a.value||"undefined"==typeof a.value?!0:!1},o.identifierChanged=function(){return o.identifier.value!==o.currentIdentifier.value},o.disableAddField=function(){return"asset"===o.objectType&&(null===o.formData.assetType||"undefined"==typeof o.formData.assetType)},o.renderForm=function(){},r.hideExpressions=function(a){var b=g.defer();return b.resolve(_.each(a.data,function(a,b){"function"===a.type?(o.fieldsToHide.push(b),o.expressions.push({field:b,expression:a.expression})):"inequality"===a.type&&(o.fieldsToHide.push(b),o.expressions.push({field:b,expression:a.leftExpression+" "+a.inequalitySign+" "+a.rightExpression}))})),b.reject(new Error("Error building or storing expression")),b.promise},"driver"===o.objectType?(o.objects=e.data,o.update=m.updateDriver,o.create=m.createDriver,o.save=m.saveDriver,r.getFormDataAndReference=i.getFormDataAndReference,r.getFormDataAndReference("driver").then(function(a){r.hideExpressions(a.referenceObject.data).then(function(){o.currentIdentifier.value="Name",angular.copy(o.currentIdentifier,o.identifier),o.formData=a.formData,o.formData.assetType={value:null},console.log(f+" fields to hide:",o.fieldsToHide)})})):"car"===o.objectType?(o.objects=b.data,o.update=l.updateCar,o.create=l.createCar,o.save=l.saveCar,r.getFormDataAndReference=i.getFormDataAndReference,r.getFormDataAndReference("car").then(function(a){l.getIdentifier().then(function(b){r.hideExpressions(a.referenceObject.data).then(function(){o.formData=a.formData,o.formData.assetType={value:null},o.fields=Object.keys(a.formData),o.fields=_.without(o.fields,"assetType"),o.currentIdentifier.value=b,angular.copy(o.currentIdentifier,o.identifier),o.disableConditions=function(a){return!0},console.log(f+" fields to hide:",o.fieldsToHide)})})})):"prospect"===o.objectType?(o.objects=d.data,o.update=k.update,o.create=k.createProspect,o.save=k.saveProspect,r.getFormDataAndReference=i.getFormDataAndReference,r.getFormDataAndReference("prospect").then(function(a){k.getStatuses().then(function(b){r.hideExpressions(a.referenceObject.data).then(function(){o.currentIdentifier.value="Name",angular.copy(o.currentIdentifier,o.identifier),o.statuses=b.data.statuses,o.formData=a.formData,o.formData.assetType={value:null},console.log(f+" fields to hide:",o.fieldsToHide)})})})):"asset"===o.objectType?(o.objects=c.data,o.update=j.updateAsset,o.create=j.createAsset,o.save=j.saveAsset,o.fieldsToHide.push("assetType"),r.getFormDataAndReference=j.getFormDataAndRepresentative,j.getAssetTypes().then(function(a){o.assetTypes=a.data.types,o.renderForm=function(a){console.log("rendering form for "+a),i.getFormDataAndReference("asset",a).then(function(b){console.log(b),o.currentIdentifier.value=b.referenceObject.identifier,r.hideExpressions(b.referenceObject).then(function(){o.fields=Object.keys(b.formData),o.formData=b.formData,console.log(o.formData),o.formData.assetType.value=a,o.disableConditions=j.invalidAssetType,angular.copy(o.currentIdentifier,o.identifier),console.log(f+" fields to hide:",o.fieldsToHide)})})}})):q.go("dashboard.cars"),o.submit=function(){o.create(o.formData,o.identifier.value,o.formData.assetType.value).then(function(a){console.log(a),i.evaluateExpressions(o.expressions,a).then(function(b){"car"===o.objectType?o.save(a).then(function(b){o.identifierChanged()&&_.each(o.objects,function(a){a.id!==b.data.id&&(a.identifier=o.identifier.value,o.update(a))}),o.ok(a)}):"prospect"===o.objectType?k.getDefaultStatus().then(function(b){a.status={value:o.status.value||b.value},a.data.status={value:o.status.value||b.value,log:!1,type:"text",dataType:"text"},o.save(a).then(function(b){o.identifierChanged()&&_.each(o.objects,function(a){a.id!==b.data.id&&(a.identifier=o.identifier.value,o.update(a))}),o.ok(a)})}):"driver"===o.objectType?o.save(a).then(function(b){console.log(b),o.identifierChanged()&&_.each(o.objects,function(a){a.id!==b.data.id&&(a.identifier=o.identifier.value,o.update(a))}),o.ok(a)}):"asset"===o.objectType&&o.save(a).then(function(b){if(o.identifierChanged()){var c=j.filterAssetsByType(o.objects,b.data.assetType);_.each(c,function(a){a.id!==b.data.id&&(a.identifier=o.identifier.value,o.update(obj))})}o.ok(a)})})})},o.reset=function(){o.formData={},o.form.$setPristine(),o.form.$setUntouched(),q.forceReload()},o.ok=function(a){q.forceReload(),p.close(a)},o.close=function(){q.forceReload(),p.dismiss("close")},r.updateModal=function(a){var b=g.defer();return"function"!==a.type&&"inequality"!==a.type?(o.fields.push(a.name),o.formData[a.name]=a.data,b.resolve(o.formData),b.reject(new Error("Error updating add object modal after adding number/text/boolean field"))):(o.fieldsToHide.push(a.name),o.expressions.push({field:a.name,expression:expression}),b.resolve(o.expressions),b.reject(new Error("Error updating add object modal after adding function/inequality field"))),b.promise},o.addField=function(a){var b=h.open({animation:!0,templateUrl:"views/addfieldmodal.html",controller:"AddFieldModalInstanceCtrl",size:"md",resolve:{getCars:["dataService",function(a){return"car"===f?o.objects:{}}],getDrivers:["dataService",function(a){return"driver"===f?o.objects:{}}],getProspects:["dataService",function(a){return"prospect"===f?o.objects:{}}],getAssets:function(){return"asset"===f?o.objects:{}},objectType:function(){return f},assetType:function(){return"asset"===f?a:null}}});b.result.then(function(a){"function"!==a.data.type&&"inequality"!==a.data.type?(o.fields.push(a.name),o.formData[a.name]=a.data):(o.fieldsToHide.push(a.name),o.expressions.push({field:a.name,expression:a.data.expression}))},function(){q.forceReload(),console.log("Modal dismissed at: "+new Date)})}}]),angular.module("clientApp").controller("AssetTypeLogsCtrl",["assetHelpers","$q","$scope","getAssets","getAssetTypes","$state",function(a,b,c,d,e,f){c.tabs=[],c.assetTypes=e.data.types,c.assetType=null,_.each(c.assetTypes,function(a){var b={title:a.value,active:!1};c.tabs.push(b)}),c.invalidAssetType=function(){return null===c.assetType||"undefined"==typeof c.assetType},c.renderLogs=function(b){c.assetType=b,c.getAssets(b).then(function(b){console.log(b),c.assets=b,c.simpleAssets=a.mapObject(b),c.getLogDates(b).then(function(a){console.log(a),c.dates=a,c.getMostRecentLogDate()})})},c.getAssets=function(a){var c=b.defer();return c.resolve(_.filter(d.data,function(b){return b.assetType===a})),c.reject(new Error("Error getting "+a+"s")),c.promise},c.getLogDates=function(a){var c=b.defer(),d=a.length?a[0].assetType:"(There are no assets)",e=[];return _.each(a,function(a,b){_.each(a.logs,function(a,b){e.push(a.weekOf)})}),c.resolve(_.uniq(e.sort(),!0).reverse()),c.reject(new Error("Error getting log dates for "+d)),c.promise},c.getMostRecentLogDate=function(){c.mostRecentLogDate=c.dates[0]},c.createNewRow=function(a){c.dates.push(a),c.getMostRecentLogDate(),c.renderLogs(c.assetType)},c.newDataObj=function(d){var e=b.defer(),f={};return c.assets.length>0?a.getFieldsToBeLogged(d).then(function(a){console.log(a),0===a.length?e.resolve({}):(_.each(a,function(a){f[a]=null}),e.resolve(f))}):e.reject(new Error("There are no assets for logging!")),e.promise},c.createLogForAsset=function(a,c,d){var e=b.defer();return a.logs.push({createdAt:new Date,weekOf:c,data:d}),e.resolve(a),e.reject(new Error("Error creating log for asset "+a.id)),e.promise},c.newLog=function(d){var e=c.dt,f=new Date(e.getFullYear(),e.getMonth(),e.getDate(),0,0,0).getTime();console.log(d);var g=c.newDataObj(d).then(function(b){console.log(b),_.each(c.assets,function(d){c.createLogForAsset(d,f,b).then(a.updateAsset)})});_.contains(c.dates,f)?alert("Log for "+e.toDateString()+" already exists!"):b.all([g]).then(function(a){c.createNewRow(f)})["catch"](function(a){console.error(a)})},c.getMostRecentLog=function(a,c){var d=b.defer(),e=_.find(a,function(a){return a.weekOf===c});return d.resolve(e),d.reject(new Error("Error getting most revent log for asset")),d.promise},c.save=function(b){_.each(c.assets,function(d){c.getMostRecentLog(d.logs,b).then(function(b){for(var e in b.data)null!==b.data[e]&&"undefined"!=typeof b.data[e]&&(d.data[e].value=b.data[e],a.updateAsset(d),c.simpleAssets=a.mapObject(c.assets))})})};c.dateOptions={formatYear:"yy",startingDay:0},c.getStartingDayNum=function(){return c.dateOptions.startingDay},c.getStartingDayWord=function(){switch(c.getStartingDayNum()){case 0:return"Sunday";case 1:return"Monday";default:return"Invalid day"}},c.setStartingDay=function(a){(0>a||a>1)&&alert("Invalid day"),c.dateOptions.startingDay=a},c.today=function(){c.dt=new Date},c.today(),c.clear=function(){c.dt=null},c.disabled=function(a,b){return"day"===b&&(0===a.getDay()||6===a.getDay())},c.toggleMin=function(){c.minDate=c.minDate?null:new Date},c.toggleMin(),c.maxDate=new Date(c.dt.getFullYear()+1,c.dt.getMonth()+1),c.open=function(a){c.status.opened=!0},c.setDate=function(a,b,d){c.dt=new Date(a,b,d)},c.formats=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],c.format=c.formats[0],c.status={opened:!1};var g=new Date;g.setDate(g.getDate()+1);var h=new Date;h.setDate(g.getDate()+2),c.events=[{date:g,status:"full"},{date:h,status:"partially"}],c.getDayClass=function(a,b){if("day"===b)for(var d=new Date(a).setHours(0,0,0,0),e=0;e<c.events.length;e++){var f=new Date(c.events[e].date).setHours(0,0,0,0);if(d===f)return c.events[e].status}return""}}]),angular.module("clientApp").factory("assetHelpers",["ENV","$q","dataService","$state",function(a,b,c,d){function e(a){return j().then(function(b){return"undefined"!=typeof b.data&&null!==b.data?{data:_.filter(b.data,function(b){var c="";return angular.copy(b.assetType,c),b.assetType===a})}:{data:[]}})}function f(a){var c=b.defer(),d=[];return e(a).then(function(a){var b=a.data;g(b)&&b.length>0?(_.each(b[0].logs,function(a){d.push(a.weekOf)}),c.resolve(_.uniq(d.sort(),!0).reverse()),c.reject(new Error("Error getting asset log dates"))):(c.resolve([]),c.reject(new Error("Error getting asset log dates")))}),c.promise}function g(a){return null!==a&&"undefined"!=typeof a}function h(a,c){var d=b.defer(),e=[];return _.each(a,function(a){e.push({data:c,weekOf:a,createdAt:new Date})}),d.resolve(e),d.reject(new Error("Error creating logs for asset")),d.promise}function i(a){var c=b.defer();return c.resolve({identifier:null,assetType:a,data:{assetType:{value:a,log:!1,type:"text",dataType:"text"}},logs:[],driversAssigned:[],organizationId:p()}),c.reject(new Error("Error getting default car.")),c.promise}var j=c.getAssets,k=c.getAsset,l=c.createAsset,m=c.updateAsset,n=c.deleteAsset,o=c.getAssetTypes,p=function(){return"production"===a.name?$scope.user.customData.organizationId:"3Qnv2pMAxLZqVdp7n8RZ0x"},q=function(a){var c=b.defer();return j().then(function(b){var d=_.filter(b.data,function(b){return b.assetType===a});c.resolve(d.length>0),c.reject(new Error("Error determining if there are assets."))}),c.promise},r=function(){var a=b.defer();return j().then(function(b){a.resolve(Object.keys(b.data[0].data)),a.reject(new Error("Failed to get fields"))}),a.promise},s=function(a){return Object.keys(a.data)},t=function(a){var c=b.defer(),d={};return z(a).then(function(b){console.log(b),_.each(b,function(a){d[a]=null}),console.log(d),c.resolve(d),c.reject(new Error("Error creating log data for assets "+a))}),c.promise},u=function(a,c,d){var e=b.defer();return t(d).then(function(b){f(d).then(function(f){h(f,b).then(function(b){e.resolve({identifier:c,assetType:d,data:a,logs:b,driversAssigned:[],organizationId:p()}),e.reject(new Error("Error creating asset of type "+a.assetType.value))})})}),e.promise},v=function(a){var c=b.defer();return j().then(function(b){var d=_.filter(b.data,function(b){return b.assetType===a});d.length?(c.resolve(d[0].identifier),c.reject(new Error("Error getting identifier."))):(c.resolve(null),c.reject(new Error("Error getting identifier.")))}),c.promise},w=function(a,b){return _.filter(a,function(a){return a.assetType===b})},x=function(a,b){return a.assetType===b},y=function(a){return null!==a.assetType||"undefined"==typeof a.assetType},z=function(a){var c=b.defer(),d=[];return j().then(function(b){var e=w(b.data,a);console.log(e),e.length>0?(d=_.filter(Object.keys(e[0].data),function(a){return console.log(e[0].data[a]),e[0].data[a].log}),console.log(d),c.resolve(d),c.reject(new Error("Error getting fields to be logged"))):(c.resolve(d),c.reject(new Error("Error getting fields to be logged")))}),c.promise},A=function(a,b,e){b!==e&&_.each(a,function(a){a.identifier=e,c.updateAsset(a)}),d.forceReload()};return{getOrganizationId:p,get:j,getAssetTypes:o,getByType:e,getById:k,saveAsset:l,update:m,createAsset:u,deleteAsset:n,thereAreAssetsOfType:q,_getFields:r,getFields:s,belongsToType:x,invalidAssetType:y,getIdentifier:v,getFieldsToBeLogged:z,updateIdentifier:A,filterAssetsByType:w,getDefaultAsset:i,getLogDates:f}}]),angular.module("clientApp").controller("AssetTypeModalCtrl",["dataService","$scope","getAssetTypes","$state","$modalInstance",function(a,b,c,d,e){b.assetTypes=c.data,b.newType={value:null},b.validForm=function(){return null!==b.newType.value&&"undefined"!=typeof b.newType.value},b.submit=function(){b.assetTypes.types.push(b.newType),a.updateAssetTypes(b.assetTypes),b.close()},b.reset=function(){b.newType={value:null}},b.close=function(){d.forceReload(),e.dismiss("cancel")}}]),angular.module("clientApp").directive("validFunction",function(){return{}}),angular.module("clientApp").controller("EditFieldModalCtrl",["objectHelpers","$modal","dataService","getDrivers","getAssets","getProspects","getCars","$modalInstance","$state","$scope","field","_object","objectType","$q","carHelpers","driverHelpers","prospectHelpers","assetHelpers",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){var s=this,t=(a.buildEvalExpression,a.buildDisplayExpression),u=p.notName;j.fieldNamesNotToEdit=[],j.statuses=null,j.prospectStatuses=null,j.loggable=function(a){return"prospect"!==j.objectType?u(a):!1},String.prototype.capitalizeIfStatus=function(){return"status"===this&&"prospect"===j.objectType?this.charAt(0).toUpperCase()+this.slice(1):this},j.dontEditFieldName=function(a){return _.contains(j.fieldNamesNotToEdit,a)},j.displayInequalitySign=function(a){switch(parseInt(a)){case 0:return">";case 1:return"≥";case 2:return"<";case 3:return"≤";default:return"?"}},s.buildTestExpressionItems=function(a){var b=n.defer(),c=[];return _.each(a,function(a){"field"===a.type?c.push({type:"field",value:"1"}):c.push(a)}),b.resolve(c),b.reject(new Error("Error building test expression")),b.promise},s.setValidFieldsForExpressions=function(a){var b=Object.keys(a);j.validFieldsForExpressions=_.filter(b,function(b){return"number"===a[b].dataType&&b!==k})},s.buildAndValidateExpression=function(){s.displayExpression().then(function(a){s.buildTestExpressionItems(a).then(function(a){t(a).then(function(a){s.validateExpression(a)})})})},j.buildAndValidateExpression=s.buildAndValidateExpression,s.displayExpression=function(){var a=n.defer();return"function"===j.field.type?(j.field.expression="",_.each(j.field.expressionItems,function(a){j.field.expression+=a.value}),a.resolve(j.field.expressionItems),a.reject(new Error("Error building display expression"))):j.rightSide.value?(j.field.rightExpression="",_.each(j.field.rightExpressionItems,function(a){j.field.rightExpression+=a.value}),a.resolve(j.field.rightExpressionItems),a.reject(new Error("Error building display expression"))):(j.field.leftExpression="",_.each(j.field.leftExpressionItems,function(a){j.field.leftExpression+=a.value}),a.resolve(j.field.leftExpressionItems),a.reject(new Error("Error building display expression"))),a.promise},s.validateExpression=function(a){j.expressionErrorMessage=void 0,j.validExpression.value=!0;try{j.$eval(a)}catch(b){console.error(b),j.validExpression.value=!1,j.expressionErrorMessage=b.message}},j.isProspectStatus=function(a){return"prospect"===j.objectType&&"status"===a},s.initialize=function(){j.logValueChanged={value:!1},j.expressionFieldSelect={value:null},j.expressionConstantInput={value:null},j.validExpression={value:!0},j.expressionErrorMessage=null,j.rightSide={value:!1},j.object=l,j.fields=_.without(Object.keys(j.object.data),k),j.objects=[],j.objectType=m,j.field={name:k,type:j.object.data[k].type,dataType:j.object.data[k].dataType,value:j.isProspectStatus(k)?j.object.status:j.object.data[k].value,log:j.object.data[k].log,expression:null,expressionItems:null,leftExpression:null,leftExpressionItems:null,rightExpression:null,rightExpressionItems:null,inequalitySignId:null,inequalitySign:null,identifier:j.object.identifier===k},"function"===j.field.type?(j.field.expression=j.object.data[k].expression,j.field.expressionItems=j.object.data[k].expressionItems):"inequality"===j.field.type&&(j.field.leftExpressionItems=j.object.data[k].leftExpressionItems,j.field.rightExpressionItems=j.object.data[k].rightExpressionItems,j.field.inequalitySignId=j.object.data[k].inequalitySignId,j.field.inequalitySign=j.object.data[k].inequalitySign,j.field.rightExpression=j.object.data[k].rightExpression,j.field.leftExpression=j.object.data[k].leftExpression)},s.initialize(),s.setValidFieldsForExpressions(j.object.data),"car"===m?(j.update=o.update,j.objects=g):"driver"===m?(j.fieldNamesNotToEdit.push("First Name","Last Name"),j.update=p.update,j.objects=d):"prospect"===m?(j.fieldNamesNotToEdit.push("status","First Name","Last Name"),j.update=q.update,j.objects=f,q.getStatuses().then(function(a){j.prospectStatuses=a.data,j.statuses=j.prospectStatuses.statuses})):"asset"===m?(j.update=r.update,j.objects=e):alert("Unrecognized object type!"),j.fieldNameAlreadyExists=function(){return _.contains(j.fields,j.field.name)},j.appendItemToFunction=function(a,b){"function"===j.field.type?j.field.expressionItems.push({type:b,value:a}):j.rightSide.value?j.field.rightExpressionItems.push({type:b,value:a}):j.field.leftExpressionItems.push({type:b,value:a}),s.buildAndValidateExpression(),j.expressionFieldSelect.value=null,j.expressionConstantInput.value=null},j.undoExpression=function(){if("function"===j.field.type){if(j.field.expressionItems.length){var a=j.field.expressionItems[j.field.expressionItems.length-1];console.log("removed:",a),j.field.expressionItems.pop()}}else if(j.rightSide.value){if(j.field.rightExpressionItems.length){var a=j.field.rightExpressionItems[j.field.rightExpressionItems.length-1];console.log("removed:",a),j.field.rightExpressionItems.pop()}}else if(j.field.leftExpressionItems.length){var a=j.field.leftExpressionItems[j.field.leftExpressionItems.length-1];console.log("removed:",a),j.field.leftExpressionItems.pop()}s.buildAndValidateExpression()},j.clearExpression=function(){"function"===j.field.type?(j.field.expression="",j.field.expressionItems=[]):j.rightSide.value?(j.field.rightExpression="",j.field.rightExpressionItems=[]):(j.field.leftExpression="",j.field.leftExpressionItems=[])},s.pruneFieldData=function(a){var b=n.defer(),c={};return angular.copy(a,c),delete c.identifier,delete c.name,"function"===j.field.type?(delete c.leftExpression,delete c.leftExpressionItems,delete c.rightExpression,delete c.rightExpressionItems,delete c.inequalitySignId,delete c.inequalitySign,a.expressionItems=j.field.expressionItems):"inequality"===j.field.type?(delete c.expressionItems,delete c.inequalitySign,delete c.expression,a.leftExpressionItems=j.field.leftExpressionItems,a.rightExpressionItems=j.field.rightExpressionItems,a.inequalitySignId=j.field.inequalitySignId):(delete c.expression,delete c.expressionItems,delete c.leftExpression,delete c.leftExpressionItems,delete c.rightExpression,delete c.rightExpressionItems,delete c.inequalitySignId,delete c.inequalitySign),b.resolve(c),b.reject(new Error("Error pruning field data")),b.promise},s.buildAndAppendDisplayExpression=function(b){var c=n.defer();return"undefined"!=typeof b.data[j.field.name]&&("function"===j.field.type?t(j.field.expressionItems).then(function(a){b.data[j.field.name].expression=a}):"inequality"===j.field.type&&t(j.field.leftExpressionItems).then(function(c){t(j.field.rightExpressionItems).then(function(d){var e=a.getInequalitySign(j.field.inequalitySignId);b.data[j.field.name].leftExpression=c,b.data[j.field.name].inequalitySign=e,b.data[j.field.name].rightExpression=d})})),c.resolve(b),c.reject(new Error("Error appending expression to field data")),c.promise},s.updateLogStuff=function(a){var b=n.defer();return j.logValueChanged.value?(a.data[k].log=j.field.log,a.data[j.field.name].log=j.field.log,j.field.log&&(console.log("log value changed to true"),_.each(a.logs,function(a){a.data[j.field.name]=null}))):j.field.log&&j.field.name!==k&&_.each(a.logs,function(a){a.data[j.field.name]=a.data[k],delete a.data[k]}),b.resolve(a),b.reject(new Error("Error updating logs for field "+j.field.name)),b.promise},j.submit=function(){"prospect"===j.objectType&&"status"===j.field.name?(j.object.status=j.field.value,j.object.data[j.field.name].value=j.field.value.value,j.update(j.object)):(console.log(j.field),_.each(j.objects,function(b){a.updateDataIfFieldNameChanged(k,j.field.name,b).then(function(b){s.updateLogStuff(b).then(function(b){s.buildAndAppendDisplayExpression(b).then(function(b){s.pruneFieldData(b.data[j.field.name]).then(function(){a.updateExpressionFieldsIfFieldNameChanged(k,j.field.name,b.data).then(function(c){b.data=c;var d=b;a.evaluateExpressionAndAppendValue(d.data,j.field.name).then(function(b){d.data=b;var c=d;a.storeFieldsUsed(c,j.field.name).then(function(b){a.updateFieldValueAndExpressionValues(j.field.value,j.field.name,b,j.object.id).then(function(a){j.field.identifier&&(a.identifier=j.field.name),j.object.id!==a.id||"prospect"!==j.objectType&&"driver"!==j.objectType||"First Name"!==j.field.name&&"Last Name"!==j.field.name||("First Name"===j.field.name?a.data.Name.value=j.field.value+" "+a.data["Last Name"].value:"Last Name"===j.field.name&&(a.data.Name.value=a.data["First Name"].value+" "+j.field.value)),j.update(a)})})})})})})})})})),j.ok()},j.invalidFieldType=function(){return null===j.field.type||"undefined"==typeof j.field.type||null===j.field.dataType||"undefined"==typeof j.field.dataType},j.emptyExpression=function(){return"function"===j.field.type?j.field.expressionItems.length>0?!1:!0:"inequality"===j.field.type?j.field.leftExpressionItems.length>0&&j.field.rightExpressionItems.length>0&&null!==j.field.inequalitySignId&&"undefined"!=typeof j.field.inequalitySignId?!1:!0:!1},j.inequalityIsComplete=function(){return"inequality"===j.field.type?j.field.rightExpressionItems.length>0&&j.field.leftExpressionItems.length>0&&null!==j.field.inequalitySignId&&"undefined"!=typeof j.field.inequalitySignId:!0},j.reset=function(){s.initialize(),j.form.$setPristine(),j.form.$setUntouched(),i.forceReload()},j.ok=function(){h.close()},j.close=function(){h.dismiss("cancel")},j["delete"]=function(){var a=b.open({animation:!0,templateUrl:"views/deletefieldmodal.html",controller:"DeleteFieldModalInstanceCtrl",size:"md",resolve:{thing:function(){return{fieldName:j.field.name,type:"field"}},getCars:function(){return"car"===j.objectType?j.objects:{}},getDrivers:function(){return"driver"===j.objectType?j.objects:{}},getProspects:function(){return"prospect"===j.objectType?j.objects:{}},getAssets:function(){return"prospect"===j.objectType?j.objects:{}},objectType:function(){return j.objectType}}});a.result.then(function(){j.ok()},function(){console.log("Modal dismissed at: "+new Date)})},j.setStatusChanged=function(a){var b=j.object;(b.status.value!=a||b.data.status.value!=a&&"undefined"!=typeof a&&null!==a)&&(j.statusChanged=!0,j.status=a)},j.updateStatus=function(a){console.log(a);var b=n.defer();return a.status.value=j.status,a.data.status.value=j.status,b.resolve(a),b.reject(new Error("Error updating status of prospect"+a.id)),b.promise}}]),angular.module("clientApp").factory("datepicker",function(){function a(){return u.startingDay}function b(a){if(!(a>=0&&6>=a))throw new Error("Invalid starting day");u.startingDay=a}function c(){switch(a()){case 0:return"Sunday";case 1:return"Monday";case 2:return"Tuesday";case 3:return"Wednesday";case 4:return"Thursday";case 5:return"Friday";case 6:return"Saturday";default:return"Invalid day"}}function d(){l=new Date}function e(){l=null}function f(a,b){return"day"===b&&(0===a.getDay()||6===a.getDay())}function g(){m=m?null:new Date}function h(a){o.opened=!0}function i(a,b,c){l=new Date(a,b,c)}function j(a,b){if("day"===b)for(var c=new Date(a).setHours(0,0,0,0),d=0;d<t.length;d++){var e=new Date(t[d].date).setHours(0,0,0,0);if(c===e)return t[d].status}return""}var k=864e5,l=new Date,m=null,n=new Date(l.getFullYear()+1,l.getMonth()+1),o={opened:!1},p=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],q=p[0],r=new Date(l.getTime()+k),s=new Date(l.getTime()+2*k),t=[{date:r,status:"full"},{date:s,status:"partially"}],u={formatYear:"yy",startingDay:0};return{getStartingDay:c,getStartingDayNum:a,setStartingDay:b,today:d,clear:e,disabled:f,toggleMin:g,open:h,setDate:i,getDayClass:j,dt:l,minDate:m,maxDate:n,status:o,format:q,tomorrow:r,afterTomorrow:s,events:t,dateOptions:u}}),angular.module("clientApp").factory("fieldHelpers",["$q","dataService","ENV",function(a,b,c){}]),angular.module("clientApp").controller("ObjectListCtrl",["objectType","objectHelpers","carHelpers","driverHelpers","prospectHelpers","assetHelpers","$state","$modal","$q","$scope",function(a,b,c,d,e,f,g,h,i,j){var k=this;j.objectType=a,j.order=[],k.getObjects=function(){switch(j.objectType){case"car":return j.title={value:"Car"},j.profile={state:"carData({ id: object.id })"},c.get;case"driver":return j.title={value:"Driver"},j.profile={state:"driverData({ id: object.id })"},d.get;case"prospect":return j.title={value:"Prospect"},j.profile={state:"prospectData({ id: object.id })"},e.getStatuses().then(function(a){k.prospectStatuses=a.data,j.statuses=k.prospectStatuses.statuses,j.newIndex={val:null};for(var b=0;b<j.statuses.length;b++)j.order[b]=b}),e.get;case"asset":return j.title={value:"Asset"},j.profile={state:"assetData({ id: object.id })"},f.getAssetTypes().then(function(a){j.assetTypes=a.data,j.types=j.assetTypes.types;for(var b=0;b<j.types.length;b++)j.order[b]=b}),f.get;default:return j.title={value:"Car"},j.profile={state:"carData({ id: object.id })"},c.get}},k.getObjects()().then(function(a){j.objects=a.data,j.simpleObjects=b.simplify(j.objects)}),j.thereAreObjects=function(){return"undefined"!=typeof j.objects&&j.objects.length>0},j.addObject=function(){var a=h.open({animation:!0,templateUrl:"views/addobjectmodal.html",
controller:"AddObjectModalInstanceCtrl",size:"md",resolve:{objectType:function(){return j.objectType},getCars:function(){return"car"===j.objectType?c.get():[]},getDrivers:function(){return"driver"===j.objectType?d.get():[]},getProspects:function(){return"prospect"===j.objectType?e.get():[]},getAssets:function(){return"asset"===j.objectType?f.get():[]},assetType:function(){return null}}});a.result.then(function(){},function(){console.log("Modal dismissed at: "+new Date)})},j.thereAreAssetsOfType=function(a){_.filter(j.assets,function(b){return b.assetTtype===a})},j.addType=function(){var a=h.open({animation:!0,templateUrl:"views/assetTypeModal.html",controller:"AssetTypeModalCtrl",size:"md",resolve:{getAssetTypes:function(){return f.getAssetTypes()}}});a.result.then(function(){console.log("AssetTypeModal dismissed at: "+new Date)})},j.belongsToType=f.belongsToType,Array.prototype.move=function(a,b){if(b>=this.length)for(var c=b-this.length;c--+1;)this.push(void 0);this.splice(b,0,this.splice(a,1)[0])},k.updateOrder=function(a,b){j.types.move(a,b),j.assetTypes.types=j.types},j.updateTypeInAssets=function(a,b){_.each(j.assets,function(c){c.status.value===a&&(c.status.value=b,c.data.status.value=b,f.update(c))})},j.saveType=function(a,b,c){b!=j.newIndex.val&&k.updateOrder(b,j.newIndex.val),f.updateTypes(j.assetTypes),j.updateTypeInAssets(c,a.name),g.forceReload()},j.belongsToStatus=e.belongsToStatus,k.updateOrder=function(a,b){j.statuses.move(a,b),k.prospectStatuses.statuses=j.statuses},k.updateStatusInProspects=function(a,b){_.each(j.objects,function(c){c.status.value===a&&(c.status.value=b,c.data.status.value=b,e.update(c))})},j.saveStatus=function(a,b,c){b!=j.newIndex.val&&k.updateOrder(b,j.newIndex.val),e.updateStatuses(k.prospectStatuses),k.updateStatusInProspects(c,a.name),g.forceReload()},k.getDefaultStatus=function(){return _.findWhere(j.statuses,{special:!0})},k.unassignProspects=function(a){var b=k.getDefaultStatus();_.each(j.objects,function(c){c.status.value===a&&(c.status=b,c.data.status=b,e.update(c))})},j.deleteStatus=function(a,b){j.statuses.splice(a,1),k.prospectStatuses.statuses=j.statuses,e.updateStatuses(k.prospectStatuses),k.unassignProspects(b),g.forceReload()},j.addStatus=function(){var a=h.open({animation:!0,templateUrl:"views/prospectstatusmodal.html",controller:"ProspectStatusModalCtrl",size:"md",resolve:{getProspectStatuses:function(){return e.getStatuses()}}});a.result.then(function(){console.log("Modal dismissed at: "+new Date)})}}]),angular.module("clientApp").factory("objectHelpers",["$rootScope","ENV","$q","dataService","$state","carHelpers","driverHelpers","prospectHelpers","assetHelpers",function(a,b,c,d,e,f,g,h,i){function j(a,b,d,e){var f=c.defer(),g=d.data[b];return d.id===e?"number"===g.type||"function"===g.type?("number"===g.type&&(g.value=a),_.each(g.expressionsUsedIn,function(a,b){console.log(b),s(d.data,b).then(function(a){d.data=a})}),f.resolve(d),f.reject(new Error("Error updating field value and updating expressions"))):"text"===g.type||"boolean"===g.type?(g.value=a,f.resolve(d),f.reject(new Error("Error updating field value and updating expressions"))):(f.resolve(d),f.reject(new Error("Error updating field value and updating expressions"))):(f.resolve(d),f.reject(new Error("Error updating field value and updating expressions: irrelevant object id"))),f.promise}function k(a){var b=c.defer();return _.each(a.data,function(a,b){"function"===a.type?l(a.expressionItems).then(function(b){a.expression=b}):"inequality"===a.type&&l(a.leftExpressionItems).then(function(b){l(a.rightExpressionItems).then(function(c){a.leftExpression=b,a.inequalitySign=r(a.inequalitySignId),a.rightExpression=c})})}),b.resolve(a),b.reject(new Error("Error building or storing expression")),b.promise}function l(a){var b=c.defer(),d="";return _.each(a,function(a){d+=a.value}),b.resolve(d),b.reject(new Error("Error building expression")),b.promise}function m(a,b){var d=c.defer(),e=a.data[b];return"undefined"!=typeof e&&_.each(e.expressionsUsedIn,function(c,d){_.each(c,function(c,e){_.each(c,function(c,e){_.each(c,function(c,f){a.data[d][e].splice(c,1),a.data[d].fieldsUsed[b].locations[e].splice(f,1)})})})}),d.resolve(a),d.reject(new Error("Error removing "+b+" from functions and inequalities")),d.promise}function n(a){return null!==a&&"undefined"!=typeof a}function o(a,b){var d=c.defer();return"undefined"==typeof a?_.filter(b.data,function(a,b){return"function"===a.type||"inequality"===a.type}).each(function(a,c){s(b.data,c,b).then(function(a){b.data=a})}):_.each(a,function(a){var c=a.field||a.name;s(b.data,c,b).then(function(a){b.data=a})}),d.resolve(b),d.reject(new Error("Error evaluating expressions")),d.promise}function p(a){return _.map(a,function(a){return{id:a.id,identifier:a.identifier,identifierValue:a.data[a.identifier].value,assetType:n(a.assetType)&&"string"==typeof a.assetType?a.assetType:null}})}function q(a){return{id:a.id,identifier:a.identifier,identifierValue:a.data[a.identifier].value,assetType:n(a.assetType)&&"string"==typeof a.assetType?a.assetType:null}}function r(a){switch(parseInt(a)){case 0:return">";case 1:return">=";case 2:return"<";case 3:return"<=";default:return"?"}}function s(b,d,e){var f=c.defer(),g="";return"function"===b[d].type?w(b,b[d].expressionItems).then(function(c){console.log(c),b[d].value=n(c)?a.$eval(c):null,f.resolve(b),f.reject(new Error("Error evaluating expression"))}):"inequality"===b[d].type?w(b,b[d].leftExpressionItems).then(function(c){w(b,b[d].rightExpressionItems).then(function(e){g=r(b[d].inequalitySignId),b[d].value=n(c)&&n(g)&&n(e)?a.$eval(c+g+e):null,f.resolve(b),f.reject(new Error("Error evaluating expression"))})}):(f.resolve(b),f.reject(new Error("Error evaluating expression"))),f.promise}function t(a,b,d){var e=c.defer();return a!==b&&(d.data[b]=d.data[a],delete d.data[a]),e.resolve(d),e.reject(new Error("Error changing field name "+a+" to "+b)),e.promise}function u(b,d,e,f){var g=c.defer();return b!==d&&v(b,d,e).then(function(b){_.each(b,function(b,c,d){"function"===b.type?w(d,b.expressionItems,f).then(function(b){e[c].value=a.$eval(b)}):"inequality"===b.type&&w(d,b.leftExpressionItems,f).then(function(g){w(d,b.rightExpressionItems,f).then(function(d){var f=r(b.inequalitySignId);e[c].value=a.$eval(g+f+d)})})})}),g.resolve(e),g.reject(new Error("Error updating expressions")),g.promise}function v(b,d,e){var f=c.defer();return _.each(e,function(a,c,e){"function"===a.type?a.expression=_.each(a.expressionItems,function(c){"field"===c.type&&c.value===b&&(c.value=d,a.fieldsUsed[d]=a.fieldsUsed[b],delete a.fieldsUsed[b])}).reduce(function(a,b){return a+b.value},""):"inequality"===a.type&&(a.leftExpression=_.each(a.leftExpressionItems,function(a){"field"===a.type&&a.value===b&&(a.value=d)}).reduce(function(a,b){return a+b.value},""),a.rightExpression=_.each(a.rightExpressionItems,function(a){"field"===a.type&&a.value===b&&(a.value=d)}).reduce(function(a,b){return a+b.value},""),a.inequalitySign=r(a.inequalitySignId),a.fieldsUsed[d]=a.fieldsUsed[b],delete a.fieldsUsed[b])}),f.resolve(e),f.reject(new Error("Error replacing "+b+" with "+d+" for expressions in "+a.objectType)),f.promise}function w(a,b,d){var e=c.defer(),f="";return _.each(b,function(b){"field"===b.type?n(a[b.value].value)?f+=a[b.value].value:e.resolve(null):f+=b.value}),e.resolve(f),e.reject(new Error("Error building evaluation expression")),e.promise}function x(a,b,d){var e=c.defer();return _.each(d.data[a].fieldsUsed,function(c){_.where(d.data[c.name].expressionsUsedIn,{name:a}).each(function(a){a.name=b})}),e.resolve(d),e.reject(new Error("Error replacing "+a+" with "+b+" for expressionsUsedIn for field "+field)),e.promise}function y(a,b,d){var e=c.defer();return _.each(d.data[a].expressionsUsedIn,function(c){_.each(c.locations,function(e){var f=_.where(d.data[c.name][e],{type:"field",value:a}).each(function(a){a.value=b}).reduce(function(a,b){return a+b.value},"");if("leftExpressionItems"===e)d.data[c.name].leftExpression=f;else if("rightExpressionItems"===e)d.data[c.name].rightExpression=f;else{if("expressionItems"!==e)throw Error("Error: unknown expressionItems for "+c.name+" "+e);d.data[c.name].expression=f}})}),e.resolve(d),e.reject(new Error("Error replacing "+a+" with "+b+" for fields used in expressions "+expressionField.name)),e.promise}function z(a,b,d){var e=c.defer();return _.each(b,function(b,c){a[c].expressionsUsedIn[d]=b}),e.resolve(a),e.reject(new Error("Error storing expression"+d+" using in field data")),e.promise}function A(a,b){var d=c.defer(),e=n(a.id)&&n(a.organizationId)?a.data:a,f=e[b];if("function"===f.type){var g=f.expressionItems;B(g).then(function(c){f.fieldsUsed=c,z(e,c,b).then(function(c){a.data=c,d.resolve(a),d.reject(new Error("Error storing fields used by "+b))})})}else if("inequality"===f.type){var h=f.leftExpressionItems,i=f.rightExpressionItems;B(h).then(function(c){B(i,c).then(function(c){f.fieldsUsed=c,z(e,c,b).then(function(c){a.data=c,d.resolve(a),d.reject(new Error("Error storing fields used by "+b))})})})}else d.resolve(a),d.reject(new Error("Error: "+b+" has invalid type. This works only for function and inequality fields."));return d.promise}function B(a,b){var d=c.defer(),b=b||{};return _.each(a,function(a,c){var d=a.location;"field"!==a.type||_.has(b,a.value)?"field"===a.type&&_.has(b,a.value)&&(_.isEmpty(b[a.value].locations[d])&&(b[a.value].locations[d]=[]),b[a.value].locations[d].push(c)):((_.isEmpty(b)||_.isEmpty(b[a.value]))&&(b[a.value]={locations:{}}),b[a.value].locations[d]=[],b[a.value].locations[d].push(c))}),d.resolve(b),d.reject(new Error("Error pairing field with indices in expression items")),d.promise}function C(a,b){var d,e,j,k,l=c.defer(),m={};return"car"===a?(e=f.get,j=f.getDefaultCar):"driver"===a?(e=g.get,j=g.getDefaultDriver):"prospect"===a?(e=h.get,j=h.getDefaultProspect):"asset"===a?(e=i.getByType,j=i.getDefaultAsset):l.reject(void 0),e(b).then(function(c){console.log(c),n(c.data)&&c.data.length>0?(k=c.data[0],d=k.data,_.each(d,function(a,b,c){m[b]={value:"boolean"===a.type?!1:null,log:a.log,dataType:a.dataType,type:a.type},"function"===a.type&&(m[b].expression=a.expression),"function"===a.type&&(m[b].expressionItems=a.expressionItems),"inequality"===a.type&&(m[b].leftExpressionItems=a.leftExpressionItems),"inequality"===a.type&&(m[b].rightExpressionItems=a.rightExpressionItems),"inequality"===a.type&&(m[b].inequalitySignId=a.inequalitySignId),"inequality"===a.type&&(m[b].leftExpression=a.leftExpression),"inequality"===a.type&&(m[b].rightExpression=a.rightExpression),"inequality"===a.type&&(m[b].inequalitySign=a.inequalitySign),("number"===a.type||"function"===a.type)&&(m[b].expressionsUsedIn=a.expressionsUsedIn),("inequality"===a.type||"function"===a.type)&&(m[b].fieldsUsed=a.fieldsUsed)}),l.resolve({formData:m,referenceObject:k}),l.reject(new Error("Error initializing form data for "+a))):j(b).then(function(b){l.resolve({formData:b.data,referenceObject:b}),l.reject(new Error("Error initializing form data for "+a))})}),l.promise}return{isValid:n,simplify:p,simplifyOne:q,getInequalitySign:r,updateExpressionFieldsIfFieldNameChanged:u,updateExpressionNameInFields:x,updateFieldNameInExpressions:y,storeFieldsUsed:A,evaluateExpressionAndAppendValue:s,evaluateExpressions:o,removeFieldFromExpressions:m,buildDisplayExpression:l,buildEvalExpression:w,updateDisplayExpressions:k,updateFieldValueAndExpressionValues:j,updateDataIfFieldNameChanged:t,getFormDataAndReference:C}}]),angular.module("clientApp").controller("ObjectDataCtrl",["objectType","objectId","objectHelpers","assetHelpers","prospectHelpers","driverHelpers","carHelpers","$q","$state","$scope","$modal",function(a,b,c,d,e,f,g,h,i,j,k){var l=this;j.objectType=a,j.carIdentifier=null,j.valid=function(a){return null!==a&&"undefined"!=typeof a},l.getObject=function(){return"car"===j.objectType?(j.state={data:"carData({ id: object.id })",logs:"carLogs({ id: object.id })"},g.getById):"driver"===j.objectType?(j.state={data:"driverData({ id: object.id })",logs:"driverLogs({ id: object.id })"},g.getIdentifier().then(function(a){j.carIdentifier=a}),f.getById):"prospect"===j.objectType?(j.state={data:"prospectData({ id: object.id })",logs:null},e.getById):"asset"===j.objectType?(j.state={data:"assetData({ id: object.id })",logs:"assetLogs({ id: object.id })"},d.getById):void 0},l.getObjects=function(a){return"car"===j.objectType?g.get:"driver"===j.objectType?f.get:"prospect"===j.objectType?e.get:"asset"===j.objectType?d.getByType:void 0},l.getObject()(b).then(function(a){"undefined"!=typeof a&&(j.object=a.data),l.assetType=j.object.assetType,j.identifierValue=j.object.data[j.object.identifier].value,j.tabs=[{title:"Data",active:!0,state:j.state.data},{title:"Logs",active:!1,state:j.state.logs}],l.getObjects()(j.object.assetType).then(function(a){l.objects=a.data})}),j.addField=function(){var a=k.open({animation:!0,templateUrl:"views/addfieldmodal.html",controller:"AddFieldModalInstanceCtrl",size:"md",resolve:{getCars:function(){return"car"===j.objectType?l.objects:{}},getDrivers:function(){return"driver"===j.objectType?l.objects:{}},getProspects:function(){return"prospect"===j.objectType?l.objects:{}},getAssets:function(){return"asset"===j.objectType?l.objects:{}},assetType:function(){return"asset"===j.objectType?l.assetType:null},objectType:function(){return j.objectType}}});a.result.then(function(){i.forceReload()},function(){i.forceReload(),console.log("Modal dismissed at: "+new Date)})},j.assign=function(a){var b=k.open({animation:!0,templateUrl:"views/assignmentmodal.html",controller:"AssignmentModalCtrl",size:"md",resolve:{getDrivers:function(){return"car"===j.objectType?f.get:null},getCars:function(){return"driver"===j.objectType?g.get:null},driver:function(){return"driver"===j.objectType?j.object:null},car:function(){return"car"===j.objectType?j.object:null},subjectType:function(){return j.objectType},objectType:function(){return a},getAssetTypes:function(){return"driver"===j.objectType?d.getAssetTypes:null},getAssets:function(){return"driver"===j.objectType?d.getAssets:null},asset:function(){return"asset"===j.objectType?f.get:null}}});b.result.then(function(a){console.log("passed back from AssignmentModalCtrl:",a)},function(){console.log("Modal dismissed at: "+new Date)})},j.editField=function(a,b){var c=k.open({animation:!0,templateUrl:"views/editFieldModal.html",controller:"EditFieldModalCtrl",size:"md",resolve:{field:function(){return b},_object:function(){return a},objectType:function(){return j.objectType},getCars:function(){return"car"===j.objectType?l.objects:[]},getProspects:function(){return"prospect"===j.objectType?l.objects:[]},getDrivers:function(){return"driver"===j.objectType?l.objects:[]},getAssets:function(){return"asset"===j.objectType?l.objects:[]}}});c.result.then(function(){i.forceReload()},function(){console.log("Modal dismissed at: "+new Date),i.forceReload()})},j.notName=function(a){return("prospect"===j.objectType||"driver"===j.objectType)&&"Name"===a||"assetType"===a},j.notStatus=function(a){return"status"!=a.toLowerCase()},String.prototype.capitalizeIfStatus=function(){return"status"===this&&"prospect"===j.objectType?this.charAt(0).toUpperCase()+this.slice(1):this},j.notNameOrStatus=function(a){return"First Name"!=a&&"Last Name"!=a&&"Name"!==a&&"status"!=a.toLowerCase()},l.getUniqueFieldName=function(a,b){return _.contains(a,b)?l.getUniqueFieldName(a,"~"+b):b},l.getFieldsInCommon=function(a,b){var c=h.defer(),d=Object.keys(a).length,e=Object.keys(b).length,f=[];return e>=d?_.each(a,function(a,c){"undefined"!=typeof b[c]&&b[c].type===a.type&&f.push(c)}):_.each(b,function(b,c){"undefined"!=typeof a[c]&&a[c].type===b.type&&f.push(c)}),c.resolve(f),c.reject(new Error("Error getting fields in common between driver and prospect")),c.promise},l.partitionFields=function(a,b){var c=h.defer();return l.getFieldsInCommon(a,b).then(function(d){var e=Object.keys(a),f=Object.keys(b),g=[],h=[];g=_.difference(e,d),h=_.difference(f,d),c.resolve({uniqueToProspect:_.without(g,"status"),uniqueToDriver:h,inCommon:d}),c.reject(new Error("Error partitioning driver and prospect fields"))}),c.promise},l.splitProspectData=function(a,b,c){var d=h.defer(),f={},g={};angular.copy(b,f);var i=_.difference(Object.keys(b),Object.keys(a));return i=_.reject(i,function(b){return _.contains(Object.keys(a),b)}),_.each(c,function(c){if(delete f[c],g[c]=b[c],e.notName(c)){var d=l.getUniqueFieldName(Object.keys(a),c);i.push(d),g[d]=g[c],delete g[c]}}),d.resolve({prospectDataFieldsUnCommon:prospectDataFieldsUnCommon,prospectDataFieldsInCommon:prospectDataFieldsInCommon,prospectFieldsToAddToAllDrivers:_.without(i,"status")}),d.reject(new Error("Error splitting prospect data via fields in common with driver data.")),d.promise},l.resolveNameConflicts=function(a,b){var d=h.defer();return _.each(a.uniqueToProspect,function(d){var e=l.getUniqueFieldName(a.uniqueToDriver,d);e!==d&&(a.uniqueToProspect[_.indexOf(a.uniqueToProspect,d)]=e,b[e]=b[d],delete b[d],c.updateExpressionFieldsIfFieldNameChanged(d,e,b).then(function(a){b=a}))}),d.resolve({partedFields:a,prospectData:b}),d.reject(new Error("Error changing prospect field names")),d.promise},l.addProspectFieldsToExistingDrivers=function(a,b){var c=h.defer(),d=a;return console.log(d),console.log(b),f.get().then(function(a){var e=a.data;"undefined"!=typeof e&&null!==e&&e.length>0?_.each(e,function(a,e,g){_.each(d,function(d){a.data[d]={value:null,log:!1,type:b[d].type,dataType:b[d].dataType,expression:"function"===b[d].type?b[d].expression:void 0,expressionItems:"function"===b[d].type?b[d].expressionItems:void 0,leftExpressionItems:"inequality"===b[d].type?b[d].leftExpressionItems:void 0,rightExpressionItems:"inequality"===b[d].type?b[d].rightExpressionItems:void 0,inequalitySignId:"inequality"===b[d].type?b[d].inequalitySignId:void 0,inequalitySign:"inequality"===b[d].type?b[d].inequalitySign:void 0,leftExpression:"inequality"===b[d].type?b[d].leftExpression:void 0,rightExpression:"inequality"===b[d].type?b[d].rightExpression:void 0},a.data.status&&delete a.data.status,f.update(a).then(function(a){0===e&&(c.resolve(a.config.data.data),c.reject(new Error("Error getting updated driver data after adding prospect fields")))})})}):(c.resolve(b),c.reject(new Error("Error getting updated driver data after adding prospect fields")))}),c.promise},l.buildNewDriverData=function(a,b){var c=h.defer();return _.each(a,function(c,d){_.contains(b.inCommon,d)||_.contains(b.uniqueToProspect,d)?a[d]=j.object.data[d]:a[d].value=null}),c.resolve(a),c.reject(new Error("Error creating new driver from prospect")),c.promise},j.convert=function(){c.getFormDataAndReference("driver").then(function(a){console.log(a),l.partitionFields(j.object.data,a.referenceObject.data).then(function(a){console.log(a),console.log(j.object.data),l.resolveNameConflicts(a,j.object.data).then(function(a){console.log(a),l.addProspectFieldsToExistingDrivers(a.partedFields.uniqueToProspect,a.prospectData).then(function(b){console.log(b),l.buildNewDriverData(b,a.partedFields).then(function(a){console.log(a),f.createDriver(a).then(function(a){a.data.status&&delete a.data.status,console.log(a),f.saveDriver(a).then(function(){e.deleteProspect(j.object.id),i.go("dashboard.prospects")})})})})})})})}}]),angular.module("clientApp").controller("ObjectLogsCtrl",["objectType","objectId","carHelpers","driverHelpers","prospectHelpers","assetHelpers","$state","$q","$scope",function(a,b,c,d,e,f,g,h,i){var j=this;j.objectType=a,j.logDataObj={},j.getObject=function(){return"car"===j.objectType?(j.update=c.update,i.state={data:"carData({ id: object.id })",logs:"carLogs({ id: object.id })"},c.getById):"driver"===j.objectType?(j.update=d.update,i.state={data:"driverData({ id: object.id })",logs:"driverLogs({ id: object.id })"},d.getById):"prospect"===j.objectType?(j.update=e.update,i.state={data:"prospectData({ id: object.id })",logs:null},e.getById):"asset"===j.objectType?(j.update=f.update,i.state={data:"assetData({ id: object.id })",logs:"assetLogs({ id: object.id })"},f.getById):void 0},j.getLogDates=function(){return"car"===j.objectType?c.getLogDates:"driver"===j.objectType?d.getLogDates:"prospect"===j.objectType?function(){}:"asset"===j.objectType?f.getLogDates:void 0},j.getObject()(b).then(function(a){i.object=a.data,i.identifierValue=i.object.data[i.object.identifier].value,i.assetType=i.object.assetType||null,i.tabs=[{title:"Data",active:!1,state:i.state.data},{title:"Logs",active:!0,state:i.state.logs}],j.getLogDates()(i.assetType).then(function(a){j.dates=a,j.mostRecentLogDate=j.getMostRecentLogDate(),j.getFieldsToBeLogged(i.object).then(function(a){i.fields=a,j.logDataToArray()})})}),i.getLogDataByDate=function(a){return j.logDataObj[a]},i.notExpressionField=function(a){return"function"!==a&&"inequality"!==a},j.logDataToArray=function(){_.each(j.dates,function(a){var b=_.findWhere(i.object.logs,{weekOf:a}),c=[];_.each(i.fields,function(a){c.push({field:a,value:b.data[a],type:i.object.data[a].type})}),j.logDataObj[a]=c})},j.getMostRecentLogDate=function(){return j.dates[0]},j.getFieldsToBeLogged=function(a){var b=h.defer(),c=[];if(a)for(var d in a.data)a.data[d].log===!0&&c.push(d);return b.resolve(c),b.reject(new Error("Error getting fields to be logged")),b.promise},j.updateMostRecentData=function(){var a=h.defer(),b=_.find(i.object.logs,function(a){return a.weekOf===j.mostRecentLogDate});for(var c in b.data)null!==b.data[c]&&"undefined"!=typeof b.data[c]&&(i.object.data[c].value=b.data[c]);return a.resolve(i.object),a.reject(new Error("Errror updating most recent log")),a.promise},i.save=function(a){a===j.mostRecentLogDate&&(console.log("most recent updated"),j.updateMostRecentData().then(function(a){j.update(a)})),j.update(i.object)}}]),angular.module("clientApp").controller("ObjectsLogsCtrl",["$modal","objectType","objectHelpers","datepicker","carHelpers","driverHelpers","prospectHelpers","assetHelpers","$q","$scope","$state",function(a,b,c,d,e,f,g,h,i,j,k){var l=this;j.objectType=b,j.datepicker=d,j.dummyNum={value:null},l.getObjects=function(){return"car"===j.objectType?(j.title="Car",j.state={logs:"carLogs({ id: object.id })"},l.update=e.update,e.get):"driver"===j.objectType?(j.title="Driver",j.state={logs:"driverLogs({ id: object.id })"},l.update=f.update,f.get):"prospect"===j.objectType?(j.title="Prospect",j.state=null,l.update=g.update,g.get):"asset"===j.objectType?(j.state={logs:"assetLogs({ id: object.id })"},l.update=h.update,h.getAssetTypes):void 0},l.getLogDates=function(){return"car"===j.objectType?e.getLogDates:"driver"===j.objectType?f.getLogDates:"prospect"===j.objectType?function(){}:"asset"===j.objectType?h.getLogDates:void 0},l.getAssetsOfTypeAndLogs=function(a){h.getByType(a).then(function(a){j.objects=c.isValid(a.data)?a.data:[],j.simpleObjects=c.simplify(j.objects),l.identifier=j.objects[0].identifier}),l.getLogDates()(a).then(function(a){j.dates=a,l.getMostRecentLogDate()})},l.getObjects()().then(function(a){"asset"!==j.objectType?j.objects=a.data:(j.assetTypes=a.data.types,j.assetType=j.assetTypes[0].value,j.tabs=[],_.each(j.assetTypes,function(a,b){j.tabs.push({title:a.value,active:0===b})}),l.getAssetsOfTypeAndLogs(j.assetType))}),j.renderLogs=function(a){j.assetType=a,j.title=a,l.getAssetsOfTypeAndLogs(j.assetType)},j.ifAssetIsOfType=function(a){return"asset"===j.objectType?a.assetType===j.assetType:!0},l.getMostRecentLogDate=function(){j.dates.length>0?l.mostRecentLogDate=j.dates[0]:l.mostRecentLogDate=null},l.getFieldsToBeLogged=function(a){var b=i.defer(),c=[];for(var d in a.data)a.data[d].log===!0&&c.push(d);return b.resolve(c),b.reject(new Error("Error getting fields to be logged")),b.promise},l.newDataObj=function(){var a=i.defer(),b={},c="asset"!==j.objectType?j.objects:h.filterAssetsByType(j.objects,j.assetType);return l.getFieldsToBeLogged(c[0]).then(function(a){_.each(a,function(a){b[a]=null})}),a.resolve(b),a.reject(new Error("Error creating log.data")),a.promise},l.createLogForObject=function(a,b,c){var d=i.defer();return _.contains(j.dates,b)||a.logs.push({createdAt:new Date,weekOf:b,data:c}),d.resolve(a),d.reject(new Error("Error creating log for object "+a.id)),d.promise},j.newLog=function(){var a=j.datepicker.dt,b=new Date(a.getFullYear(),a.getMonth(),a.getDate(),0,0,0).getTime(),c=l.newDataObj().then(function(a){_.each(j.objects,function(c){l.createLogForObject(c,b,a).then(l.update)})});_.contains(j.dates,b)?alert("Log for "+a.toDateString()+" already exists!"):i.all([c]).then(function(a){l.createNewRow(b),k.forceReload()})["catch"](function(a){console.error(a)})},j.notExpressionField=function(a,b){var c,d;return"asset"===j.objectType?b.assetType===j.assetType?(d=h.filterAssetsByType(j.objects,j.assetType),c=d[0].data[a].type,"function"!==c&&"inequality"!==c):!1:"asset"!==j.objectType?(c=j.objects[0].data[a].type,"function"!==c&&"inequality"!==c):void 0},j.save=function(a){_.each(j.objects,function(b){if("asset"!==j.objectType){if(a===l.mostRecentLogDate){var c=_.find(b.logs,function(a){return a.weekOf===l.mostRecentLogDate});for(var d in c.data)null!==c.data[d]&&"undefined"!=typeof c.data[d]&&(b.data[d].value=c.data[d])}}else if(j.assetType===j.objectType&&a===l.mostRecentLogDate){var c=_.find(b.logs,function(a){return a.weekOf===l.mostRecentLogDate});for(var d in c.data)null!==c.data[d]&&"undefined"!=typeof c.data[d]&&(b.data[d].value=c.data[d])}l.update(b)})},j.getLog=function(a){return _.find(j.object.logs,function(b){return b.weekOf===a})},j.invalidEntries=[],j.validValue=!0,j.validate=function(a,b,c,d,e){var f="asset"!==j.objectType?j.objects:h.filterAssetsByType(j.objects,j.assetType),g=_.find(f,function(a){return a.id===e.id}),i=g.data[c],k=_.find(g.logs,function(a){return a.weekOf===d.weekOf}),l=k.data[c];"number"===i.type?(l=isNaN(a)?b:a,j.validValue=isNaN(a)):j.validValue=!0},l.createNewRow=function(a){_.contains(j.dates,a)||j.dates.push(a)},j.open=function(b,c){var d=a.open({animation:!0,templateUrl:"views/deletefieldmodal.html",controller:"DeleteFieldModalInstanceCtrl",size:b,resolve:{thing:function(){return c},getCars:function(){return"car"===j.objectType?j.objects:{}},getDrivers:function(){return"driver"===j.objectType?j.objects:{}},getProspects:function(){return"prospect"===j.objectType?j.objects:{}},getAssets:function(){return"asset"===j.objectType?h.filterAssetsByType(j.objects,j.assetType):{}},objectType:function(){return j.objectType}}});d.result.then(function(a){j.input=a,console.log("passed back from DeleteFieldModalInstanceCtrl:",a)},function(){console.log("Modal dismissed at: "+new Date)})}}]),angular.module("clientApp").run(["$templateCache",function(a){a.put("views/addfieldmodal.html",'<link rel="stylesheet" href="styles/forms.scss"> <link rel="stylesheet" href="styles/addFieldModal.css"> <div class="modal-header"> <h3 class="modal-title" id="add-field-header">Add field</h3> <button type="button" class="close" ng-click="close()" style="margin-top:-35px"> &times; </button> </div> <!-- {{ assetType }} --> <!-- {{ field }} --> <!-- {{ objects }}? --> <!-- {{ field}} --> <!-- {{ expressionFieldSelect }} --> <div class="modal-body"> <form novalidate role="form" name="form" ng-submit="submit()"> <!-- Choose field type --> <div class="form-group"> <div class="alert alert-info"> <h4 class="control-label">Type</h4> <div class="radio"> <label> <input id="text" ng-model="field.type" value="text" type="radio" ng-change="setDataType(field.type)">Text <!-- <i class="fa fa-question-circle" tooltip=""></i> --> </label> </div> <div class="radio"> <label> <input id="number" ng-model="field.type" value="number" type="radio" ng-change="setDataType(field.type)">Number <!-- <i class="fa fa-question-circle" tooltip=""></i> --> </label> </div> <div class="radio"> <label> <input id="boolean" ng-model="field.type" value="boolean" type="radio" ng-change="setDataType(field.type)">Boolean <i class="fa fa-question-circle" tooltip="ex. yes/no, true/false"></i> </label> </div> <div class="radio"> <label> <input id="function" ng-model="field.type" value="function" type="radio" ng-change="setDataType(field.type)"> Function <i class="fa fa-question-circle" tooltip="Outputs a value in terms of other functions and numbers"></i> </label> </div> <div class="radio"> <label> <input id="inequality" ng-model="field.type" value="inequality" type="radio" ng-change="setDataType(field.type)"> Inequality <i class="fa fa-question-circle" tooltip="Compares two values and returns a true or false value"></i> </label> </div> </div> </div> <!-- Choose field data type --> <!-- SHOW ONLY WHEN FIELD TYPE IS CHOSEN -- >\n        <!-- Function implies Number --> <!-- Boolean implies Boolean --> <!-- Therefore, this radio list is obly shown for Variable/Constant field type --> <!-- TODO: SET correct dataType when field type is function or boolean --> <div class="form-group" ng-show="field.type === &quot;variable&quot;"> <div class="alert alert-info"> <ul class="fieldTypes"> <label class="control-label">Field data type</label> <li> <label class="radio"> <input ng-model="field.dataType" value="number" type="radio">Number <i class="fa fa-question-circle" tooltip="ex. 1234567890"></i> </label> </li> <li> <label class="radio"> <input ng-model="field.dataType" value="text" type="radio"> Text <i class="fa fa-question-circle" tooltip="ex. The quick brown fox jumps over the lazy dog."></i> </label> </li> <li> <label class="radio"> <input ng-model="field.dataType" value="boolean" type="radio"> Boolean <i class="fa fa-question-circle" tooltip="ex. true/false, yes/no"></i> </label> </li> </ul> </div> </div> <div class="form-group"> <label for="field">Name</label> <input name="field" type="text" class="form-control" ng-model="field.name" ng-required="true" ng-pattern="/^[a-zA-Z0-9_]*$/"> </div> <div class="form-group" ng-show="field.type === &quot;variable&quot;"> <label for="value">Value</label> <input name="value" class="form-control" ng-model="formData.value"> </div> <!-- Function input --> <!-- Validation: \n            1. Function cannot begin nor end with an operator \n            2. Corollary: It must begin and end with a function/variable/constant\n        --> <div class="form-group" ng-show="field.type === &quot;function&quot; || field.type === &quot;inequality&quot;"> <div class="well"> <h4 ng-if="field.type === &quot;function&quot;">Function</h4> <h4 ng-if="field.type === &quot;inequality&quot;">Inequality</h4><br> <h5 id="display-function-expr" class="expression" ng-if="field.type === &quot;function&quot;">{{ field.expression }}</h5> <h5 id="display-inequality-expr" class="expression" ng-if="field.type === &quot;inequality&quot;"> <span>{{ field.leftExpression }}<span> <span>{{ field.inequalitySign }}</span> <span>{{ field.rightExpression }}</span> </span></span></h5> <br> <div class="input-group" ng-if="field.type === &quot;inequality&quot;"> <input bs-switch ng-model="rightSide.value" type="checkbox" switch-on-text="Right" switch-off-text="Left" switch-label="Side" switch-inverse="true" switch-off-color="primary" switch-active="{{ validExpression.value }}" id="inequality-side-switch"> </div><br> <div class="btn-toolbar" role="toolbar"> <button id="add-operator" class="btn btn-warning operator" type="button" ng-click="appendItemToFunction(&quot;+&quot;, &quot;operator&quot;)">+</button> <button id="sub-operator" class="btn btn-warning operator" type="button" ng-click="appendItemToFunction(&quot;-&quot;, &quot;operator&quot;)">-</button> <button id="mult-operator" class="btn btn-warning operator" type="button" ng-click="appendItemToFunction(&quot;*&quot;, &quot;operator&quot;)">*</button> <button id="div-operator" class="btn btn-warning operator" type="button" ng-click="appendItemToFunction(&quot;/&quot;, &quot;operator&quot;)">/</button> <button id="open-parens-operator" class="btn btn-warning operator" type="button" ng-click="appendItemToFunction(&quot;(&quot;, &quot;operator&quot;)">(</button> <button id="close-parens-operator" class="btn btn-warning operator" type="button" ng-click="appendItemToFunction(&quot;)&quot;, &quot;operator&quot;)">)</button> <div class="undoAndClear"> <button class="btn btn-primary undo" type="button" ng-click="undoExpression()">Undo</button> <button class="btn btn-danger clear" type="button" ng-click="clearExpression()">Clear</button> </div> </div><br> <label ng-if="field.type === &quot;inequality&quot;"> Sign </label> <select ng-if="field.type === &quot;inequality&quot;" class="form-control" ng-model="field.inequalitySignId" ng-change="setInequalitySign(field.inequalitySignId)"> <option class="inequality-sign-opt" value="0">&gt; Greater Than</option> <option class="inequality-sign-opt" value="1">&ge; Greater Than or Equal To</option> <option class="inequality-sign-opt" value="2">&lt; Less Than</option> <option class="inequality-sign-opt" value="3">&le; Less Than or Equal To</option> </select><br> <label> Constant <i class="fa fa-question-circle" tooltip="Add a constant number to the function"></i> </label> <div class="input-group"> <span class="input-group-btn"> <button id="add-const" class="btn" type="button" ng-click="appendItemToFunction(expressionConstantInput.value, &quot;constant&quot;)" ng-disabled="form.functionConst.$dirty && form.functionConst.$invalid">+</button> </span> <input name="functionConst" type="text" class="form-control" ng-model="expressionConstantInput.value" ng-pattern="/^[0-9]\\d*(\\.\\d+)?$/"> <!-- regex patterns for constant --> <!-- ^[1-9]\\d*(\\.\\d+)?$ --> <!-- /^[0-9]*$/ --> </div><br><!-- /input-group --> <label> Fields <i class="fa fa-question-circle" tooltip="Add an existing field to the function"></i> </label> <select class="form-control" ng-model="expressionFieldSelect.value" ng-change="appendItemToFunction(expressionFieldSelect.value, &quot;field&quot;)" ng-options="field for field in validFieldsForExpressions"> </select> <!-- {{ validFieldsForExpressions }} --> </div> </div> <div ng-messages="form.field.$error" ng-show="form.field.$dirty && form.field.$invalid" class="alert alert-danger" role="alert"> <div> Field must <ul> <li>be alphanumeric</li> <li>contain no special characters except _</li> <li>contain no spaces</li> <li>not be empty</li> </ul> </div> </div> <div ng-messages="form.functionConst.$error" ng-show="form.functionConst.$dirty && form.functionConst.$invalid" class="alert alert-danger" role="alert"> <div> Constant must <ul> <li>be a number</li> <li>include at least one digit following a decimal point</li> </ul> </div> </div> <div ng-if="!validExpression.value" class="alert alert-danger" role="alert"> <div id="expression-error-message" ng-if="expressionErrorMessage"> <h4>Function error(s):</h4> <ul> <li>{{ expressionErrorMessage }}</li> </ul> </div> <br> <div id="general-expression-rules"> <h4>Function must</h4> <ul> <li>not end or begin with a mathematical operator</li> <li>contain a mathematical operator between any two values</li> <li>not contain unclosed parentheses</li> </ul> </div> </div> <div id="field-name-exists-msg" ng-messages="form.field.$error" ng-show="form.field.$dirty && fieldNameAlreadyExists()" class="alert alert-danger" role="alert"> <p> Error: Field name already exists. </p> </div> </form> </div> <div class="modal-footer"> <button id="submit-field" class="btn btn-success" type="button" ng-click="submit()" ng-disabled="form.$invalid || invalidFieldType() || !validExpression.value || !inequalityIsComplete() || emptyExpression() || fieldNameAlreadyExists()">Submit</button> <button class="btn btn-danger" type="button" ng-click="reset()">Reset</button> <button class="btn btn-default" type="button" ng-click="close()">Close</button> </div>'),
a.put("views/addobjectmodal.html",'<link rel="stylesheet" href="styles/forms.scss"> <div class="modal-header"> <h3 class="modal-title">Add {{ objectType }}</h3> <button type="button" class="close" ng-click="close()" style="margin-top:-35px"> &times; </button> </div> <!-- {{ assetType }} --> <!-- {{ identifier }} --> <div class="modal-body"> <div class="btn-toolbar" role="toolbar"> <div class="btn-group" role="group"> <!-- opens add field modal --> <button class="btn btn-info" type="button" ng-click="addField(identifier.value)" ng-disabled="disableAddField()" name="addFieldBtn"> + Field </button> </div> </div> <!-- add field disabled: {{ disableAddField() }} --> <br ng-show="disableAddField()"> <div class="alert alert-danger" role="alert" ng-show="objectType === &quot;asset&quot; && disableAddField()"> Please add an asset type before adding fields. </div> <br ng-show="!disableAddField()"> <form novalidate role="form" id="newObjectForm" name="form" ng-submit="submit($data)"> <div class="form-group" ng-if="objectType === &quot;asset&quot;"> <label>Type</label> <select ng-model="formData.assetType.value" class="form-control" ng-change="renderForm(formData.assetType.value)"> <option ng-repeat="type in assetTypes" value="{{ ::type.value }}">{{ ::type.value }}</option> </select> </div> <h4 id="fields-header" ng-show="expressions.length">Fields</h4> <div class="form-group" ng-if="(objectType === &quot;car&quot;) || (objectType === &quot;asset&quot;)"> <label>Organize {{ assetType.value || objectType }}<span ng-if="!formData.assetType"></span> with this identifier</label> <select ng-model="identifier.value" class="form-control" ng-options="field for field in fields" ng-if="field !== &quot;assetType&quot;"> </select> </div> <div class="form-group" ng-if="objectType === &quot;prospect&quot;"> <label>Status</label> <select ng-model="status.value" class="form-control"> <option ng-repeat="status in statuses" value="{{ ::status.value }}" ng-if="!status.special">{{ ::status.value }}</option> </select> </div> <div class="form-group" ng-repeat="(field, data) in formData" ng-if="!hide(field)"> <label for="{{ ::field }}" class="field-name-label">{{ ::field }}</label> <input id="{{ ::field }}" name="{{ ::field }}" type="text" class="form-control field-value-input" ng-model="formData[field].value" data-datatype="{{ ::data.dataType }}" data-fieldtype="{{ ::data.type }}" ng-if="data.type === &quot;text&quot;"> <input id="{{ ::field }}" name="numberField" type="text" class="form-control" ng-model="formData[field].value" data-datatype="{{ ::data.dataType }}" data-fieldtype="{{ ::data.type }}" ng-if="data.type === &quot;number&quot;" ng-pattern="/^[-+]?([0-9]*\\.[0-9]+|[0-9]+)$/"> <br ng-if="data.type === &quot;boolean&quot;"> <input bs-switch ng-model="formData[field].value" type="checkbox" switch-on-text="Yes" switch-off-text="No" switch-label="" switch-inverse="true" switch-off-color="primary" ng-if="data.type === &quot;boolean&quot;" class="boolean-field-switch" id="{{ ::field }}" name="{{ ::field }}" data-datatype="{{ ::data.dataType }}" data-fieldtype="{{ ::data.type }}"> <!-- {{ formData[field].value }} --> </div> <!-- Error messages --> <div id="add-object-error-msg" ng-messages="form.numberField.$error" ng-show="form.numberField.$dirty && form.numberField.$invalid" class="alert alert-danger" role="alert"> <p> Error: Non-number entered into number field. </p> </div> </form> <!-- {{ formData }} --> <!-- Show expressions --> <div ng-show="expressions.length > 0"> <h4 id="expression-header">Expressions</h4> <div ng-repeat="expression in expressions"> <h5> <span><strong>{{ ::expression.field }}:</strong></span> <span>{{ ::expression.expression }}</span> </h5> </div> </div> <!-- <div>\n        {{ formData }}\n    </div>  --> </div> <div class="modal-footer"> <button id="submit-object" class="btn btn-success" type="button" ng-click="submit()" ng-disabled="!disableConditions(formData) || invalidIdentifier(identifier) || form.numberField.$invalid">Submit</button> {{ !disableConditions(formData) }}<!-- \n  {{ invalidIdentifier(identifier) }}\n  {{ form.$invalid }} --> <button class="btn btn-danger" type="button" ng-click="reset()">Reset</button> <button class="btn btn-default" type="button" ng-click="close()">Close</button> </div>'),a.put("views/assetTypeModal.html",'<div class="modal-header"> <h3 class="modal-title">Add asset type</h3> <button type="button" class="close" ng-click="close()" style="margin-top:-35px"> &times; </button> </div> <div class="modal-body"> <form novalidate role="form" name="form" ng-submit="submit()"> <div class="form-group"> <label for="type">Type</label> <input name="type" type="text" class="form-control" ng-model="newType.value" ng-required="true" placeholder="e.g. Gas Cards"> </div> </form> <!-- <div>\n        {{ newStatus.value }}\n    </div> --> </div> <div class="modal-footer"> <button class="btn btn-success" type="button" ng-click="submit()" ng-disabled="!validForm()">Submit</button> <button class="btn btn-danger" type="button" ng-click="reset()">Reset</button> <button class="btn btn-default" type="button" ng-click="close()">Close</button> </div>'),a.put("views/assignmentmodal.html",'<div class="modal-header"> <h3 class="modal-title">Assign {{ ::objectType }}</h3> <button type="button" class="close" ng-click="close()" style="margin-top:-35px"> &times; </button> </div> <div class="modal-body"> <form novalidate role="form" name="form" ng-submit="submit()"> <div class="form-group" ng-if="objectType === &quot;asset&quot;"> Select asset type <select class="form-control" ng-model="formData.assetType"> <option ng-repeat="assetType in assetTypes.types" value="{{ assetType.value }}"> {{ assetType.value }} </option> </select> </div> <div class="form-group" ng-if="objectType !== &quot;asset&quot;"> Select <span ng-if="objIdentifier !== &quot;Name&quot;">{{ ::objIdentifier }}</span><span ng-if="objIdentifier === &quot;Name&quot;">Driver</span> <select class="form-control" ng-model="formData.objId"> <option ng-repeat="object in simpleObjects | orderBy:&quot;id&quot;" value="{{ object.id }}"> <!-- Do not show inactive cars --> {{ ::object.identifierValue }} </option> </select> </div> <div class="form-group" ng-if="objectType === &quot;asset&quot;"> Select <select class="form-control" ng-model="formData.objId"> <option ng-repeat="object in simpleObjects | orderBy:&quot;id&quot;" value="{{ object.id }}" ng-if="object.assetType === formData.assetType"> <!-- Do not show inactive cars --> {{ ::object.identifierValue }} </option> </select> </div> <div class="form-group"> Date Assigned/Started <div class="btn-group" role="group"> <div class="input-group date-picker"> <input type="text" class="form-control" datepicker-popup="{{format}}" ng-model="dt" is-open="status.opened" max-date="maxDate" datepicker-options="dateOptions" ng-required="true" close-text="Close"> <div class="input-group-btn"> <button type="button" class="btn btn-primary" ng-click="open($event)"> <i class="fa fa-calendar"></i> </button> </div> </div> </div> </div> </form> <!-- <div>\n        {{ formData.carId }}\n        {{ dt }}\n    </div> --> </div> <div class="modal-footer"> <button class="btn btn-success" type="button" ng-click="submit()" ng-disabled="validForm()">Submit</button> <button class="btn btn-default" type="button" ng-click="close()">Close</button> </div>'),a.put("views/deletefieldmodal.html",'<link rel="stylesheet" href="styles/deletemodal.css"> <div class="modal-header"> <h3 class="modal-title"> Delete </h3> <button type="button" class="close" ng-click="close()" style="margin-top:-35px"> &times; </button> </div> <div class="modal-body"> <form novalidate role="form"> <div class="form-group"> <label for="input"> Deleting this will apply to ALL {{ ::objectType }}s and is irreversible.<span ng-if="thing.type === &quot;field&quot;"> Please note that functions and inequalities using this field will not be deleted. </span> Enter "DELETE" below to confirm you want to permanently delete it: </label> <input class="form-control" id="delete-confirmation" type="text" ng-model="confirmation.value"> </div> </form> </div> <div class="modal-footer"> <button class="btn btn-default" type="button" ng-click="close()"> Cancel </button> <button class="btn btn-danger" id="delete-btn-final" type="button" ng-click="submit()" ng-disabled="confirmation.value !== \'DELETE\'"> DELETE </button> </div>'),a.put("views/deleteobjmodal.html",'<link rel="stylesheet" href="styles/deletemodal.css"> <div class="modal-header"> <h3 class="modal-title"> Delete {{ objectType }} </h3> <button type="button" class="close" ng-click="close()" style="margin-top:-35px"> &times; </button> </div> <div class="modal-body"> <form novalidate role="form"> <div class="form-group"> <label for="input"> Deleting this {{ ::objectType }} and is irreversible. <span ng-if="objectType !== &quot;prospect&quot;">Its logs will not be deleted.</span> Enter "DELETE" below to confirm you want to permanently delete: </label> <input class="form-control" id="delete-confirmation" type="text" ng-model="input"> </div> </form> </div> <div class="modal-footer"> <button class="btn btn-default" type="button" ng-click="close()"> Cancel </button> <button id="delete-btn-final" class="btn btn-danger" type="button" ng-click="submit()" ng-disabled="input !== \'DELETE\'"> DELETE </button> </div>'),a.put("views/editFieldModal.html",'<link rel="stylesheet" href="styles/forms.scss"> <link rel="stylesheet" href="styles/addFieldModal.css"> <div class="modal-header"> <h3 class="modal-title">Edit field</h3> <button type="button" class="close" ng-click="close()" style="margin-top:-35px"> &times; </button> </div> <!-- {{ formData }} --> <div class="modal-body"> <form novalidate role="form" name="form" ng-submit="submit()"> <!-- <div class=\'form-group\' ng-if=\'objectType === "prospect" && field.name === "status"\'>\n            <label for=\'status\'>Status</label>\n\n            <input id=\'{{ ::field.name }}\' data-dataType=\'{{ ::field.dataType }}\' data-fieldType=\'{{ ::field.type }}\' name=\'fieldName\' type=\'text\' class=\'form-control\' ng-model=\'field.value\' ng-required=\'true\'>\n        </div> --> <div class="form-group"> <label for="fieldName">Name</label> <input id="{{ ::field.name }}" data-datatype="{{ ::field.dataType }}" data-fieldtype="{{ ::field.type }}" name="fieldName" type="text" class="form-control" ng-model="field.name" ng-required="true" ng-pattern="/^[a-zA-Z0-9_]*$/" ng-if="!dontEditFieldName(field.name)"> <p ng-if="dontEditFieldName(field.name)">{{ ::field.name.capitalizeIfStatus() }}</p> </div> <div class="form-group" ng-if="isProspectStatus(field.name)"> <label for="fieldValue">Value</label> {{ field.value }} <select id="{{ ::field.name }}" data-datatype="{{ ::field.dataType }}" data-fieldtype="{{ ::field.type }}" type="text" class="form-control" ng-model="field.value" ng-required="true" ng-options="status.value for status in statuses" name="textField"></select> </div> <div class="form-group" ng-if="field.type === &quot;text&quot;" ng-hide="isProspectStatus(field.name)"> <label for="fieldValue">Value</label> <input id="{{ ::field.name }}" data-datatype="{{ ::field.dataType }}" data-fieldtype="{{ ::field.type }}" name="textField" type="text" class="form-control" ng-model="field.value" ng-required="true"> </div> <div class="form-group" ng-if="field.type === &quot;number&quot;"> <label for="fieldValue">Value</label> <input id="{{ ::field.name }}" data-datatype="{{ ::field.dataType }}" data-fieldtype="{{ ::field.type }}" name="numberField" type="text" class="form-control" ng-model="field.value" ng-required="true" ng-pattern="/^[-+]?([0-9]*\\.[0-9]+|[0-9]+)$/"> </div> <div class="form-group" ng-if="field.type === &quot;boolean&quot;"> <label for="fieldValue">Value</label> <br> <input bs-switch ng-model="field.value" type="checkbox" switch-on-text="Yes" switch-off-text="No" switch-label="" switch-inverse="true" switch-off-color="primary" class="boolean-field-switch" id="{{ ::field.name }}" name="booleanField" data-datatype="{{ ::field.dataType }}" data-fieldtype="{{ ::field.type }}"> <!-- {{ formData[field].value }} --> </div> <div class="form-group" ng-if="loggable(field.name)"> <label for="logValue">Log?</label> <br> <input bs-switch ng-model="field.log" type="checkbox" switch-on-text="Yes" switch-off-text="No" switch-label="" switch-inverse="true" switch-off-color="primary" class="boolean-field-switch" id="{{ ::field.name }}" name="logValue" data-datatype="{{ ::field.dataType }}" data-fieldtype="{{ ::field.type }}" switch-active="{{ validExpression.value }}" ng-change="logValueChanged.value = !logValueChanged.value"> </div> <div class="form-group" ng-if="(objectType === &quot;car&quot;) || (objectType === &quot;asset&quot;)"> <label>Identify {{ object.assetType.value || objectType }}<span ng-if="!object.assetType.value">s</span> with this field</label> <br> <input bs-switch ng-model="field.identifier" type="checkbox" switch-on-text="Yes" switch-off-text="No" switch-label="" switch-inverse="true" switch-off-color="primary" class="boolean-field-switch" id="{{ ::field.name }}" name="identifierValue" data-datatype="{{ ::field.dataType }}" data-fieldtype="{{ ::field.type }}" switch-active="{{ !field.identifier }}"> </div> <div class="form-group" ng-if="field.type === &quot;function&quot; || field.type === &quot;inequality&quot;"> <div class="well"> <h4 ng-if="field.type === &quot;function&quot;">Function</h4> <h4 ng-if="field.type === &quot;inequality&quot;">Inequality</h4><br> <h5 class="expression" ng-if="field.type === &quot;function&quot;">{{ field.expression }}</h5> <h5 class="expression" ng-if="field.type === &quot;inequality&quot;">{{ field.leftExpression }} {{ displayInequalitySign(field.inequalitySignId) }} {{ field.rightExpression }}</h5> <br> <div class="input-group" ng-if="field.type === &quot;inequality&quot;"> <input bs-switch ng-model="rightSide.value" type="checkbox" switch-on-text="Right" switch-off-text="Left" switch-label="Side" switch-inverse="true" switch-off-color="primary" switch-active="{{ validExpression.value }}" id="inequality-side-switch" ng-change="buildAndValidateExpression()"> </div><br> <div class="btn-toolbar" role="toolbar"> <button id="add-operator" class="btn btn-warning operator" type="button" ng-click="appendItemToFunction(&quot;+&quot;, &quot;operator&quot;)">+</button> <button id="sub-operator" class="btn btn-warning operator" type="button" ng-click="appendItemToFunction(&quot;-&quot;, &quot;operator&quot;)">-</button> <button id="mult-operator" class="btn btn-warning operator" type="button" ng-click="appendItemToFunction(&quot;*&quot;, &quot;operator&quot;)">*</button> <button id="div-operator" class="btn btn-warning operator" type="button" ng-click="appendItemToFunction(&quot;/&quot;, &quot;operator&quot;)">/</button> <button id="open-parens-operator" class="btn btn-warning operator" type="button" ng-click="appendItemToFunction(&quot;(&quot;, &quot;operator&quot;)">(</button> <button id="close-parens-operator" class="btn btn-warning operator" type="button" ng-click="appendItemToFunction(&quot;)&quot;, &quot;operator&quot;)">)</button> <div class="undoAndClear"> <button class="btn btn-primary undo" type="button" ng-click="undoExpression()">Undo</button> <button class="btn btn-danger clear" type="button" ng-click="clearExpression()">Clear</button> </div> </div><br> <div ng-if="field.type === &quot;inequality&quot;"> <label> Sign </label> <select class="form-control" ng-model="field.inequalitySignId" ng-change="setInequalitySign()"> <option class="inequality-sign-opt" value="0">&gt; Greater Than</option> <option class="inequality-sign-opt" value="1">&ge; Greater Than or Equal To</option> <option class="inequality-sign-opt" value="2">&lt; Less Than</option> <option class="inequality-sign-opt" value="3">&le; Less Than or Equal To</option> </select><br> </div> <label> Constant <i class="fa fa-question-circle" tooltip="Add a constant number to the function"></i> </label> <div class="input-group"> <span class="input-group-btn"> <button id="add-const" class="btn" type="button" ng-click="appendItemToFunction(expressionConstantInput.value, &quot;constant&quot;)" ng-disabled="form.functionConst.$dirty && form.functionConst.$invalid">+</button> </span> <input name="functionConst" type="text" class="form-control" ng-model="expressionConstantInput.value" ng-pattern="/^[0-9]\\d*(\\.\\d+)?$/"> <!-- regex patterns for constant --> <!-- ^[1-9]\\d*(\\.\\d+)?$ --> <!-- /^[0-9]*$/ --> </div><br><!-- /input-group --> <label> Fields <i class="fa fa-question-circle" tooltip="Add an existing field to the function"></i> </label> <select class="form-control" ng-model="expressionFieldSelect.value" ng-change="appendItemToFunction(expressionFieldSelect.value, &quot;field&quot;)"> <option ng-repeat="field in validFieldsForExpressions" value="{{ ::field }}">{{ ::field }}</option> </select> </div> </div> <div ng-messages="form.fieldName.$error" ng-show="form.fieldName.$invalid" class="alert alert-danger" role="alert"> <div> Field must <ul> <li>be alphanumeric</li> <li>contain no special characters except _</li> <li>contain no spaces</li> </ul> </div> </div> <div ng-messages="form.functionConst.$error" ng-show="form.functionConst.$dirty && form.functionConst.$invalid" class="alert alert-danger" role="alert"> <div> Constant must <ul> <li>be a number</li> <li>include at least one digit following a decimal point</li> </ul> </div> </div> <!-- {{ validExpression }} --> <div ng-if="!validExpression.value" class="alert alert-danger" role="alert"> <div id="expression-error-message" ng-if="expressionErrorMessage"> <h4>Function error(s):</h4> <ul> <li>{{ expressionErrorMessage }}</li> </ul> </div> <br> <div id="general-expression-rules"> <h4>Function must</h4> <ul> <li>not end or begin with a mathematical operator</li> <li>contain a mathematical operator between any two values</li> <li>not contain unclosed parentheses</li> </ul> </div> </div> <div id="number-field-error-msg" ng-messages="form.numberField.$error" ng-show="form.numberField.$dirty && form.numberField.$invalid" class="alert alert-danger" role="alert"> <p> Error: Non-number entered into number field. </p> </div> <div id="field-name-exists-msg" ng-messages="form.fieldName.$error" ng-show="form.fieldName.$dirty && fieldNameAlreadyExists()" class="alert alert-danger" role="alert"> <p> Error: Field name already exists. </p> </div> </form> </div> <div class="modal-footer" popover="Please change the identifier if you want to delete this field." popover-enable="field.identifier" popover-trigger="mouseenter" popover-placement="bottom-left"> <button class="btn btn-danger" type="button" ng-click="delete()" style="float: left" ng-disabled="field.identifier">DELETE</button> <button class="btn btn-success" type="button" ng-click="submit()" ng-disabled="form.fieldName.$invalid || form.numberField.$invalid || form.functionConst.$invalid || !validExpression.value || invalidFieldType() || !inequalityIsComplete() || emptyExpression() || fieldNameAlreadyExists()">Submit</button> <!-- {{ form.fieldName.$invalid }}\n    {{ form.numberField.$invalid }}\n    {{ form.functionConst.$invalid }}\n    {{ !validExpression.value }}\n    {{ invalidFieldType() }}\n    {{ !inequalityIsComplete() }}\n    {{ emptyExpression() }}\n    {{ fieldNameAlreadyExists() }} --> <button class="btn btn-danger" type="button" ng-click="reset()">Reset</button> <button class="btn btn-default" type="button" ng-click="close()">Close</button> </div>'),a.put("views/formMessages/addressLine.html",'<link rel="stylesheet" href="styles/formErrors.scss"> <div class="error-message" ng-message="pattern"> Please enter a street address. </div>'),a.put("views/formMessages/card.html",'<link rel="stylesheet" href="styles/formErrors.scss"> <div class="error-message" ng-message="required"> Please fill out this field. </div> <div class="error-message" ng-message="pattern"> Number must be numeric and 6 characters long. </div>'),a.put("views/formMessages/city.html",'<link rel="stylesheet" href="styles/formErrors.scss"> <div class="error-message" ng-message="pattern"> City should only contain alphabetic characters. </div>'),a.put("views/formMessages/email.html",'<link rel="stylesheet" href="styles/formErrors.scss"> <div class="error-message" ng-message="pattern"> Please enter a valid Email address. </div>'),a.put("views/formMessages/givenName.html",'<link rel="stylesheet" href="styles/formErrors.scss"> <div class="error-message" ng-message="required"> You did not enter a First Name. </div> <div class="error-message" ng-message="minlength"> First Name must be at least 2 characters long. </div> <div class="error-message" ng-message="maxlength"> First Name cannot be more than 16 characters long. </div> <div class="error-message" ng-message="pattern"> First Name must contain only alphabetic characters and cannot contain whitespace. </div>'),a.put("views/formMessages/licenseNumber.html",'<link rel="stylesheet" href="styles/formErrors.scss"> <div class="error-message" ng-message="pattern"> License Number must be alphanumeric and between 4-7 characters long. </div>'),a.put("views/formMessages/licensePlate.html",'<link rel="stylesheet" href="styles/formErrors.scss"> <div class="error-message" ng-message="required"> You did not enter a License Plate. </div> <div class="error-message" ng-message="pattern"> License Plate must be alphanumeric and 6-8 characters long. </div>'),a.put("views/formMessages/mileage.html",'<link rel="stylesheet" href="styles/formErrors.scss"> <div class="error-message" ng-message="required"> You did not enter a Mileage. </div> <div class="error-message" ng-message="pattern"> Mileage must be numeric. </div>'),a.put("views/formMessages/payRate.html",'<link rel="stylesheet" href="styles/formErrors.scss"> <div class="error-message" ng-message="required"> You did not enter a Pay Rate. </div> <div class="error-message" ng-message="pattern"> Please enter an integer between 0-100. </div>'),a.put("views/formMessages/phone.html",'<link rel="stylesheet" href="styles/formErrors.scss"> <div class="error-message" ng-message="pattern"> Phone Number must contain 10 numeric digits. ex. 123-456-7890 </div>'),a.put("views/formMessages/state.html",'<link rel="stylesheet" href="styles/formErrors.scss"> <div class="error-message" ng-message="pattern"> Please enter a valid two-letter US State code. </div>'),a.put("views/formMessages/surName.html",'<link rel="stylesheet" href="styles/formErrors.scss"> <div class="error-message" ng-message="required"> You did not enter a Last Name. </div> <div class="error-message" ng-message="minlength"> Last Name must be at least 2 characters long. </div> <div class="error-message" ng-message="maxlength"> Last Name cannot be more than 16 characters long. </div> <div class="error-message" ng-message="pattern"> Last Name must contain only alphabetic characters and cannot contain whitespace. </div>'),a.put("views/formMessages/zip.html",'<link rel="stylesheet" href="styles/formErrors.scss"> <div class="error-message" ng-message="pattern"> Please enter a valid five-digit zip code. (optional four-digit extension) </div>'),a.put("views/objectData.html",'<link rel="stylesheet" type="text/css" href="styles/tables.css"> <div class="col-md-10 col-md-offset-2 col-sm-offset-3"> <div class="sub-header"> <h3 id="identifier">{{ ::identifierValue }}</h3> <!-- <button class=\'btn btn-danger btn-xs delete-obj\' ng-controller=\'DeleteObjModalCtrl\' ng-click=\'open(lg, car.id)\'>Delete</button> --> </div> <!-- {{ state }}  --> <tabset ng-if="objectType !== \'prospect\'"> <tab ng-repeat="tab in tabs" data-tabname="{{ ::tab.title }}" heading="{{ ::tab.title }}" active="tab.active" ui-sref="{{ ::tab.state }}"> </tab> </tabset> <br> <div class="btn-toolbar" role="toolbar"> <div class="btn-group" role="group"> <button class="btn btn-success" ng-click="addField()"> + Field </button> </div> <div class="btn-group" role="group" style="float:right" ng-if="objectType === &quot;prospect&quot;"> <button class="btn btn-danger" role="group" ng-click="open(prospect.id)" ng-controller="DeleteObjModalCtrl"> Delete </button> </div> <div class="btn-group" role="group" style="float:right" ng-if="objectType === &quot;prospect&quot;"> <button class="btn btn-warning" ng-click="convert()"> Convert to driver </button> </div> <!-- <div class=\'btn-group\' role=\'group\' style=\'float:right;\'>\n            <button class=\'btn btn-danger\' role=\'group\' ng-click=\'open(prospect.id)\' ng-controller=\'DeleteObjModalCtrl\'>\n                Delete\n            </button>\n        </div> --> </div> <br> <div class="table-responsive table-bordered"> <table class="table"> <thead> <tr> <th>Field</th> <th>Value</th> <th>Logged</th> <th>Id.</th> <th>Edit</th> </tr> </thead> <tbody> <!-- non expressions --> <!-- TODO: only allow these to be identifiers? --> <tr ng-repeat="(field, data) in object.data" ng-if="data.type !== &quot;function&quot; && data.type !== &quot;inequality&quot;" ng-hide="notName(field)"> <td data-field="{{ ::field }}" class="field-name"> {{ ::field.capitalizeIfStatus() }} </td> <td class="field-value" data-field="{{ ::field }}"> {{ ::data.value }} </td> <td> <i class="fa fa-check log-check" data-field="{{ ::field }}" ng-if="data.log"></i> </td> <td> <i class="fa fa-check identifier-check" data-field="{{ ::field }}" ng-if="field === object.identifier"></i> </td> <td> <button class="btn btn-warning btn-xs" ng-click="editField(object, field)" data-field="{{ ::field }}">Edit</button> </td> </tr> <!-- functions --> <tr ng-repeat="(field, data) in object.data" ng-if="data.type === &quot;function&quot;"> <td class="field-name" data-field="{{ ::field }}"> {{ ::field }} </td> <td class="field-value" data-field="{{ ::field }}"> {{ ::data.value | number : 2 }} </td> <td> <!-- TODO: logging of functions disallowed until thinking about how to impelment --> <i class="fa fa-check log-check" ng-if="data.log" data-field="{{ ::field }}"></i> </td> <td> <!-- disallow functions from being identifiers --> <!-- <i class=\'fa fa-check\' ng-if=\'field === currentIdentifier.name && !expressionForm.$visible\'></i>\n                        <input type=\'radio\' e-name=\'identifier\' value=\'{{ field }}\' e-form=\'expressionForm\' ng-model=\'identifier.name\' ng-show=\'expressionForm.$visible\' onbeforesave=\'checkIdentifierValue($data, currentIdentifier.name)\'></input> --> <i class="fa fa-check identifier-check" ng-if="field === object.identifier" data-field="{{ ::field }}"></i> </td> <td> <button class="btn btn-warning btn-xs" ng-click="editField(object, field)" data-field="{{ ::field }}">Edit</button> </td> </tr> <!-- inequality --> <tr ng-repeat="(field, data) in object.data" ng-if="data.type === &quot;inequality&quot;"> <td data-field="{{ ::field }}" class="field-name"> {{ ::field }} </td> <td data-field="{{ ::field }}" class="field-value"> {{ ::data.value }} </td> <td> <!-- TODO: logging of functions disallowed until thinking about how to impelment --> <!-- <i class=\'fa fa-check\' ng-if=\'data.log && !expressionForm.$visible\'></i>\n                        <input type=\'checkbox\' editable-checkbox=\'data.log\' e-name=\'log\' e-form=\'expressionForm\' ng-show=\'expressionForm.$visible\' onbeforesave=\'checkLogValue($data, data.log)\'></input>        --> <i class="fa fa-check log-check" ng-if="data.log" data-field="{{ ::field }}"></i> </td> <td> <!-- disallow functions from being identifiers --> <!-- <i class=\'fa fa-check\' ng-if=\'field === currentIdentifier.name && !expressionForm.$visible\'></i>\n                        <input type=\'radio\' e-name=\'identifier\' value=\'{{ field }}\' e-form=\'expressionForm\' ng-model=\'identifier.name\' ng-show=\'expressionForm.$visible\' onbeforesave=\'checkIdentifierValue($data, currentIdentifier.name)\'></input> --> <i class="fa fa-check identifier-check" ng-if="field === object.identifier" data-field="{{ ::field }}"></i> </td> <td> <button class="btn btn-warning btn-xs" ng-click="editField(object, field)" data-field="{{ ::field }}">Edit</button> </td> </tr> </tbody> </table> <!-- {{ object.data }} --> </div> <br> <!-- Driver Assignment --> <div ng-if="objectType === &quot;car&quot;"> <h3>Driver<span ng-if="(object.driversAssigned > 1) || (object.driversAssigned === 0)">s</span> Assigned</h3> <div class="btn-toolbar" role="toolbar"> <div class="btn-group" role="group"> <button class="btn btn-success" ng-click="assign(&quot;driver&quot;)">+ Driver</button> </div> </div> <br> <div class="table-responsive table-bordered"> <table class="table"> <thead> <tr> <th>Name</th> <th>Date Assigned</th> </tr> </thead> <tbody> <tr ng-repeat="driver in object.driversAssigned | orderBy:&quot;dateAssigned&quot;" ui-sref="driverData({ id: driver.id })" class="table-row-link"> <td>{{ ::driver.identifier.value }}</td> <td>{{ ::driver.dateAssigned | date: \'fullDate\' }}<span ng-if="driver.dateUnassigned !== null"> - {{ ::driver.dateEnded | date: \'fullDate\' }}</span></td> </tr> </tbody> </table> </div> </div> <!-- Car Assignment --> <div ng-if="objectType === &quot;driver&quot;"> <h3>Car<span ng-if="(object.carsAssigned > 1) || (object.carsAssigned === 0)">s</span> Assigned</h3> <div class="btn-toolbar" role="toolbar"> <div class="btn-group" role="group"> <button class="btn btn-success" ng-click="assign(&quot;car&quot;)">+ Car</button> </div> </div> <br> <div class="table-responsive table-bordered"> <table class="table"> <thead> <tr> <th ng-if="valid(carIdentifier)">{{ ::carIdentifier }}</th> <th ng-if="!valid(carIdentifier)">Identifier</th> <th>Date Assigned</th> </tr> </thead> <tbody> <tr ng-repeat="car in object.carsAssigned | orderBy:&quot;dateAssigned&quot;" ui-sref="carData({ id: car.id })" class="table-row-link"> <td>{{ ::car.identifier.value }}</td> <td>{{ ::car.dateAssigned | date: \'fullDate\' }}<span ng-if="car.dateUnassigned !== null"> - {{ ::car.dateEnded | date: \'fullDate\' }}</span></td> </tr> </tbody> </table> </div> </div> <!-- Asset Assignment --> <div ng-if="objectType === &quot;driver&quot;"> <h3>Asset<span ng-if="(object.assetsAssigned > 1) || (object.assetsAssigned === 0)">s</span> Assigned</h3> <div class="btn-toolbar" role="toolbar"> <div class="btn-group" role="group"> <button class="btn btn-success" ng-click="assign(&quot;asset&quot;)">+ Asset</button> </div> </div> <br> <div class="table-responsive table-bordered"> <table class="table"> <thead> <tr> <th>Type</th> <th>Identifier</th> <th>Date Assigned</th> </tr> </thead> <tbody> <tr ng-repeat="asset in driver.assetsAssigned | orderBy:&quot;dateAssigned&quot;" ui-sref="assetData({ type: asset.assetType, id: asset.id })" class="table-row-link"> <td>{{ ::asset.assetType }}</td> <td>{{ ::asset.identifier.value }}</td> <td>{{ ::asset.dateAssigned | date: \'fullDate\' }}<span ng-if="asset.dateUnassigned !== null"> - {{ ::asset.dateEnded | date: \'fullDate\' }}</span></td> </tr> </tbody> </table> </div> </div> </div>'),a.put("views/objectLogs.html",'<link rel="stylesheet" href="styles/partials/logs.css"> <div class="col-md-10 col-md-offset-2 col-sm-offset-3"> <!-- {{ state }}  --> <div class="sub-header"> <h3 id="identifier">{{ ::identifierValue }}</h3> <!-- <button class=\'btn btn-danger btn-xs delete-obj\' ng-controller=\'DeleteObjModalCtrl\' ng-click=\'open(lg, car.id)\'>Delete</button> --> </div> <tabset> <tab ng-repeat="tab in tabs" heading="{{ ::tab.title }}" active="tab.active" ui-sref="{{ ::tab.state }}"> </tab> </tabset> <br> <!-- {{ logDataArray }}\n    {{ dates }} --> <div class="table-responsive" ng-model="object" ng-init="tabs[0].active = true"> <table class="table table-bordered table-striped table-hover"> <thead> <tr> <td><strong>Week \\ Fields</strong></td> <td ng-repeat="field in fields | orderBy:\'$index\'"> {{ ::field }} </td> </tr> </thead> <tbody> <tr ng-repeat="log in object.logs | orderBy:&quot;-weekOf&quot;"> <td> <span class="log-date"> {{ ::log.weekOf | date:\'longDate\' }} </span> <button class="btn btn-warning btn-xs btn-edit" ng-click="logform.$show()" ng-show="!logform.$visible"> Edit </button> <div class="btn-toolbar" role="toolbar"> <form editable-form name="logform" ng-show="logform.$visible" class="form-buttons form-inline" onaftersave="save(date)"> <button type="submit" ng-disabled="logform.$waiting" class="btn btn-success btn-xs btn-group" role="group"> Save </button> <button type="button" ng-disabled="logform.$waiting" ng-click="logform.$cancel()" class="btn btn-default btn-xs btn-group" role="group"> Cancel </button> </form> </div> </td> <!-- logDataArray(log) --> <!-- <td>{{ getLogDataByDate(log.weekOf)[0].value }}</td> --> <td ng-repeat="logData in getLogDataByDate(log.weekOf)"> <!-- <p ng-show=\'logform.$visible\'></p> --> <span editable-text="log.data.{{ ::logData.field }}" e-name="{{ ::logData.field }}" data-fieldentry="{{ ::logData.field }}" e-form="logform" e-required ng-if="notExpressionField(logData.type)"> {{ ::logData.value }} </span> <span ng-if="!notExpressionField(logData.type)" data-fieldentry="{{ ::logData.field }}"> {{ ::logData.value }} </span> </td> </tr> </tbody> </table> </div> </div>'),
a.put("views/objectProfile.html",'<link rel="stylesheet" type="text/css" href="styles/profile.css"> <div class="col-md-10 col-md-offset-2 col-sm-offset-3"> <div class="sub-header"> <h3 id="identifier">{{ ::simpleObject.identifierValue }}</h3> <!-- <button class=\'btn btn-danger btn-xs delete-obj\' ng-controller=\'DeleteObjModalCtrl\' ng-click=\'open(lg, car.id)\'>Delete</button> --> </div> <div ui-view></div> </div>'),a.put("views/objectsList.html",'<link rel="stylesheet" href="styles/assetList.css"> <div class="col-md-offset-2 table-responsive" id="object-list"> <h2 class="page-header" ng-if="objectType === &quot;car&quot;">{{ title.value }}s</h2> <h2 class="page-header" ng-if="objectType === &quot;driver&quot;">{{ title.value }}s</h2> <h2 class="page-header" ng-if="objectType === &quot;prospect&quot;">{{ title.value }}s</h2> <h2 class="page-header" ng-if="objectType === &quot;asset&quot;">{{ title.value }}s</h2> <br> <div ng-if="objectType === &quot;car&quot; || objectType === &quot;driver&quot;"> <table class="table table-striped"> <thead> <td> <button type="button" class="btn btn-success" data-toggle="modal" ng-click="addObject()"> + {{ title.value }} </button> </td> <td> <h4 ng-if="thereAreObjects()">{{ ::objects[0].identifier }}</h4> </td> </thead> <tbody> <tr ng-repeat="object in simpleObjects | orderBy:&quot;id&quot;"> <td> <h4>{{ ::$index+1 }}</h4> </td> <td> <h4> <a ui-sref="{{ profile.state }}"> {{ ::object.identifierValue }} </a> </h4> </td> </tr> </tbody> </table> </div> <!-- Prospect List --> <div ng-if="objectType === &quot;prospect&quot;"> <div> <button class="btn btn-success" data-toggle="modal" ng-click="addObject()"> + Prospect </button> <button class="btn btn-success" ng-click="addStatus()"> + Status </button> </div> <!-- Order by user provided order --> <!-- {{ statuses }}\n    {{ order }}\n    {{ newIndex }} --> <div ng-repeat="status in statuses"> <h3> <span ng-show="!rowform.$visible"> {{ ::status.value }} </span> <span ng-show="rowform.$visible">Name: </span> <span editable-text="status.value" e-name="name" e-form="rowform" onbeforesave="saveStatusName()" ng-show="rowform.$visible"> {{ status.value }} </span> <span ng-show="rowform.$visible">Order: </span> <span ng-show="rowform.$visible" e-form="rowform"> <select ng-model="newIndex.val"> <option ng-repeat="index in order" value="{{ index }}"> {{ ::index }} </option> </select> </span> <button ng-click="rowform.$show()" ng-show="!rowform.$visible" class="btn btn-xs btn-warning" style="float:right"> Edit </button> <form editable-form name="rowform" onbeforesave="saveStatus($data, $index, status.value)" ng-show="rowform.$visible" class="form-buttons form-inline" style="float:right"> <button type="submit" ng-disabled="rowform.$waiting" class="btn btn-primary btn-xs"> Save </button> <button class="btn btn-xs btn-danger" ng-click="deleteStatus($index, status.value)" type="button" ng-if="!status.special"> Delete </button> <button class="btn btn-xs btn-default" ng-click="rowform.$cancel()" type="button" ng-disabled="rowform.$waiting"> Cancel </button> </form> </h3> <table class="table table-striped"> <tbody> <!-- filter prospects with status --> <tr ng-repeat="object in objects" ng-if="belongsToStatus(object, status)"> <td> <h4> <a ui-sref="prospectData({ id: object.id })"> <!-- {{ ::prospect.identifierValue }} --> {{ ::object.data.Name.value }} </a> </h4> </td> </tr> </tbody> </table> <br> </div> </div> <!-- Assets List --> <div ng-if="objectType === &quot;asset&quot;"> <div> <button class="btn btn-success" data-toggle="modal" ng-click="addObject()"> + Asset </button> <button class="btn btn-success" ng-click="addType()"> + Type </button> </div><br> <accordion> <accordion-group ng-repeat="type in types"> <accordion-heading> {{ type.value }} <i class="pull-right fa fa-chevron-down"></i> </accordion-heading> <ul class="assetsOfType"> <li ng-repeat="asset in simpleObjects" ng-if="belongsToType(asset, type.value)"> <h4> <a ui-sref="assetData({ id: asset.id })"> {{ ::asset.identifierValue }} </a> </h4> </li> </ul> </accordion-group> </accordion> </div> </div>'),a.put("views/objectsLogs.html",'<link rel="stylesheet" href="styles/partials/logs.css"> <div class="col-md-10 col-md-offset-2 col-sm-offset-3"> <div class="sub-header"> <!-- class=\'page-header\' --> <h2>{{ ::title }} Logs</h2> </div> <tabset ng-if="objectType === \'asset\'"> <tab ng-repeat="tab in tabs" data-tabname="{{ ::tab.title }}" heading="{{ ::tab.title }}" active="tab.active" select="renderLogs(tab.title)"> </tab> </tabset><br> <div class="btn-toolbar" role="toolbar"> <div class="btn-group" role="group"> <button class="btn btn-success" ng-click="newLog()" ng-disabled="datepicker.dt.getDay() !== datepicker.getStartingDayNum()"> + Log </button> </div> <div class="btn-group" role="group"> <div class="input-group date-picker"> <input type="text" class="form-control" datepicker-popup="{{ datepicker.format }}" ng-model="datepicker.dt" is-open="datepicker.status.opened" max-date="datepicker.maxDate" datepicker-options="datepicker.dateOptions" ng-required="true" close-text="Close"> <div class="input-group-btn"> <button type="button" class="btn btn-primary" ng-click="datepicker.open($event)"> <i class="fa fa-calendar"></i> </button> </div> </div> </div> <div class="btn-group" role="group"> <p id="datepicker-instructions"> * Choose the {{ ::datepicker.getStartingDayWord() }} of the week to be logged. </p> </div> </div> <!-- <div>most recent log: {{ mostRecentLogDate | date:\'longDate\' }}</div> --> <br> <div ng-messages="logForm.$error" ng-show="invalidEntries.length > 0" class="alert alert-danger" role="alert"> <!-- field is object with name, identifierVal, logDate properties --> <p ng-repeat="entry in invalidEntries"> Invalid entry for number field <span class="underline">{{ ::entry.fieldName }}</span> of <span class="underline">{{ ::entry.identifierValue }}</span>, date <span class="underline">{{ ::entry.logDate | date:\'longDate\'}}</span>. </p> </div> <div class="table-responsive"> <table class="table table-bordered table-striped table-hover"> <thead> <tr> <td><strong>Week \\ {{ title }}</strong></td> <td ng-repeat="object in simpleObjects | orderBy:\'id\'" ng-if="ifAssetIsOfType(object)"> <a ui-sref="{{ ::state.logs }}"> {{ ::object.identifierValue }} </a> </td> </tr> </thead> <tbody> <tr ng-repeat="date in dates"> <td> <span class="log-date"> {{ ::date | date:\'longDate\' }} </span> <button class="btn btn-warning btn-xs" ng-click="logform.$show()" ng-show="!logform.$visible"> Edit </button> <div class="btn-toolbar" role="toolbar"> <form editable-form name="logform" ng-show="logform.$visible" class="form-buttons form-inline" onaftersave="save(date)"> <button type="submit" ng-disabled="logform.$waiting" class="btn btn-success btn-xs"> Save </button> <button type="button" ng-disabled="logform.$waiting" ng-click="logform.$cancel()" class="btn btn-default btn-xs"> Cancel </button> <button class="btn btn-danger btn-xs" style="margin-left:1vw" ng-click="open(lg, { type: &quot;log&quot;, logDate: date })"> Delete </button> </form> </div> </td> <td ng-repeat="object in objects | orderBy:&quot;id&quot;" ng-if="ifAssetIsOfType(object)"> <ul ng-repeat="log in object.logs" ng-if="log.weekOf === date" class="log"> <li ng-repeat="(field, value) in log.data"> <span ng-if="notExpressionField(field, object)" editable-text="log.data.{{ ::field }}" e-name="{{ ::field }}" e-form="logform" onbeforesave="validate($data, value, field, log, object)"> {{ ::field }}: {{ value }} </span> <span ng-if="!notExpressionField(field, object)"> {{ ::field }}: {{ ::value }} </span> </li> </ul> </td> </tr> </tbody> </table> <!-- {{ invalidEntries }} --> <!-- {{ objects }} --> </div> </div>'),a.put("views/prospectstatusmodal.html",'<div class="modal-header"> <h3 class="modal-title">Add prospect status</h3> <button type="button" class="close" ng-click="close()" style="margin-top:-35px"> &times; </button> </div> <div class="modal-body"> <form novalidate role="form" name="form" ng-submit="submit()"> <div class="form-group"> <label for="name">Name</label> <input name="name" type="text" class="form-control" ng-model="newStatus.value" ng-required="true"> </div> </form> <!-- <div>\n        {{ newStatus.value }}\n    </div> --> </div> <div class="modal-footer"> <button class="btn btn-success" type="button" ng-click="submit()" ng-disabled="!validForm()">Submit</button> <button class="btn btn-danger" type="button" ng-click="reset()">Reset</button> <button class="btn btn-default" type="button" ng-click="close()">Close</button> </div>'),a.put("views/settings/settings.html",'<div class="col-md-10 col-md-offset-2 col-sm-offset-3"> <h1 class="page-header">Settings</h1> <div ui-view></div> </div>')}]);