"use strict";angular.module("clientApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","xeditable","ng-sortable","ui.bootstrap","ui.router","ngMessages","stormpath","stormpath.templates","config","frapontillo.bootstrap-switch"]).config(["ENV","$stateProvider","$urlRouterProvider","$provide",function(a,b,c,d){function e(a){return"production"===a.name||"staging"===a.name}d.decorator("$state",["$delegate","$stateParams",function(a,b){return a.forceReload=function(){return a.go(a.current,b,{reload:!0,inherit:!1,notify:!0})},a}]),c.otherwise("/login"),b.state("login",{url:"/login",templateUrl:"login.html"}).state("registration",{url:"/registration",templateUrl:"registration.html"}).state("verify",{url:"/verify?sptoken",templateUrl:"verify.html"}).state("forgot-password",{url:"/forgot-password",templateUrl:"forgotpw.html"}).state("reset-password",{url:"/reset-password?sptoken",templateUrl:"resetpw.html"}).state("api",{url:"/api","abstract":!0,sp:{authorize:{group:"dev"}}}).state("404",{url:"/404",templateUrl:"404.html"}).state("403",{url:"/403",templateUrl:"404.html"}).state("dashboard",{"abstract":!0,url:"/",template:"<ui-view/>",sp:{authenticate:e(a),waitForUser:e(a)}}).state("dashboard.cars",{sp:{authenticate:e(a),waitForUser:e(a)},url:"dashboard/cars",templateUrl:"views/objectsList.html",controller:"ObjectListCtrl",resolve:{objectType:function(){return"car"}}}).state("dashboard.drivers",{sp:{authenticate:e(a)},url:"dashboard/drivers",templateUrl:"views/objectsList.html",controller:"ObjectListCtrl",resolve:{objectType:function(){return"driver"}}}).state("dashboard.prospects",{sp:{authenticate:e(a)},url:"dashboard/prospects",templateUrl:"views/objectsList.html",controller:"ObjectListCtrl",resolve:{objectType:function(){return"prospect"}}}).state("dashboard.assets",{sp:{authenticate:e(a)},url:"dashboard/assets",templateUrl:"views/objectsList.html",controller:"ObjectListCtrl",resolve:{objectType:function(){return"asset"}}}).state("logs",{sp:{authenticate:e(a)},"abstract":!0,url:"/logs",template:"<ui-view/>"}).state("logs.cars",{sp:{authenticate:e(a)},url:"/cars",templateUrl:"views/objectsLogs.html",controller:"ObjectsLogsCtrl",resolve:{objectType:function(){return"car"}}}).state("logs.drivers",{sp:{authenticate:e(a)},url:"/drivers",templateUrl:"views/objectsLogs.html",controller:"ObjectsLogsCtrl",resolve:{objectType:function(){return"driver"}}}).state("logs.assets",{sp:{authenticate:e(a)},url:"/assets",templateUrl:"views/objectsLogs.html",controller:"ObjectsLogsCtrl",resolve:{objectType:function(){return"asset"}}}).state("carData",{sp:{authenticate:e(a)},url:"/cars/:id/data",templateUrl:"views/objectData.html",controller:"ObjectDataCtrl",resolve:{objectType:function(){return"car"},objectId:["$stateParams",function(a){return a.id}]}}).state("carLogs",{sp:{authenticate:e(a)},url:"/cars/:id/logs",templateUrl:"views/objectLogs.html",controller:"ObjectLogsCtrl",resolve:{objectType:function(){return"car"},objectId:["$stateParams",function(a){return a.id}]}}).state("driverData",{sp:{authenticate:e(a)},url:"/drivers/:id/data",templateUrl:"views/objectData.html",controller:"ObjectDataCtrl",resolve:{objectType:function(){return"driver"},objectId:["$stateParams",function(a){return a.id}]}}).state("driverLogs",{sp:{authenticate:e(a)},url:"/drivers/:id/logs",templateUrl:"views/objectLogs.html",controller:"ObjectLogsCtrl",resolve:{objectType:function(){return"driver"},objectId:["$stateParams",function(a){return a.id}]}}).state("prospectData",{sp:{authenticate:e(a)},url:"/prospects/:id/data",templateUrl:"views/objectData.html",controller:"ObjectDataCtrl",resolve:{objectType:function(){return"prospect"},objectId:["$stateParams",function(a){return a.id}]}}).state("assetData",{sp:{authenticate:e(a)},url:"/assets/:id/data",templateUrl:"views/objectData.html",controller:"ObjectDataCtrl",resolve:{objectType:function(){return"asset"},objectId:["$stateParams",function(a){return a.id}]}}).state("assetLogs",{sp:{authenticate:e(a)},url:"/assets/:id/logs",templateUrl:"views/objectLogs.html",controller:"ObjectLogsCtrl",resolve:{objectType:function(){return"asset"},objectId:["$stateParams",function(a){return a.id}]}})}]).run(["ENV","editableOptions","$cookies","$window","$user","$stormpath","$state","$stateParams","$rootScope",function(a,b,c,d,e,f,g,h,i){b.theme="bs3",i.$state=g,i.$stateParams=h,("production"===a.name||"staging"===a.name)&&(f.uiRouter({loginState:"login",defaultPostLoginState:"dashboard.cars",autoRedirect:!0,forbiddenState:"403"}),i.$on("$sessionEnd",function(a){d.location.reload(),g.go("login")}),i.$on("$stateChangeUnauthenticated",function(a,b,c){g.go("login")}),i.$on("$stateChangeUnauthorized",function(a,b,c){}),i.$on("$notLoggedIn",function(){g.go("login")}),i.$on("$authenticated",function(a){}))}]),angular.module("clientApp").factory("dataService",["$state","$http","$q","ENV","$rootScope",function(a,b,c,d,e){var f="production"===d.name||"staging"===d.name?{organizationId:e.user.customData.organizationId}:{organizationId:"3Qnv2pMAxLZqVdp7n8RZ0x"};return{getAssetTypes:function(){return b({method:"GET",url:"/api/asset-types",params:f}).then(function(a){return a},function(a){console.error(a)})},updateAssetTypes:function(c){return b({method:"PUT",url:"/api/asset-types",params:f,data:c}).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},getAssets:function(){return b({method:"GET",url:"/api/assets",params:f}).then(function(a){return a},function(a){console.error(a)})},getAssetsOfType:function(a){return b({method:"GET",url:"/api/assets/"+a,params:f}).then(function(a){return a},function(a){console.error(a)})},getAsset:function(a){return b.get("/api/assets/"+a).then(function(a){return a},function(a){console.error(a)})},createAsset:function(c){return b.post("/api/assets",c).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},updateAsset:function(c){return b({method:"PUT",url:"/api/assets/"+c.id,params:f,data:c}).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},deleteAsset:function(c){return b["delete"]("/api/assets/"+c).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},getProspectStatuses:function(){return b({method:"GET",url:"/api/prospect-statuses",params:f}).then(function(a){return a},function(a){console.error(a)})},updateProspectStatuses:function(c){return b({method:"PUT",url:"/api/prospect-statuses",params:f,data:c}).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},getProspects:function(){return b({method:"GET",url:"/api/prospects",params:f}).then(function(a){return a},function(a){console.error(a)})},getProspect:function(a){return b.get("/api/prospects/"+a).then(function(a){return a},function(a){console.error(a)})},createProspect:function(c){return b.post("/api/prospects",c).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},updateProspect:function(c){return b({method:"PUT",url:"/api/prospects/"+c.id,params:f,data:c}).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},deleteProspect:function(c,d){return b({method:"DELETE",url:"/api/prospects/"+c,params:d}).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},getDrivers:function(){return b({method:"GET",url:"/api/drivers",params:f}).then(function(a){return a},function(a){throw console.error(a),a})},getDriver:function(a){return b.get("/api/drivers/"+a).then(function(a){return a},function(a){console.error(a)})},createDriver:function(c){return b.post("/api/drivers",c).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},updateDriver:function(c){return b({method:"PUT",url:"/api/drivers/"+c.id,params:f,data:c}).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},deleteDriver:function(c,d){return b({method:"DELETE",url:"/api/drivers/"+c,params:d}).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},getCars:function(){return b({method:"GET",url:"/api/cars",params:f}).then(function(a){return a},function(a){throw console.error(a),a})},getCar:function(a){return b.get("/api/cars/"+a).then(function(a){return a},function(a){console.error(a)})},updateCar:function(c){return b({method:"PUT",url:"/api/cars/"+c.id,params:f,data:c}).then(function(b){return a.forceReload(),b},function(b){console.error(b),a.forceReload()})},createCar:function(c){return b.post("/api/cars",c).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},deleteCar:function(c,d){return b({method:"DELETE",url:"/api/cars/"+c,params:d}).then(function(b){return a.forceReload(),b},function(b){a.forceReload(),console.error(b)})},getGasCards:function(){return b.get("/api/assets/gas-cards",f).then(function(a){return a},function(a){console.error(a)})},getEzPasses:function(){return b.get("/api/assets/ez-passes",f).then(function(a){return a},function(a){console.error(a)})}}}]),angular.module("clientApp").directive("repeatFinished",function(){return function(a){a.$last&&a.status===a.prospectStatuses[a.prospectStatuses.length-1]&&a.$emit("repeatFinished")}}),angular.module("clientApp").controller("AddFieldModalInstanceCtrl",["$window","objectHelpers","assetType","objectType","$q","$state","getAssets","getCars","getDrivers","getProspects","$scope","$modalInstance","dataService",function(a,b,c,d,e,f,g,h,i,j,k,l,m){var n=b.isValid,o=b.buildEvalExpression,p=a._,q=this;if(q.update=null,q.fields=[],q.objects=[],q.objectType=d,q.assetType=c,k.formData={},k.expressionFieldSelect={value:null},k.expressionConstantInput={value:null},k.rightSide={value:!1},k.validExpression={value:!0},k.expressionErrorMessage=null,k.validFieldsForExpressions=[],q.testExpressionItems=[],q.testExpression="",q.rightTestExpressionItems=[],q.leftTestExpressionItems=[],k.field={name:null,type:null,dataType:null,expressionItems:[],expression:"",inequalitySign:"",inequalitySignId:null,leftExpressionItems:[],leftExpression:"",rightExpressionItems:[],rightExpression:""},q.setValidFieldsForExpressions=function(a){var b=Object.keys(a);k.validFieldsForExpressions=p.filter(b,function(b){return"number"===a[b].dataType})},k.setInequalitySign=function(a){switch(parseInt(a)){case 0:k.field.inequalitySign=">",k.field.inequalitySignId=0;break;case 1:k.field.inequalitySign="≥",k.field.inequalitySignId=1;break;case 2:k.field.inequalitySign="<",k.field.inequalitySignId=2;break;case 3:k.field.inequalitySign="≤",k.field.inequalitySignId=3;break;default:k.field.inequalitySign=void 0}},k.setDataType=function(a){switch(k.clearExpression(),a){case"text":k.field.dataType="text";break;case"number":k.field.dataType="number";break;case"boolean":k.field.dataType="boolean";break;case"function":k.field.dataType="number";break;case"inequality":k.field.dataType="boolean";break;default:k.field.dataType=void 0}},k.invalidFieldType=function(){return null===k.field.type||"undefined"==typeof k.field.type||null===k.field.dataType||"undefined"==typeof k.field.dataType},k.appendItemToFunction=function(a,b){var c=[];"function"===k.field.type?(k.field.expressionItems.push({type:b,value:a,location:"expressionItems"}),c=q.testExpressionItems):k.rightSide.value?(k.field.rightExpressionItems.push({type:b,value:a,location:"rightExpressionItems"}),c=q.rightTestExpressionItems):(k.field.leftExpressionItems.push({type:b,value:a,location:"leftExpressionItems"}),c=q.leftTestExpressionItems),q.validate(c,b,a),k.expressionFieldSelect.value=null,k.expressionConstantInput.value=null},q.validate=function(a,b,c){q.firstStageValidation(a,b,c).then(function(a){q.displayExpression().then(function(){q.buildTestExpression(a._testExpressionItems_).then(function(){a.valid&&(k.validExpression.value=!0,q.validateExpression())})})})},q.firstStageValidation=function(a,b,c){var d=e.defer();return k.validExpression.value=!0,a.length?"field"===b||"constant"===b?"operator"!==a[a.length-1].type?(a.push({type:b,value:c}),k.validExpression.value=!1,k.expressionErrorMessage="Missing operator before "+b+" "+c):"field"===b?a.push({type:b,value:"1"}):a.push({type:b,value:c}):a.push({type:b,value:c}):"field"===b?a.push({type:b,value:"1"}):a.push({type:b,value:c}),d.resolve({_testExpressionItems_:a,valid:k.validExpression.value}),d.reject(new Error("Error in first stage validation of expression")),d.promise},q.validateExpression=function(){k.expressionErrorMessage=void 0;try{k.$eval(q.testExpression)}catch(a){k.validExpression.value=!1,k.expressionErrorMessage=a.message}},q.buildTestExpression=function(a){var b=e.defer();return q.testExpression="",p.each(a,function(a){q.testExpression=q.testExpression+a.value}),b.resolve(q.testExpression),b.reject(new Error("Error building test expression")),b.promise},q.displayExpression=function(){var a=e.defer();return"function"===k.field.type?(k.field.expression="",a.resolve(p.each(k.field.expressionItems,function(a){k.field.expression=k.field.expression+a.value}))):k.rightSide.value?(k.field.rightExpression="",a.resolve(p.each(k.field.rightExpressionItems,function(a){k.field.rightExpression+=a.value}))):(k.field.leftExpression="",a.resolve(p.each(k.field.leftExpressionItems,function(a){k.field.leftExpression+=a.value}))),a.reject(new Error("Error getting display expression")),a.promise},k.undoExpression=function(){var a={},b=[];"function"===k.field.type?(b=q.testExpressionItems,a=k.field.expressionItems.pop()):k.rightSide.value?(b=q.rightTestExpressionItems,a=k.field.rightExpressionItems.pop()):(b=q.leftTestExpressionItems,a=k.field.leftExpressionItems.pop()),b.pop(),q.firstStageValidate_Undo().then(function(a){q.displayExpression().then(function(){q.buildTestExpression(b).then(function(){a&&(k.validExpression.value=!0,q.validateExpression())})})})},q.firstStageValidate_Undo=function(){var a,b=e.defer(),c=[];if(c="function"===k.field.type?q.testExpressionItems:k.rightSide.value?q.rightTestExpressionItems:q.leftTestExpressionItems,k.validExpression.value=!0,c.length>1&&(a=c[c.length-1],"field"===a.type||"constant"===a.type)){var d=c[c.length-2];"operator"!==d.type&&(k.validExpression.value=!1,k.expressionErrorMessage="Missing operator before "+d.type+" "+d.value)}return b.resolve(k.validExpression.value),b.reject(new Error("Error during first stage validation after undo")),b.promise},k.clearExpression=function(){q.testExpression="",q.testExpressionItems=[],q.leftTestExpressionItems=[],q.rightTestExpressionItems=[],k.field.expression="",k.field.expressionItems=[],k.field.leftExpressionItems=[],k.field.leftExpression="",k.field.rightExpressionItems=[],k.field.rightExpression="",k.field.inequalitySign="",k.field.inequalitySignId=null,k.validExpression.value=!0,k.expressionErrorMessage=void 0},"car"===d)q.update=m.updateCar,"undefined"!=typeof h&&h.length>0&&(q.objects=h);else if("driver"===d)q.update=m.updateDriver,"undefined"!=typeof i&&i.length>0&&(q.objects=i);else if("prospect"===d)q.update=m.updateProspect,"undefined"!=typeof j&&j.length>0&&(q.objects=j);else if("asset"===d){q.update=m.updateAsset;var r=p.filter(g,function(a){return a.assetType===q.assetType});"undefined"!==r&&r.length>0&&(q.objects=r)}else f.go("dashboard.cars");q.objects.length>0&&(q.fields=Object.keys(q.objects[0].data),q.setValidFieldsForExpressions(q.objects[0].data)),k.fieldNameAlreadyExists=function(){return p.contains(q.fields,k.field.name)},q.createNewFieldData=function(a){var c=e.defer();return"function"===a.type?c.resolve({value:null,log:k.formData.log||!1,dataType:a.dataType,type:a.type,expressionItems:a.expressionItems,expression:a.expression,fieldsUsed:{},expressionsUsedIn:{}}):"inequality"===a.type?c.resolve({value:null,log:k.formData.log||!1,dataType:a.dataType,type:a.type,leftExpressionItems:a.leftExpressionItems,rightExpressionItems:a.rightExpressionItems,inequalitySignId:a.inequalitySignId,leftExpression:a.leftExpression,rightExpression:a.rightExpression,inequalitySign:b.getInequalitySign(a.inequalitySignId),fieldsUsed:{}}):c.resolve({value:null,log:k.formData.log||!1,dataType:a.dataType,type:a.type,expressionsUsedIn:"number"===a.type?{}:void 0}),c.reject(new Error("Error creating new field data")),c.promise},q.appendNewFieldToObject=function(a,b,c){return c.data[a]=b,c},q.evaluateInequalityValue=function(a,b){return 0===k.field.inequalitySignId?a>b:1===k.field.inequalitySignId?a>=b:2===k.field.inequalitySignId?b>a:3===k.field.inequalitySignId?b>=a:void 0},k.inequalityIsComplete=function(){return"inequality"===k.field.type?k.field.rightExpressionItems.length>0&&k.field.leftExpressionItems.length>0&&null!==k.field.inequalitySignId&&"undefined"!=typeof k.field.inequalitySignId:!0},k.emptyExpression=function(){return"function"===k.field.type?k.field.expressionItems.length>0?!1:!0:"inequality"===k.field.type?k.field.leftExpressionItems.length>0&&k.field.rightExpressionItems.length>0&&null!==k.field.inequalitySignId&&"undefined"!=typeof k.field.inequalitySignId?!1:!0:!1},k.submit=function(){q.createNewFieldData(k.field).then(function(a){q.objects.length>0&&("function"===k.field.type?p.each(q.objects,function(b){q.evaluateExpression(b,k.field.expressionItems).then(function(c){a.value=c;var d=q.appendNewFieldToObject(k.field.name,a,b);q.update(d)})}):"inequality"===k.field.type?p.each(q.objects,function(b){q.evaluateExpression(b,k.field.leftExpressionItems).then(function(c){q.evaluateExpression(b,k.field.rightExpressionItems).then(function(d){c=parseFloat(c),d=parseFloat(d),a.value=q.evaluateInequalityValue(c,d);var e=q.appendNewFieldToObject(k.field.name,a,b);q.update(e)})})}):p.each(q.objects,function(b){var c=q.appendNewFieldToObject(k.field.name,a,b);q.update(c)})),k.ok(a,k.field.name)})},k.reset=function(){k.formData={},k.form.$setPristine(),k.form.$setUntouched(),f.forceReload()},k.ok=function(a,b){f.forceReload(),l.close({name:b,data:a})},k.close=function(){f.forceReload(),l.dismiss("cancel")},q.evaluateExpression=function(a,b){var c=e.defer();return o(a.data,b).then(function(a){c.resolve(n(k.$eval(a))?k.$eval(a):null),c.reject(new Error("Error evaluating expression"))}),c.promise}}]),angular.module("clientApp").factory("carHelpers",["$rootScope","$window","ENV","$q","dataService",function(a,b,c,d,e){function f(){return"production"===c.name||"staging"===c.name?a.user.customData.organizationId:"3Qnv2pMAxLZqVdp7n8RZ0x"}function g(){var a=d.defer();return o().then(function(b){if("undefined"!=typeof b.data&&b.data.length>0){var c=b.data[0];a.resolve(c.identifier),a.reject(new Error("Error getting identifier."))}else a.resolve(null),a.reject(new Error("Error getting identifier."))}),a.promise}function h(a,b){var c=d.defer();return a.assetType&&delete a.assetType,m().then(function(d){j().then(function(e){k(e,d).then(function(d){c.resolve({identifier:b,data:a,logs:d,driversAssigned:[],organizationId:f()}),c.reject(new Error("Error creating car"))})})}),c.promise}function i(){var a=d.defer();return a.resolve({identifier:null,data:{},logs:[],driversAssigned:[],organizationId:f()}),a.reject(new Error("Error getting default car.")),a.promise}function j(){var a=d.defer(),b=[];return o().then(function(c){var d=c.data;n.each(d,function(a){n.each(a.logs,function(a){b.push(a.weekOf)})}),a.resolve(n.uniq(b.sort(),!0).reverse()),a.reject(new Error("Error getting log dates"))}),a.promise}function k(a,b){var c=d.defer(),e=[];return n.each(a,function(a){e.push({data:b,weekOf:a,createdAt:new Date})}),c.resolve(e),c.reject(new Error("Error creating logs")),c.promise}function l(){var a=d.defer(),b=[];return o().then(function(c){var d=c.data;d.length>0&&(b=n.filter(Object.keys(d[0].data),function(a){return d[0].data[a].log})),a.resolve(b),a.reject(new Error("Error getting fields to be logged"))}),a.promise}function m(){var a=d.defer(),b={};return l().then(function(c){n.each(c,function(a){b[a]=null}),a.resolve(b),a.reject(new Error("Error creating log data"))}),a.promise}var n=b._,o=e.getCars,p=e.getCar,q=e.createCar,r=e.updateCar;return{get:o,getById:p,update:r,saveCar:q,createCar:h,getDefaultCar:i,getIdentifier:g,getOrganizationId:f,getLogDates:j,getFieldsToBeLogged:l,createLogData:m,createLogs:k}}]),angular.module("clientApp").factory("underscore",["$window",function(a){return{_:a._}}]),angular.module("clientApp").factory("driverHelpers",["$rootScope","$q","dataService","ENV","$window",function(a,b,c,d,e){function f(){return"production"===d.name||"staging"===d.name?a.user.customData.organizationId:"3Qnv2pMAxLZqVdp7n8RZ0x"}function g(a){return a["First Name"].value+" "+a["Last Name"].value}function h(a){return"First Name"!==a&&"Last Name"!==a&&"Name"!==a}function i(a){return console.log(a),null!==a["First Name"].value&&null!==a["Last Name"].value}function j(a){var c=b.defer();return a.Name={value:g(a),log:!1,dataType:"text",type:"text"},c.resolve(a),c.reject(new Error("Failed to inject full name")),c.promise}function k(a,c){var d=b.defer();return a.assetType&&delete a.assetType,j(a).then(function(){p().then(function(b){m().then(function(c){n(c,b).then(function(b){d.resolve({identifier:"Name",data:a,logs:b,carsAssigned:[],assetsAssigned:[],organizationId:f()}),d.reject(new Error("Error creating driver"))})})})}),d.promise}function l(){var a=b.defer();return a.resolve({identifier:"Name",data:{"First Name":{value:null,log:!1,dataType:"text",type:"text"},"Last Name":{value:null,log:!1,dataType:"text",type:"text"},Name:{value:null,log:!1,dataType:"text",type:"text"}},logs:[],carsAssigned:[],assetsAssigned:[],organizationId:f()}),a.reject(new Error("Error getting default driver.")),a.promise}function m(){var a=b.defer(),c=[];return r().then(function(b){var d=b.data;d.length>0&&q.each(d,function(a){q.each(a.logs,function(a){c.push(a.weekOf),c=q.uniq(c.sort(),!0).reverse()})}),a.resolve(c),a.reject(new Error("Error getting log dates"))}),a.promise}function n(a,c){var d=b.defer(),e=[];return q.each(a,function(a){e.push({data:c,weekOf:a,createdAt:new Date})}),d.resolve(e),d.reject(new Error("Error creating blank logs array")),d.promise}function o(){var a=b.defer(),c=[];return r().then(function(b){var d=b.data;d.length>0&&(c=q.filter(Object.keys(d[0].data),function(a){return d[0].data[a].log})),a.resolve(c),a.reject(new Error("Error getting fields to be logged"))}),a.promise}function p(){var a=b.defer(),c={};return o().then(function(b){q.each(b,function(a){c[a]=null}),a.resolve(c),a.reject(new Error("Error creating log data"))}),a.promise}var q=e._,r=c.getDrivers,s=c.getDriver,t=c.createDriver,u=c.updateDriver;return{getOrganizationId:f,get:r,getById:s,saveDriver:t,update:u,createDriver:k,notName:h,namesNotNull:i,getFullName:g,updateFullName:j,getDefaultDriver:l,getLogDates:m,getFieldsToBeLogged:o,createLogData:p,createLogs:n}}]),angular.module("clientApp").controller("DeleteObjModalCtrl",["$scope","$modal",function(a,b){a.open=function(a){var c=b.open({animation:!0,templateUrl:"views/deleteobjmodal.html",controller:"DeleteObjModalInstanceCtrl",size:"md",resolve:{id:function(){return a}}});c.result.then(function(a){console.log("passed back from DeleteFieldModalInstanceCtrl:",a)},function(){console.log("Modal dismissed at: "+new Date)})}}]),angular.module("clientApp").controller("DeleteObjModalInstanceCtrl",["id","dataService","$scope","$modalInstance","$state",function(a,b,c,d,e){c.input=null,c.objectType=null,c["delete"]=function(){},c.postDeleteState=null,e.includes("driverProfile")?(console.log("called from driver ui"),c.objectType="driver",c["delete"]=b.deleteDriver,c.postDeleteState="dashboard.drivers"):e.includes("carProfile")?(console.log("called from car ui"),c.objectType="car",c.postDeleteState="dashboard.cars",c["delete"]=b.deleteCar):e.includes("prospectProfile")?(console.log("called from prospect ui"),c.objectType="prospect",c["delete"]=b.deleteProspect,c.postDeleteState="dashboard.prospects"):console.log("delete field modal called from invalid state",e.current),c.submit=function(){"DELETE"===c.input&&("undefined"!=typeof a&&null!==a&&"string"==typeof c.objectType&&c["delete"](a),c.ok())},c.ok=function(){e.go(c.postDeleteState),d.close({type:c.objectType,id:a})},c.close=function(){e.forceReload(),d.dismiss("cancel")}}]),angular.module("clientApp").controller("DeleteFieldModalInstanceCtrl",["$window","objectHelpers","$q","getAssets","getProspects","getDrivers","getCars","objectType","thing","dataService","$scope","$modalInstance","$state",function(a,b,c,d,e,f,g,h,i,j,k,l,m){var n=a._,o=this;if(o.objects=[],o.update=null,k.confirmation={value:""},k.objectType=h,k.thing=i,"driver"===k.objectType)o.objects=f,o.update=j.updateDriver;else if("car"===k.objectType)o.objects=g,o.update=j.updateCar;else if("prospect"===k.objectType)o.objects=e,o.update=j.updateProspect;else{if("asset"!==k.objectType)throw Error("Undefined object type");o.objects=d,console.log(d),o.update=j.updateAsset}o.deleteExpressionsUsingField=function(a){var b=c.defer();return n.each(a.data,function(b,c){"function"===b.type?n.each(b.expressionItems,function(b){b.value===k.thing.fieldName&&(console.log(b.value+" is used in "+c+". deleting "+c+" from"+k.objectType+" "+a.id),delete a.data[c])}):"inequality"===b.type&&(n.each(b.leftExpressionItems,function(b){b.value===k.thing.fieldName&&(console.log(b.value+" is used in "+c+". deleting "+c+" from"+k.objectType+" "+a.id),delete a.data[c])}),n.each(b.rightExpressionItems,function(b){b.value===k.thing.fieldName&&(console.log(b.value+" is used in "+c+". deleting "+c+" from"+k.objectType+" "+a.id),delete a.data[c])}))}),b.resolve(a),b.reject(new Error("Error deleting functions and inequalities using "+k.thing.fieldName)),b.promise},k.submit=function(){if("DELETE"===k.confirmation.value&&void 0!==o.objects&&null!==o.objects)switch(k.thing.type){case"field":o.objects.forEach(function(a){b.removeFieldFromExpressions(a,k.thing.fieldName).then(function(c){b.updateDisplayExpressions(c).then(function(b){delete a.data[k.thing.fieldName],o.update(b)})})});break;case"log":o.objects.forEach(function(a){a.logs.forEach(function(b){b.weekOf===k.thing.logDate&&(a.logs.splice(a.logs.indexOf(b),1),o.update(a))})});break;default:console.error("Invalid delete")}k.ok()},k.ok=function(){m.forceReload(),l.close()},k.close=function(){m.forceReload(),l.dismiss("cancel")}}]),angular.module("clientApp").controller("AssignmentModalCtrl",["$window","datepicker","objectHelpers","objectType","subjectType","$q","$scope","getAssetTypes","getAssets","getCars","getDrivers","asset","car","driver","dataService","$modalInstance","$state",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){var r=a._,s=this;s.fullObjects=[],s.simpleObjects=[],s.subject={},s.subjectType=e,s.updateObj=null,s.updateSubj=null,g.datepicker=b,g.objIdentifier=null,g.formData={},g.objectType=d,g.assetTypes=h.data;var t=c.simplify;g.getAssetTypeIdentifier=function(){null!==g.formData.assetType&&"undefined"!=typeof g.formData.assetType},"driver"===s.subjectType?(console.log("assignment modal called from driverProfile"),s.subject=n,s.updateSubj=o.updateDriver,s.subjIdentifier="Name","car"===g.objectType?(s.updateObj=o.updateCar,j().then(function(a){s.fullObjects=a.data,g.objIdentifier=s.fullObjects[0].identifier,s.simpleObjects=t(s.fullObjects)})):"asset"===g.objectType&&(s.updateObj=o.updateAsset,i().then(function(a){s.fullObjects=a.data,s.simpleObjects=t(s.fullObjects),g.objIdentifiers=r.uniq(r.map(s.fullObjects,function(a){return a.assetType}))}))):"car"===s.subjectType?(console.log("assignment modal called from carProfile"),s.subject=m,s.updateSubj=o.updateCar,s.updateObj=o.updateDriver,s.subjIdentifier=s.subject.identifier,s.fullObjects=k.data,g.objIdentifier="Name",s.simpleObjects=t(s.fullObjects)):"asset"===s.subjectType?(console.log("assignment modal called from assetProfile"),s.subject=l,s.updateSubj=o.updateAsset,s.updateObj=o.updateDriver,s.subjIdentifier=s.subject.identifier,s.fullObjects=k.data,g.objIdentifier="Name",s.simpleObjects=t(s.fullObjects)):console.log("assignment modal called from invalid state",q.current),g.validForm=function(){return null===g.formData.objId||"undefined"==typeof g.formData.objId},g.reset=function(){g.formData={},g.form.$setPristine(),g.form.$setUntouched(),q.forceReload()},g.close=function(){q.forceReload(),p.close("ok")},s.getObjectIdentifierValue=function(a){var b=f.defer(),c=r.find(s.simpleObjects,function(b){return b.id===a});return b.resolve(c.identifierValue),b.reject("Failed to get identifier value"),b.promise},s.assignSubjectToObject=function(){console.log(s.subjIdentifier),console.log(s.subject);var a={id:s.subject.id,identifier:{name:s.subjIdentifier,value:s.subject.data[s.subjIdentifier].value},assetType:"asset"===s.subjectType?s.subject.assetType:null,dateAssigned:g.datepicker.dt.getTime(),dateUnassigned:null},b=r.find(s.fullObjects,function(a){return a.id===g.formData.objId});"driver"===g.objectType?"car"===s.subjectType?b.carsAssigned.push(a):"asset"===s.subjectType&&b.assetsAssigned.push(a):"car"===g.objectType?b.driversAssigned.push(a):"asset"===g.objectType?b.driversAssigned.push(a):console.log("Invalid assignment operation",{subject:s.subjectType,objects:g.objectType}),s.updateObj(b)},g.submit=function(){s.getObjectIdentifierValue(g.formData.objId).then(function(a){var b={id:parseInt(g.formData.objId),identifier:{name:g.objIdentifier,value:a},assetType:"asset"===g.objectType?g.assetType:null,dateAssigned:g.datepicker.dt.getTime(),dateUnassigned:null};"driver"===s.subjectType?("car"===g.objectType?s.subject.carsAssigned.push(b):"asset"===g.objectType&&s.subject.assetsAssigned.push(b),s.updateSubj(s.subject)):"car"===s.subjectType?(s.subject.driversAssigned.push(b),s.updateSubj(s.subject)):"asset"===s.subjectType?(s.subject.driversAssigned.push(b),s.updateSubj(s.subject)):console.log("Invalid assignment operation",{subject:s.subjectType,objects:g.objectType}),s.assignSubjectToObject(),g.close()})}}]),angular.module("clientApp").factory("prospectHelpers",["$rootScope","$window","ENV","$q","dataService",function(a,b,c,d,e){function f(a){return null!==a&&"undefined"!=typeof a}function g(){return"production"===c.name||"staging"===c.name?a.user.customData.organizationId:"3Qnv2pMAxLZqVdp7n8RZ0x"}function h(a){return a["First Name"].value+" "+a["Last Name"].value}function i(a){return null!==a["First Name"].value&&null!==a["Last Name"].value}function j(a){var b=d.defer();return a.Name={value:h(a),log:!1,dataType:"text",type:"text"},b.resolve(a),b.reject(new Error("Failed to inject full name")),b.promise}function k(a){var b=d.defer();return a.assetType&&delete a.assetType,j(a).then(function(a){b.resolve({identifier:"Name",status:a.status.value,data:a,organizationId:g()}),b.reject(new Error("Error creating prospect"))}),b.promise}function l(){var a,b,c=d.defer();return p().then(function(d){f(d.data)?d.data.statuses.length>0?(a=d.data.statuses,b=o.find(a,function(a){return a.special}),c.resolve(b),c.reject(new Error("Error getting default prospect status"))):c.reject(new Error("Error getting default prospect status: no statuses")):c.reject(new Error("Error getting default prospect status: return from getStatuses undefined"))}),c.promise}function m(){return l().then(function(a){return{identifier:"Name",status:a,data:{"First Name":{value:null,log:!1,dataType:"text",type:"text"},"Last Name":{value:null,log:!1,dataType:"text",type:"text"},Name:{value:null,log:!1,dataType:"text",type:"text"},status:{value:a.value,log:!1,dataType:"text",type:"text"}},organizationId:g()}})}function n(a,b){return a.status.value===b.value}var o=b._,p=e.getProspectStatuses;return{getOrganizationId:g,get:e.getProspects,getById:e.getProspect,getStatuses:e.getProspectStatuses,save:e.createProspect,update:e.updateProspect,updateStatuses:e.updateProspectStatuses,createProspect:k,deleteProspect:e.deleteProspect,namesNotNull:i,getFullName:h,updateFullName:j,getDefaultProspect:m,getDefaultStatus:l,belongsToStatus:n}}]),angular.module("clientApp").controller("ProspectStatusModalCtrl",["dataService","$scope","getProspectStatuses","$state","$modalInstance",function(a,b,c,d,e){
b.statuses=c.data,b.newStatus={value:null},b.validForm=function(){return null!==b.newStatus.value&&"undefined"!=typeof b.newStatus.value},b.submit=function(){b.statuses.statuses.push(b.newStatus),a.updateProspectStatuses(b.statuses),b.close()},b.reset=function(){b.newStatus={value:null}},b.close=function(){d.forceReload(),e.dismiss("cancel")}}]),angular.module("clientApp").controller("AddObjectModalInstanceCtrl",["$window","$timeout","getCars","getAssets","getProspects","getDrivers","objectType","$q","$modal","objectHelpers","assetHelpers","prospectHelpers","carHelpers","driverHelpers","dataService","$scope","$modalInstance","$state",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){var s=a._,t=this;p.formData={},p.objects=[],p.identifier={value:null},p.currentIdentifier={value:null},p.fields=[],p.fieldsToHide=["Name","assetType","status"],p.statuses=[],p.status={},p.assetTypes=[],p.assetType={value:null},p.expressions=[],p.objectType=g,t.getFormDataAndReference=function(){},p.create=function(){},p.update=function(){},p.save=function(){},p.disableConditions=function(){return!0},p.hide=function(a){return s.contains(p.fieldsToHide,a)},p.invalidIdentifier=function(a){return null===a.value||"undefined"==typeof a.value?!0:!1},p.identifierChanged=function(){return p.identifier.value!==p.currentIdentifier.value},p.disableAddField=function(){return"asset"===p.objectType&&(null===p.formData.assetType||"undefined"==typeof p.formData.assetType)},p.renderForm=function(){},t.hideExpressions=function(a){var b=h.defer();return b.resolve(s.each(a,function(a,b){"function"===a.type?(p.fieldsToHide.push(b),p.expressions.push({field:b,expression:a.expression})):"inequality"===a.type&&(p.fieldsToHide.push(b),p.expressions.push({field:b,expression:a.leftExpression+" "+a.inequalitySign+" "+a.rightExpression}))})),b.reject(new Error("Error building or storing expression")),b.promise},"driver"===p.objectType?(p.objects=f.data,p.update=n.updateDriver,p.create=n.createDriver,p.save=n.saveDriver,t.getFormDataAndReference=j.getFormDataAndReference,t.getFormDataAndReference("driver").then(function(a){t.hideExpressions(a.referenceObject.data).then(function(){p.currentIdentifier.value="Name",angular.copy(p.currentIdentifier,p.identifier),p.formData=a.formData,p.formData.assetType={value:null}})})):"car"===p.objectType?(p.objects=c.data,p.update=m.updateCar,p.create=m.createCar,p.save=m.saveCar,t.getFormDataAndReference=j.getFormDataAndReference,t.getFormDataAndReference("car").then(function(a){m.getIdentifier().then(function(b){t.hideExpressions(a.referenceObject.data).then(function(){p.formData=a.formData,p.formData.assetType={value:null},p.fields=Object.keys(a.formData),p.fields=s.without(p.fields,"assetType"),p.currentIdentifier.value=b,angular.copy(p.currentIdentifier,p.identifier),p.disableConditions=function(){return!0}})})})):"prospect"===p.objectType?(p.objects=e.data,p.update=l.update,p.create=l.createProspect,p.save=l.save,t.getFormDataAndReference=j.getFormDataAndReference,t.getFormDataAndReference("prospect").then(function(a){l.getStatuses().then(function(b){t.hideExpressions(a.referenceObject.data).then(function(){p.currentIdentifier.value="Name",angular.copy(p.currentIdentifier,p.identifier),p.statuses=b.data.statuses,p.formData=a.formData,p.formData.assetType={value:null}})})})):"asset"===p.objectType?(p.objects=d.data,p.update=k.updateAsset,p.create=k.createAsset,p.save=k.saveAsset,p.fieldsToHide.push("assetType"),t.getFormDataAndReference=k.getFormDataAndRepresentative,k.getAssetTypes().then(function(a){p.assetTypes=a.data.types,p.renderForm=function(a){j.getFormDataAndReference("asset",a).then(function(b){p.currentIdentifier.value=b.referenceObject.identifier,t.hideExpressions(b.referenceObject.data).then(function(){p.fields=Object.keys(b.formData),p.formData=b.formData,p.formData.assetType.value=a,p.disableConditions=k.invalidAssetType,angular.copy(p.currentIdentifier,p.identifier)})})}})):r.go("dashboard.cars"),p.submit=function(){p.create(p.formData,p.identifier.value,p.formData.assetType.value).then(function(a){j.evaluateExpressions(p.expressions,a).then(function(b){a=b,"car"===p.objectType?p.save(a).then(function(b){p.identifierChanged()&&s.each(p.objects,function(a){a.id!==b.data.id&&(a.identifier=p.identifier.value,p.update(a))}),p.ok(a)}):"prospect"===p.objectType?l.getDefaultStatus().then(function(b){a.status={value:p.status.value||b.value},a.data.status={value:p.status.value||b.value,log:!1,type:"text",dataType:"text"},p.save(a).then(function(b){p.identifierChanged()&&s.each(p.objects,function(a){a.id!==b.data.id&&(a.identifier=p.identifier.value,p.update(a))}),p.ok(a)})}):"driver"===p.objectType?p.save(a).then(function(b){p.identifierChanged()&&s.each(p.objects,function(a){a.id!==b.data.id&&(a.identifier=p.identifier.value,p.update(a))}),p.ok(a)}):"asset"===p.objectType&&p.save(a).then(function(b){if(p.identifierChanged()){var c=k.filterAssetsByType(p.objects,b.data.assetType);s.each(c,function(a){a.id!==b.data.id&&(a.identifier=p.identifier.value,p.update(a))})}p.ok(a)})})})},p.reset=function(){p.formData={},p.form.$setPristine(),p.form.$setUntouched(),r.forceReload()},p.ok=function(a){r.forceReload(),q.close(a)},p.close=function(){r.forceReload(),q.dismiss("close")},p.addField=function(a){var b=i.open({animation:!0,templateUrl:"views/addfieldmodal.html",controller:"AddFieldModalInstanceCtrl",size:"md",resolve:{getCars:function(){return"car"===g?p.objects:{}},getDrivers:function(){return"driver"===g?p.objects:{}},getProspects:function(){return"prospect"===g?p.objects:{}},getAssets:function(){return"asset"===g?p.objects:{}},objectType:function(){return g},assetType:function(){return"asset"===g?a:null}}});b.result.then(function(a){"function"!==a.data.type&&"inequality"!==a.data.type?(p.fields.push(a.name),p.formData[a.name]=a.data):(p.fieldsToHide.push(a.name),p.expressions.push({field:a.name,expression:a.data.expression}))},function(){r.forceReload()})}}]),angular.module("clientApp").factory("assetHelpers",["$rootScope","$window","ENV","$q","dataService",function(a,b,c,d,e){function f(a){return t().then(function(b){return"undefined"!=typeof b.data&&null!==b.data?{data:s.filter(b.data,function(b){var c="";return angular.copy(b.assetType,c),b.assetType===a})}:{data:[]}})}function g(){return"production"===c.name||"staging"===c.name?a.user.customData.organizationId:"3Qnv2pMAxLZqVdp7n8RZ0x"}function h(a){var b=d.defer(),c=[];return f(a).then(function(a){var d=a.data;i(d)&&d.length>0?(s.each(d[0].logs,function(a){c.push(a.weekOf)}),b.resolve(s.uniq(c.sort(),!0).reverse()),b.reject(new Error("Error getting asset log dates"))):(b.resolve([]),b.reject(new Error("Error getting asset log dates")))}),b.promise}function i(a){return null!==a&&"undefined"!=typeof a}function j(a,b){var c=d.defer(),e=[];return s.each(a,function(a){e.push({data:b,weekOf:a,createdAt:new Date})}),c.resolve(e),c.reject(new Error("Error creating logs for asset")),c.promise}function k(a){var b=d.defer(),c={};return r(a).then(function(d){console.log(d),s.each(d,function(a){c[a]=null}),console.log(c),b.resolve(c),b.reject(new Error("Error creating log data for assets "+a))}),b.promise}function l(a,b,c){var e=d.defer();return k(c).then(function(d){h(c).then(function(f){j(f,d).then(function(d){e.resolve({identifier:b,assetType:c,data:a,logs:d,driversAssigned:[],organizationId:g()}),e.reject(new Error("Error creating asset of type "+a.assetType.value))})})}),e.promise}function m(a){var b=d.defer();return b.resolve({identifier:null,assetType:a,data:{assetType:{value:a,log:!1,type:"text",dataType:"text"}},logs:[],driversAssigned:[],organizationId:g()}),b.reject(new Error("Error getting default car.")),b.promise}function n(a){var b=d.defer();return t().then(function(c){var d=s.filter(c.data,function(b){return b.assetType===a});d.length?(b.resolve(d[0].identifier),b.reject(new Error("Error getting identifier."))):(b.resolve(null),b.reject(new Error("Error getting identifier.")))}),b.promise}function o(a,b){return s.filter(a,function(a){return a.assetType===b})}function p(a,b){return a.assetType===b}function q(a){return null!==a.assetType||"undefined"==typeof a.assetType}function r(a){var b=d.defer(),c=[];return t().then(function(d){var e=o(d.data,a);e.length>0?(c=s.filter(Object.keys(e[0].data),function(a){return e[0].data[a].log}),b.resolve(c),b.reject(new Error("Error getting fields to be logged"))):(b.resolve(c),b.reject(new Error("Error getting fields to be logged")))}),b.promise}var s=b._,t=e.getAssets,u=e.getAsset,v=e.createAsset,w=e.updateAsset,x=e.deleteAsset,y=e.getAssetTypes;return{getOrganizationId:g,get:t,getAssetTypes:y,getByType:f,getById:u,saveAsset:v,update:w,createAsset:l,deleteAsset:x,belongsToType:p,invalidAssetType:q,getIdentifier:n,getFieldsToBeLogged:r,filterAssetsByType:o,getDefaultAsset:m,getLogDates:h}}]),angular.module("clientApp").controller("AssetTypeModalCtrl",["dataService","$scope","getAssetTypes","$state","$modalInstance",function(a,b,c,d,e){b.assetTypes=c.data,b.newType={value:null},b.validForm=function(){return null!==b.newType.value&&"undefined"!=typeof b.newType.value},b.submit=function(){b.assetTypes.types.push(b.newType),a.updateAssetTypes(b.assetTypes),b.close()},b.reset=function(){b.newType={value:null}},b.close=function(){d.forceReload(),e.dismiss("cancel")}}]),angular.module("clientApp").directive("validFunction",function(){return{}}),angular.module("clientApp").controller("EditFieldModalCtrl",["$window","objectHelpers","$modal","dataService","getDrivers","getAssets","getProspects","getCars","$modalInstance","$state","$scope","field","_object","objectType","$q","carHelpers","driverHelpers","prospectHelpers","assetHelpers",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){var t=this,u=b.buildDisplayExpression,v=q.notName,w=a._,x=a.alert;k.fieldNamesNotToEdit=[],k.statuses=null,k.prospectStatuses=null,k.loggable=function(a){return"prospect"!==k.objectType?v(a):!1},String.prototype.capitalizeIfStatus=function(){return"status"===this&&"prospect"===k.objectType?this.charAt(0).toUpperCase()+this.slice(1):this},k.dontEditFieldName=function(a){return w.contains(k.fieldNamesNotToEdit,a)},k.displayInequalitySign=function(a){switch(parseInt(a)){case 0:return">";case 1:return"≥";case 2:return"<";case 3:return"≤";default:return"?"}},t.buildTestExpressionItems=function(a){var b=o.defer(),c=[];return w.each(a,function(a){"field"===a.type?c.push({type:"field",value:"1"}):c.push(a)}),b.resolve(c),b.reject(new Error("Error building test expression")),b.promise},t.setValidFieldsForExpressions=function(a){var b=Object.keys(a);k.validFieldsForExpressions=w.filter(b,function(b){return"number"===a[b].dataType&&b!==l})},t.buildAndValidateExpression=function(){t.displayExpression().then(function(a){t.buildTestExpressionItems(a).then(function(a){u(a).then(function(a){t.validateExpression(a)})})})},k.buildAndValidateExpression=t.buildAndValidateExpression,t.displayExpression=function(){var a=o.defer();return"function"===k.field.type?(k.field.expression="",w.each(k.field.expressionItems,function(a){k.field.expression+=a.value}),a.resolve(k.field.expressionItems),a.reject(new Error("Error building display expression"))):k.rightSide.value?(k.field.rightExpression="",w.each(k.field.rightExpressionItems,function(a){k.field.rightExpression+=a.value}),a.resolve(k.field.rightExpressionItems),a.reject(new Error("Error building display expression"))):(k.field.leftExpression="",w.each(k.field.leftExpressionItems,function(a){k.field.leftExpression+=a.value}),a.resolve(k.field.leftExpressionItems),a.reject(new Error("Error building display expression"))),a.promise},t.validateExpression=function(a){k.expressionErrorMessage=void 0,k.validExpression.value=!0;try{k.$eval(a)}catch(b){console.error(b),k.validExpression.value=!1,k.expressionErrorMessage=b.message}},k.isProspectStatus=function(a){return"prospect"===k.objectType&&"status"===a},t.initialize=function(){k.logValueChanged={value:!1},k.expressionFieldSelect={value:null},k.expressionConstantInput={value:null},k.validExpression={value:!0},k.expressionErrorMessage=null,k.rightSide={value:!1},k.object=m,k.fields=w.without(Object.keys(k.object.data),l),k.objects=[],k.objectType=n,k.field={name:l,type:k.object.data[l].type,dataType:k.object.data[l].dataType,value:k.isProspectStatus(l)?k.object.status:k.object.data[l].value,log:k.object.data[l].log,expression:null,expressionItems:null,leftExpression:null,leftExpressionItems:null,rightExpression:null,rightExpressionItems:null,inequalitySignId:null,inequalitySign:null,identifier:k.object.identifier===l},"function"===k.field.type?(k.field.expression=k.object.data[l].expression,k.field.expressionItems=k.object.data[l].expressionItems):"inequality"===k.field.type&&(k.field.leftExpressionItems=k.object.data[l].leftExpressionItems,k.field.rightExpressionItems=k.object.data[l].rightExpressionItems,k.field.inequalitySignId=k.object.data[l].inequalitySignId,k.field.inequalitySign=k.object.data[l].inequalitySign,k.field.rightExpression=k.object.data[l].rightExpression,k.field.leftExpression=k.object.data[l].leftExpression)},t.initialize(),t.setValidFieldsForExpressions(k.object.data),"car"===n?(k.update=p.update,k.objects=h):"driver"===n?(k.fieldNamesNotToEdit.push("First Name","Last Name"),k.update=q.update,k.objects=e):"prospect"===n?(k.fieldNamesNotToEdit.push("status","First Name","Last Name"),k.update=r.update,k.objects=g,r.getStatuses().then(function(a){k.prospectStatuses=a.data,k.statuses=k.prospectStatuses.statuses})):"asset"===n?(k.update=s.update,k.objects=f):x("Unrecognized object type!"),k.fieldNameAlreadyExists=function(){return w.contains(k.fields,k.field.name)},k.appendItemToFunction=function(a,b){"function"===k.field.type?k.field.expressionItems.push({type:b,value:a}):k.rightSide.value?k.field.rightExpressionItems.push({type:b,value:a}):k.field.leftExpressionItems.push({type:b,value:a}),t.buildAndValidateExpression(),k.expressionFieldSelect.value=null,k.expressionConstantInput.value=null},k.undoExpression=function(){var a;"function"===k.field.type?k.field.expressionItems.length&&(a=k.field.expressionItems[k.field.expressionItems.length-1],k.field.expressionItems.pop()):k.rightSide.value?k.field.rightExpressionItems.length&&(a=k.field.rightExpressionItems[k.field.rightExpressionItems.length-1],k.field.rightExpressionItems.pop()):k.field.leftExpressionItems.length&&(a=k.field.leftExpressionItems[k.field.leftExpressionItems.length-1],k.field.leftExpressionItems.pop()),t.buildAndValidateExpression()},k.clearExpression=function(){"function"===k.field.type?(k.field.expression="",k.field.expressionItems=[]):k.rightSide.value?(k.field.rightExpression="",k.field.rightExpressionItems=[]):(k.field.leftExpression="",k.field.leftExpressionItems=[])},t.pruneFieldData=function(a){var b=o.defer(),c={};return angular.copy(a,c),delete c.identifier,delete c.name,"function"===k.field.type?(delete c.leftExpression,delete c.leftExpressionItems,delete c.rightExpression,delete c.rightExpressionItems,delete c.inequalitySignId,delete c.inequalitySign,a.expressionItems=k.field.expressionItems):"inequality"===k.field.type?(delete c.expressionItems,delete c.inequalitySign,delete c.expression,a.leftExpressionItems=k.field.leftExpressionItems,a.rightExpressionItems=k.field.rightExpressionItems,a.inequalitySignId=k.field.inequalitySignId):(delete c.expression,delete c.expressionItems,delete c.leftExpression,delete c.leftExpressionItems,delete c.rightExpression,delete c.rightExpressionItems,delete c.inequalitySignId,delete c.inequalitySign),b.resolve(c),b.reject(new Error("Error pruning field data")),b.promise},t.buildAndAppendDisplayExpression=function(a){var c=o.defer();return console.log("editField, buildAndAppendDisplayExpression, passed object:",a),"undefined"!=typeof a.data[k.field.name]&&("function"===k.field.type?u(k.field.expressionItems).then(function(b){a.data[k.field.name].expression=b}):"inequality"===k.field.type&&u(k.field.leftExpressionItems).then(function(c){u(k.field.rightExpressionItems).then(function(d){var e=b.getInequalitySign(k.field.inequalitySignId);a.data[k.field.name].leftExpression=c,a.data[k.field.name].inequalitySign=e,a.data[k.field.name].rightExpression=d})})),c.resolve(a),c.reject(new Error("Error appending expression to field data")),c.promise},t.updateLogStuff=function(a){var b=o.defer();return k.logValueChanged.value?(a.data[l].log=k.field.log,a.data[k.field.name].log=k.field.log,k.field.log&&w.each(a.logs,function(a){a.data[k.field.name]=null})):k.field.log&&k.field.name!==l&&w.each(a.logs,function(a){a.data[k.field.name]=a.data[l],delete a.data[l]}),b.resolve(a),b.reject(new Error("Error updating logs for field "+k.field.name)),b.promise},k.submit=function(){"prospect"===k.objectType&&"status"===k.field.name?(k.object.status=k.field.value,k.object.data[k.field.name].value=k.field.value.value,k.update(k.object)):w.each(k.objects,function(a){b.updateDataIfFieldNameChanged(l,k.field.name,a).then(function(a){t.updateLogStuff(a).then(function(a){t.buildAndAppendDisplayExpression(a).then(function(a){t.pruneFieldData(a.data[k.field.name]).then(function(){b.updateExpressionFieldsIfFieldNameChanged(l,k.field.name,a.data).then(function(c){a.data=c;var d=a;b.evaluateExpressionAndAppendValue(d.data,k.field.name).then(function(a){d.data=a;var c=d;b.storeFieldsUsed(c,k.field.name).then(function(a){b.updateFieldValueAndExpressionValues(k.field.value,k.field.name,a,k.object.id).then(function(a){k.field.identifier&&(a.identifier=k.field.name),k.object.id!==a.id||"prospect"!==k.objectType&&"driver"!==k.objectType||"First Name"!==k.field.name&&"Last Name"!==k.field.name||("First Name"===k.field.name?a.data.Name.value=k.field.value+" "+a.data["Last Name"].value:"Last Name"===k.field.name&&(a.data.Name.value=a.data["First Name"].value+" "+k.field.value)),k.update(a)})})})})})})})})}),k.ok()},k.invalidFieldType=function(){return null===k.field.type||"undefined"==typeof k.field.type||null===k.field.dataType||"undefined"==typeof k.field.dataType},k.emptyExpression=function(){return"function"===k.field.type?k.field.expressionItems.length>0?!1:!0:"inequality"===k.field.type?k.field.leftExpressionItems.length>0&&k.field.rightExpressionItems.length>0&&null!==k.field.inequalitySignId&&"undefined"!=typeof k.field.inequalitySignId?!1:!0:!1},k.inequalityIsComplete=function(){return"inequality"===k.field.type?k.field.rightExpressionItems.length>0&&k.field.leftExpressionItems.length>0&&null!==k.field.inequalitySignId&&"undefined"!=typeof k.field.inequalitySignId:!0},k.reset=function(){t.initialize(),k.form.$setPristine(),k.form.$setUntouched(),j.forceReload()},k.ok=function(){i.close()},k.close=function(){i.dismiss("cancel")},k["delete"]=function(){var a=c.open({animation:!0,templateUrl:"views/deletefieldmodal.html",controller:"DeleteFieldModalInstanceCtrl",size:"md",resolve:{thing:function(){return{fieldName:k.field.name,type:"field"}},getCars:function(){return"car"===k.objectType?k.objects:{}},getDrivers:function(){return"driver"===k.objectType?k.objects:{}},getProspects:function(){return"prospect"===k.objectType?k.objects:{}},getAssets:function(){return"prospect"===k.objectType?k.objects:{}},objectType:function(){return k.objectType}}});a.result.then(function(){k.ok()},function(){console.log("Modal dismissed at: "+new Date)})},k.setStatusChanged=function(a){var b=k.object;(b.status.value!==a||b.data.status.value!==a&&"undefined"!=typeof a&&null!==a)&&(k.statusChanged=!0,k.status=a)},k.updateStatus=function(a){var b=o.defer();return a.status.value=k.status,a.data.status.value=k.status,b.resolve(a),b.reject(new Error("Error updating status of prospect"+a.id)),b.promise}}]),angular.module("clientApp").factory("datepicker",function(){function a(){return u.startingDay}function b(a){if(!(a>=0&&6>=a))throw new Error("Invalid starting day");u.startingDay=a}function c(){switch(a()){case 0:return"Sunday";case 1:return"Monday";case 2:return"Tuesday";case 3:return"Wednesday";case 4:return"Thursday";case 5:return"Friday";case 6:return"Saturday";default:return"Invalid day"}}function d(){l=new Date}function e(){l=null}function f(a,b){return"day"===b&&(0===a.getDay()||6===a.getDay())}function g(){m=m?null:new Date}function h(a){o.opened=!0}function i(a,b,c){l=new Date(a,b,c)}function j(a,b){if("day"===b)for(var c=new Date(a).setHours(0,0,0,0),d=0;d<t.length;d++){var e=new Date(t[d].date).setHours(0,0,0,0);if(c===e)return t[d].status}return""}var k=864e5,l=new Date,m=null,n=new Date(l.getFullYear()+1,l.getMonth()+1),o={opened:!1},p=["dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],q=p[0],r=new Date(l.getTime()+k),s=new Date(l.getTime()+2*k),t=[{date:r,status:"full"},{date:s,status:"partially"}],u={formatYear:"yy",startingDay:0};return{getStartingDay:c,getStartingDayNum:a,setStartingDay:b,today:d,clear:e,disabled:f,toggleMin:g,open:h,setDate:i,getDayClass:j,dt:l,minDate:m,maxDate:n,status:o,format:q,tomorrow:r,afterTomorrow:s,events:t,dateOptions:u}}),angular.module("clientApp").controller("ObjectListCtrl",["$window","objectType","objectHelpers","carHelpers","driverHelpers","prospectHelpers","assetHelpers","$state","$modal","$q","$scope",function(a,b,c,d,e,f,g,h,i,j,k){var l=this,m=a._;k.objectType=b,k.order=[],l.getObjects=function(){switch(k.objectType){case"car":return k.title={value:"Car"},k.profile={state:"carData({ id: object.id })"},d.get;case"driver":return k.title={value:"Driver"},k.profile={state:"driverData({ id: object.id })"},e.get;case"prospect":return k.title={value:"Prospect"},k.profile={state:"prospectData({ id: object.id })"},f.getStatuses().then(function(a){l.prospectStatuses=a.data,k.statuses=l.prospectStatuses.statuses,k.newIndex={val:null};for(var b=0;b<k.statuses.length;b++)k.order[b]=b}),f.get;case"asset":return k.title={value:"Asset"},k.profile={state:"assetData({ id: object.id })"},g.getAssetTypes().then(function(a){if(c.isValid(a.data)){k.assetTypes=a.data,k.types=k.assetTypes.types;for(var b=0;b<k.types.length;b++)k.order[b]=b}}),g.get;default:return k.title={value:"Car"},k.profile={state:"carData({ id: object.id })"},d.get}},l.getObjects()().then(function(a){k.objects=a.data,k.simpleObjects=c.simplify(k.objects)}),k.thereAreObjects=function(){return"undefined"!=typeof k.objects&&k.objects.length>0},k.addObject=function(){var a=i.open({animation:!0,templateUrl:"views/addobjectmodal.html",controller:"AddObjectModalInstanceCtrl",size:"md",resolve:{objectType:function(){return k.objectType},getCars:function(){return"car"===k.objectType?d.get():[]},getDrivers:function(){return"driver"===k.objectType?e.get():[]},getProspects:function(){return"prospect"===k.objectType?f.get():[]},getAssets:function(){return"asset"===k.objectType?g.get():[]},assetType:function(){return null}}});a.result.then(function(){},function(){console.log("Modal dismissed at: "+new Date)})},k.addType=function(){var a=i.open({animation:!0,templateUrl:"views/assetTypeModal.html",controller:"AssetTypeModalCtrl",size:"md",resolve:{getAssetTypes:function(){return g.getAssetTypes()}}});a.result.then(function(){console.log("AssetTypeModal dismissed at: "+new Date)})},k.belongsToType=g.belongsToType,Array.prototype.move=function(a,b){if(b>=this.length)for(var c=b-this.length;c--+1;)this.push(void 0);this.splice(b,0,this.splice(a,1)[0])},l.updateOrder=function(a,b){k.types.move(a,b),k.assetTypes.types=k.types},k.updateTypeInAssets=function(a,b){m.each(k.assets,function(c){c.status.value===a&&(c.status.value=b,c.data.status.value=b,g.update(c))})},k.saveType=function(a,b,c){parseInt(b)!==parseInt(k.newIndex.val)&&l.updateOrder(b,k.newIndex.val),g.updateTypes(k.assetTypes),k.updateTypeInAssets(c,a.name),h.forceReload()},k.belongsToStatus=f.belongsToStatus,l.updateOrder=function(a,b){k.statuses.move(a,b),l.prospectStatuses.statuses=k.statuses},l.updateStatusInProspects=function(a,b){m.each(k.objects,function(c){c.status.value===a&&(c.status.value=b,c.data.status.value=b,f.update(c))})},k.saveStatus=function(a,b,c){parseInt(b)!==parseInt(k.newIndex.val)&&l.updateOrder(b,k.newIndex.val),f.updateStatuses(l.prospectStatuses),l.updateStatusInProspects(c,a.name),h.forceReload()},l.getDefaultStatus=function(){return m.findWhere(k.statuses,{special:!0})},l.unassignProspects=function(a){var b=l.getDefaultStatus();m.each(k.objects,function(c){c.status.value===a&&(c.status=b,c.data.status=b,f.update(c))})},k.deleteStatus=function(a,b){k.statuses.splice(a,1),l.prospectStatuses.statuses=k.statuses,f.updateStatuses(l.prospectStatuses),l.unassignProspects(b),h.forceReload()},k.addStatus=function(){var a=i.open({animation:!0,templateUrl:"views/prospectstatusmodal.html",controller:"ProspectStatusModalCtrl",size:"md",resolve:{getProspectStatuses:function(){return f.getStatuses()}}});a.result.then(function(){console.log("Modal dismissed at: "+new Date)})}}]),angular.module("clientApp").factory("objectHelpers",["$window","$rootScope","ENV","$q","dataService","$state","carHelpers","driverHelpers","prospectHelpers","assetHelpers",function(a,b,c,d,e,f,g,h,i,j){function k(a,b,c,e){var f=d.defer(),g=c.data[b];return c.id===e?"number"===g.type||"function"===g.type?("number"===g.type&&(g.value=a),C.each(g.expressionsUsedIn,function(a,b){t(c.data,b).then(function(a){c.data=a})}),f.resolve(c),f.reject(new Error("Error updating field value and updating expressions"))):"text"===g.type||"boolean"===g.type?(g.value=a,f.resolve(c),f.reject(new Error("Error updating field value and updating expressions"))):(f.resolve(c),f.reject(new Error("Error updating field value and updating expressions"))):(f.resolve(c),f.reject(new Error("Error updating field value and updating expressions: irrelevant object id"))),f.promise}function l(a){var b=d.defer();return C.each(a.data,function(a,b){"function"===a.type?m(a.expressionItems).then(function(b){a.expression=b}):"inequality"===a.type&&m(a.leftExpressionItems).then(function(b){m(a.rightExpressionItems).then(function(c){a.leftExpression=b,a.inequalitySign=s(a.inequalitySignId),a.rightExpression=c})})}),b.resolve(a),b.reject(new Error("Error building or storing expression")),b.promise}function m(a){var b=d.defer(),c="";return C.each(a,function(a){c+=a.value}),b.resolve(c),b.reject(new Error("Error building expression")),b.promise}function n(a,b){var c=d.defer(),e=a.data[b];return"undefined"!=typeof e&&C.each(e.expressionsUsedIn,function(c,d){C.each(c,function(c,e){C.each(c,function(c,e){C.each(c,function(c,f){a.data[d][e].splice(c,1),a.data[d].fieldsUsed[b].locations[e].splice(f,1)})})})}),c.resolve(a),c.reject(new Error("Error removing "+b+" from functions and inequalities")),c.promise}function o(a){return null!==a&&"undefined"!=typeof a}function p(a,b){var c=d.defer();return"undefined"==typeof a?C.filter(b.data,function(a,b){return"function"===a.type||"inequality"===a.type}).each(function(a,c){t(b.data,c,b).then(function(a){b.data=a})}):C.each(a,function(a){var c=a.field||a.name;t(b.data,c,b).then(function(a){b.data=a})}),c.resolve(b),c.reject(new Error("Error evaluating expressions")),c.promise}function q(a){return C.map(a,function(a){return{id:a.id,identifier:a.identifier,identifierValue:a.data[a.identifier].value,assetType:o(a.assetType)&&"string"==typeof a.assetType?a.assetType:null}})}function r(a){return{id:a.id,identifier:a.identifier,identifierValue:a.data[a.identifier].value,assetType:o(a.assetType)&&"string"==typeof a.assetType?a.assetType:null}}function s(a){switch(parseInt(a)){case 0:return">";case 1:return">=";case 2:return"<";case 3:return"<=";default:return"?"}}function t(a,c,e){var f=d.defer(),g="";return"function"===a[c].type?x(a,a[c].expressionItems).then(function(d){a[c].value=o(d)?b.$eval(d):null,f.resolve(a),f.reject(new Error("Error evaluating expression"))}):"inequality"===a[c].type?x(a,a[c].leftExpressionItems).then(function(d){x(a,a[c].rightExpressionItems).then(function(e){g=s(a[c].inequalitySignId),a[c].value=o(d)&&o(g)&&o(e)?b.$eval(d+g+e):null,f.resolve(a),f.reject(new Error("Error evaluating expression"))})}):(f.resolve(a),f.reject(new Error("Error evaluating expression"))),f.promise}function u(a,b,c){var e=d.defer();return a!==b&&(c.data[b]=c.data[a],delete c.data[a]),e.resolve(c),e.reject(new Error("Error changing field name "+a+" to "+b)),e.promise}function v(a,c,e,f){var g=d.defer();return console.log("objHelpers, updateExpressionFieldsIfFieldNameChanged, passed objectData:",e),a!==c&&w(a,c,e).then(function(a){C.each(a,function(a,c,d){"function"===a.type?x(d,a.expressionItems,f).then(function(a){e[c].value=o(a)?b.$eval(a):null}):"inequality"===a.type&&x(d,a.leftExpressionItems,f).then(function(g){x(d,a.rightExpressionItems,f).then(function(d){var f=s(a.inequalitySignId);e[c].value=o(g)&&o(d)&&o(f)?b.$eval(g+f+d):null})})})}),g.resolve(e),g.reject(new Error("Error updating expressions")),g.promise}function w(a,c,e){var f=d.defer();return C.each(e,function(b,d,e){"function"===b.type?b.expression=C.each(b.expressionItems,function(d){"field"===d.type&&d.value===a&&(d.value=c,b.fieldsUsed[c]=b.fieldsUsed[a],delete b.fieldsUsed[a])}).reduce(function(a,b){return a+b.value},""):"inequality"===b.type&&(b.leftExpression=C.each(b.leftExpressionItems,function(b){"field"===b.type&&b.value===a&&(b.value=c)}).reduce(function(a,b){return a+b.value},""),b.rightExpression=C.each(b.rightExpressionItems,function(b){"field"===b.type&&b.value===a&&(b.value=c)}).reduce(function(a,b){return a+b.value},""),b.inequalitySign=s(b.inequalitySignId),b.fieldsUsed[c]=b.fieldsUsed[a],delete b.fieldsUsed[a])}),f.resolve(e),f.reject(new Error("Error replacing "+a+" with "+c+" for expressions in "+b.objectType)),f.promise}function x(a,b,c){var e=d.defer(),f="";return C.each(b,function(b){"field"===b.type?o(a[b.value].value)?f+=a[b.value].value:e.resolve(null):f+=b.value}),e.resolve(f),e.reject(new Error("Error building evaluation expression")),e.promise}function y(a,b,c){var e,f=d.defer();return C.each(c.data[a].fieldsUsed,function(d){e=d,C.where(c.data[d.name].expressionsUsedIn,{name:a}).each(function(a){a.name=b})}),f.resolve(c),f.reject(new Error("Error replacing "+a+" with "+b+" for expressionsUsedIn for field "+e)),f.promise}function z(a,b,c){var e,f=d.defer();return C.each(c.data[a].expressionsUsedIn,function(d){e=d.name,C.each(d.locations,function(e){var g=C.where(c.data[d.name][e],{type:"field",value:a}).each(function(a){a.value=b}).reduce(function(a,b){return a+b.value},"");"leftExpressionItems"===e?c.data[d.name].leftExpression=g:"rightExpressionItems"===e?c.data[d.name].rightExpression=g:"expressionItems"===e?c.data[d.name].expression=g:f.reject(new Error("Error replacing "+a+" with "+b+" for fields used in expressions "+d.name))})}),f.resolve(c),f.reject(new Error("Error replacing "+a+" with "+b+" for fields used in expressions "+e)),f.promise}function A(a,b){var c=d.defer();return c.resolve(a),c.reject(new Error("Error: "+b+" has invalid type. This works only for function and inequality fields.")),c.promise}function B(a,b){var c,e,f,k,l=d.defer(),m={};return"car"===a?(e=g.get,f=g.getDefaultCar):"driver"===a?(e=h.get,f=h.getDefaultDriver):"prospect"===a?(e=i.get,f=i.getDefaultProspect):"asset"===a?(e=j.getByType,f=j.getDefaultAsset):l.reject(void 0),e(b).then(function(d){o(d.data)&&d.data.length>0?(k=d.data[0],c=k.data,C.each(c,function(a,b,c){m[b]={value:"boolean"===a.type?!1:null,log:a.log,dataType:a.dataType,type:a.type},"function"===a.type&&(m[b].expression=a.expression,m[b].expressionItems=a.expressionItems),"inequality"===a.type&&(m[b].leftExpressionItems=a.leftExpressionItems,m[b].rightExpressionItems=a.rightExpressionItems,m[b].inequalitySignId=a.inequalitySignId,m[b].leftExpression=a.leftExpression,m[b].rightExpression=a.rightExpression,m[b].inequalitySign=a.inequalitySign),("number"===a.type||"function"===a.type)&&(m[b].expressionsUsedIn=a.expressionsUsedIn),("inequality"===a.type||"function"===a.type)&&(m[b].fieldsUsed=a.fieldsUsed)}),l.resolve({formData:m,referenceObject:k}),l.reject(new Error("Error initializing form data for "+a))):f(b).then(function(b){l.resolve({
formData:b.data,referenceObject:b}),l.reject(new Error("Error initializing form data for "+a))})}),l.promise}var C=a._;return{isValid:o,simplify:q,simplifyOne:r,getInequalitySign:s,updateExpressionFieldsIfFieldNameChanged:v,updateExpressionNameInFields:y,updateFieldNameInExpressions:z,storeFieldsUsed:A,evaluateExpressionAndAppendValue:t,evaluateExpressions:p,removeFieldFromExpressions:n,buildDisplayExpression:m,buildEvalExpression:x,updateDisplayExpressions:l,updateFieldValueAndExpressionValues:k,updateDataIfFieldNameChanged:u,getFormDataAndReference:B}}]),angular.module("clientApp").controller("ObjectDataCtrl",["$window","objectType","objectId","objectHelpers","assetHelpers","prospectHelpers","driverHelpers","carHelpers","$q","$state","$scope","$modal",function(a,b,c,d,e,f,g,h,i,j,k,l){var m=a._,n=this;k.objectType=b,k.carIdentifier=null,k.valid=function(a){return null!==a&&"undefined"!=typeof a},n.getObject=function(){return"car"===k.objectType?(k.state={data:"carData({ id: object.id })",logs:"carLogs({ id: object.id })"},h.getById):"driver"===k.objectType?(k.state={data:"driverData({ id: object.id })",logs:"driverLogs({ id: object.id })"},h.getIdentifier().then(function(a){k.carIdentifier=a}),g.getById):"prospect"===k.objectType?(k.state={data:"prospectData({ id: object.id })",logs:null},f.getById):"asset"===k.objectType?(k.state={data:"assetData({ id: object.id })",logs:"assetLogs({ id: object.id })"},e.getById):void 0},n.getObjects=function(){return"car"===k.objectType?h.get:"driver"===k.objectType?g.get:"prospect"===k.objectType?f.get:"asset"===k.objectType?e.getByType:void 0},n.getObject()(c).then(function(a){"undefined"!=typeof a&&(k.object=a.data),n.assetType=k.object.assetType,k.identifierValue=k.object.data[k.object.identifier].value,k.tabs=[{title:"Data",active:!0,state:k.state.data},{title:"Logs",active:!1,state:k.state.logs}],n.getObjects()(k.object.assetType).then(function(a){n.objects=a.data})}),k.addField=function(){var a=l.open({animation:!0,templateUrl:"views/addfieldmodal.html",controller:"AddFieldModalInstanceCtrl",size:"md",resolve:{getCars:function(){return"car"===k.objectType?n.objects:{}},getDrivers:function(){return"driver"===k.objectType?n.objects:{}},getProspects:function(){return"prospect"===k.objectType?n.objects:{}},getAssets:function(){return"asset"===k.objectType?n.objects:{}},assetType:function(){return"asset"===k.objectType?n.assetType:null},objectType:function(){return k.objectType}}});a.result.then(function(){j.forceReload()},function(){j.forceReload(),console.log("Modal dismissed at: "+new Date)})},k.assign=function(a){var b=l.open({animation:!0,templateUrl:"views/assignmentmodal.html",controller:"AssignmentModalCtrl",size:"md",resolve:{getDrivers:function(){return"car"===k.objectType?g.get:null},getCars:function(){return"driver"===k.objectType?h.get:null},driver:function(){return"driver"===k.objectType?k.object:null},car:function(){return"car"===k.objectType?k.object:null},subjectType:function(){return k.objectType},objectType:function(){return a},getAssetTypes:function(){return"driver"===k.objectType?e.getAssetTypes:null},getAssets:function(){return"driver"===k.objectType?e.getAssets:null},asset:function(){return"asset"===k.objectType?g.get:null}}});b.result.then(function(a){console.log("passed back from AssignmentModalCtrl:",a)},function(){console.log("Modal dismissed at: "+new Date)})},k.editField=function(a,b){var c=l.open({animation:!0,templateUrl:"views/editFieldModal.html",controller:"EditFieldModalCtrl",size:"md",resolve:{field:function(){return b},_object:function(){return a},objectType:function(){return k.objectType},getCars:function(){return"car"===k.objectType?n.objects:[]},getProspects:function(){return"prospect"===k.objectType?n.objects:[]},getDrivers:function(){return"driver"===k.objectType?n.objects:[]},getAssets:function(){return"asset"===k.objectType?n.objects:[]}}});c.result.then(function(){j.forceReload()},function(){console.log("Modal dismissed at: "+new Date),j.forceReload()})},k.notName=function(a){return("prospect"===k.objectType||"driver"===k.objectType)&&"Name"===a||"assetType"===a},k.notStatus=function(a){return"status"!==a.toLowerCase()},String.prototype.capitalizeIfStatus=function(){return"status"===this&&"prospect"===k.objectType?this.charAt(0).toUpperCase()+this.slice(1):this},k.notNameOrStatus=function(a){return"First Name"!==a&&"Last Name"!==a&&"Name"!==a&&"status"!==a.toLowerCase()},n.getUniqueFieldName=function(a,b){return m.contains(a,b)?n.getUniqueFieldName(a,"~"+b):b},n.getFieldsInCommon=function(a,b){var c=i.defer(),d=Object.keys(a).length,e=Object.keys(b).length,f=[];return e>=d?m.each(a,function(a,c){"undefined"!=typeof b[c]&&b[c].type===a.type&&f.push(c)}):m.each(b,function(b,c){"undefined"!=typeof a[c]&&a[c].type===b.type&&f.push(c)}),c.resolve(f),c.reject(new Error("Error getting fields in common between driver and prospect")),c.promise},n.partitionFields=function(a,b){var c=i.defer();return n.getFieldsInCommon(a,b).then(function(d){var e=Object.keys(a),f=Object.keys(b),g=[],h=[];g=m.difference(e,d),h=m.difference(f,d),c.resolve({uniqueToProspect:m.without(g,"status"),uniqueToDriver:h,inCommon:d}),c.reject(new Error("Error partitioning driver and prospect fields"))}),c.promise},n.resolveNameConflicts=function(a,b){var c=i.defer();return m.each(a.uniqueToProspect,function(c){var e=n.getUniqueFieldName(a.uniqueToDriver,c);e!==c&&(a.uniqueToProspect[m.indexOf(a.uniqueToProspect,c)]=e,b[e]=b[c],delete b[c],d.updateExpressionFieldsIfFieldNameChanged(c,e,b).then(function(a){b=a}))}),c.resolve({partedFields:a,prospectData:b}),c.reject(new Error("Error changing prospect field names")),c.promise},n.addProspectFieldsToExistingDrivers=function(a,b){var c=i.defer(),d=a;return g.get().then(function(a){var e=a.data;"undefined"!=typeof e&&null!==e&&e.length>0?m.each(e,function(a,e){m.each(d,function(d){a.data[d]={value:null,log:!1,type:b[d].type,dataType:b[d].dataType,expression:"function"===b[d].type?b[d].expression:void 0,expressionItems:"function"===b[d].type?b[d].expressionItems:void 0,leftExpressionItems:"inequality"===b[d].type?b[d].leftExpressionItems:void 0,rightExpressionItems:"inequality"===b[d].type?b[d].rightExpressionItems:void 0,inequalitySignId:"inequality"===b[d].type?b[d].inequalitySignId:void 0,inequalitySign:"inequality"===b[d].type?b[d].inequalitySign:void 0,leftExpression:"inequality"===b[d].type?b[d].leftExpression:void 0,rightExpression:"inequality"===b[d].type?b[d].rightExpression:void 0},a.data.status&&delete a.data.status,g.update(a).then(function(a){0===e&&(c.resolve(a.config.data.data),c.reject(new Error("Error getting updated driver data after adding prospect fields")))})})}):(c.resolve(b),c.reject(new Error("Error getting updated driver data after adding prospect fields")))}),c.promise},n.buildNewDriverData=function(a,b){var c=i.defer();return m.each(a,function(c,d){m.contains(b.inCommon,d)||m.contains(b.uniqueToProspect,d)?a[d]=k.object.data[d]:a[d].value=null}),c.resolve(a),c.reject(new Error("Error creating new driver from prospect")),c.promise},k.convert=function(){d.getFormDataAndReference("driver").then(function(a){n.partitionFields(k.object.data,a.referenceObject.data).then(function(a){n.resolveNameConflicts(a,k.object.data).then(function(a){n.addProspectFieldsToExistingDrivers(a.partedFields.uniqueToProspect,a.prospectData).then(function(b){n.buildNewDriverData(b,a.partedFields).then(function(a){g.createDriver(a).then(function(a){a.data.status&&delete a.data.status,g.saveDriver(a).then(function(){f.deleteProspect(k.object.id),j.go("dashboard.prospects")})})})})})})})}}]),angular.module("clientApp").controller("ObjectLogsCtrl",["$window","objectType","objectId","carHelpers","driverHelpers","prospectHelpers","assetHelpers","$state","$q","$scope",function(a,b,c,d,e,f,g,h,i,j){var k=this,l=a._;k.objectType=b,k.logDataObj={},k.getObject=function(){return"car"===k.objectType?(k.update=d.update,j.state={data:"carData({ id: object.id })",logs:"carLogs({ id: object.id })"},d.getById):"driver"===k.objectType?(k.update=e.update,j.state={data:"driverData({ id: object.id })",logs:"driverLogs({ id: object.id })"},e.getById):"prospect"===k.objectType?(k.update=f.update,j.state={data:"prospectData({ id: object.id })",logs:null},f.getById):"asset"===k.objectType?(k.update=g.update,j.state={data:"assetData({ id: object.id })",logs:"assetLogs({ id: object.id })"},g.getById):void 0},k.getLogDates=function(){return"car"===k.objectType?d.getLogDates:"driver"===k.objectType?e.getLogDates:"prospect"===k.objectType?function(){}:"asset"===k.objectType?g.getLogDates:void 0},k.getObject()(c).then(function(a){j.object=a.data,j.identifierValue=j.object.data[j.object.identifier].value,j.assetType=j.object.assetType||null,j.tabs=[{title:"Data",active:!1,state:j.state.data},{title:"Logs",active:!0,state:j.state.logs}],k.getLogDates()(j.assetType).then(function(a){k.dates=a,k.mostRecentLogDate=k.getMostRecentLogDate(),k.getFieldsToBeLogged(j.object).then(function(a){j.fields=a,k.logDataToArray()})})}),j.getLogDataByDate=function(a){return k.logDataObj[a]},j.notExpressionField=function(a){return"function"!==a&&"inequality"!==a},k.logDataToArray=function(){l.each(k.dates,function(a){var b=[],c=l.findWhere(j.object.logs,{weekOf:a});l.each(j.fields,function(a){b.push({field:a,value:c.data[a],type:j.object.data[a].type})}),k.logDataObj[a]=b})},k.getMostRecentLogDate=function(){return k.dates[0]},k.getFieldsToBeLogged=function(a){var b=i.defer(),c=[];if(a)for(var d in a.data)a.data[d].log===!0&&c.push(d);return b.resolve(c),b.reject(new Error("Error getting fields to be logged")),b.promise},k.updateMostRecentData=function(){var a=i.defer(),b=l.find(j.object.logs,function(a){return a.weekOf===k.mostRecentLogDate});for(var c in b.data)null!==b.data[c]&&"undefined"!=typeof b.data[c]&&(j.object.data[c].value=b.data[c]);return a.resolve(j.object),a.reject(new Error("Errror updating most recent log")),a.promise},j.save=function(a){a===k.mostRecentLogDate&&(console.log("most recent updated"),k.updateMostRecentData().then(function(a){k.update(a)})),k.update(j.object)}}]),angular.module("clientApp").controller("ObjectsLogsCtrl",["$window","$modal","objectType","objectHelpers","datepicker","carHelpers","driverHelpers","prospectHelpers","assetHelpers","$q","$scope","$state",function(a,b,c,d,e,f,g,h,i,j,k,l){var m=this,n=a._;k.objectType=c,k.datepicker=e,k.dummyNum={value:null},k.dates=[],m.getObjects=function(){return"car"===k.objectType?(k.title="Car",k.state={logs:"carLogs({ id: object.id })"},m.update=f.update,f.get):"driver"===k.objectType?(k.title="Driver",k.state={logs:"driverLogs({ id: object.id })"},m.update=g.update,g.get):"prospect"===k.objectType?(k.title="Prospect",k.state=null,m.update=h.update,h.get):"asset"===k.objectType?(k.state={logs:"assetLogs({ id: object.id })"},m.update=i.update,i.getAssetTypes):void 0},m.getLogDates=function(){return"car"===k.objectType?f.getLogDates:"driver"===k.objectType?g.getLogDates:"prospect"===k.objectType?function(){}:"asset"===k.objectType?i.getLogDates:void 0},m.getAssetsOfTypeAndLogs=function(a){i.getByType(a).then(function(a){k.objects=d.isValid(a.data)?a.data:[],k.simpleObjects=d.simplify(k.objects),m.identifier=k.objects[0].identifier}),m.getLogDates()(a).then(function(a){k.dates=a,m.getMostRecentLogDate()})},m.getObjects()().then(function(a){"asset"!==k.objectType?(k.objects=a.data,d.isValid(k.objects)&&k.objects.length&&(k.simpleObjects=d.simplify(k.objects),m.getLogDates()().then(function(a){k.dates=a,m.getMostRecentLogDate()}))):(k.assetTypes=a.data.types,k.tabs=[],k.assetType=null,k.assetTypes.length&&(k.assetType=k.assetTypes[0].value,n.each(k.assetTypes,function(a,b){k.tabs.push({title:a.value,active:0===b})}),m.getAssetsOfTypeAndLogs(k.assetType)))}),k.renderLogs=function(a){k.assetType=a,k.title=a,m.getAssetsOfTypeAndLogs(k.assetType)},k.ifAssetIsOfType=function(a){return"asset"===k.objectType?a.assetType===k.assetType:!0},m.getMostRecentLogDate=function(){k.dates.length>0?m.mostRecentLogDate=k.dates[0]:m.mostRecentLogDate=null},m.getFieldsToBeLogged=function(a){var b=j.defer(),c=[];for(var d in a.data)a.data[d].log===!0&&c.push(d);return b.resolve(c),b.reject(new Error("Error getting fields to be logged")),b.promise},m.newDataObj=function(){var a=j.defer(),b={},c="asset"!==k.objectType?k.objects:i.filterAssetsByType(k.objects,k.assetType);return m.getFieldsToBeLogged(c[0]).then(function(a){n.each(a,function(a){b[a]=null})}),a.resolve(b),a.reject(new Error("Error creating log.data")),a.promise},m.createLogForObject=function(a,b,c){var d=j.defer();return n.contains(k.dates,b)||a.logs.push({createdAt:new Date,weekOf:b,data:c}),d.resolve(a),d.reject(new Error("Error creating log for object "+a.id)),d.promise},k.newLog=function(){var b=k.datepicker.dt,c=new Date(b.getFullYear(),b.getMonth(),b.getDate(),0,0,0).getTime(),d=m.newDataObj().then(function(d){n.contains(k.dates,c)?a.alert("Log for "+b.toDateString()+" already exists!"):n.each(k.objects,function(a){m.createLogForObject(a,c,d).then(m.update)})});j.all([d]).then(function(){n.contains(k.dates,c)||(m.createNewRow(c),l.forceReload())})["catch"](function(a){console.error(a)})},k.notExpressionField=function(a,b){var c,d;return"asset"===k.objectType?b.assetType===k.assetType?(d=i.filterAssetsByType(k.objects,k.assetType),c=d[0].data[a].type,"function"!==c&&"inequality"!==c):!1:"asset"!==k.objectType?(c=k.objects[0].data[a].type,"function"!==c&&"inequality"!==c):void 0},k.save=function(a){var b;n.each(k.objects,function(c){if("asset"!==k.objectType)a===m.mostRecentLogDate;else if(k.assetType===k.objectType&&a===m.mostRecentLogDate){b=n.find(c.logs,function(a){return a.weekOf===m.mostRecentLogDate});for(var d in b.data)null!==b.data[d]&&"undefined"!=typeof b.data[d]&&(c.data[d].value=b.data[d])}m.update(c)})},k.getLog=function(a){return n.find(k.object.logs,function(b){return b.weekOf===a})},k.invalidEntries=[],k.validValue=!0,k.validate=function(a,b,c,d,e){var f="asset"!==k.objectType?k.objects:i.filterAssetsByType(k.objects,k.assetType),g=n.find(f,function(a){return a.id===e.id}),h=g.data[c],j=n.find(g.logs,function(a){return a.weekOf===d.weekOf}),l=j.data[c];"number"===h.type?(l=isNaN(a)?b:a,k.validValue=isNaN(a)):k.validValue=!0},m.createNewRow=function(a){n.contains(k.dates,a)||k.dates.push(a)},k.open=function(a,c){var d=b.open({animation:!0,templateUrl:"views/deletefieldmodal.html",controller:"DeleteFieldModalInstanceCtrl",size:a,resolve:{thing:function(){return c},getCars:function(){return"car"===k.objectType?k.objects:{}},getDrivers:function(){return"driver"===k.objectType?k.objects:{}},getProspects:function(){return"prospect"===k.objectType?k.objects:{}},getAssets:function(){return"asset"===k.objectType?i.filterAssetsByType(k.objects,k.assetType):{}},objectType:function(){return k.objectType}}});d.result.then(function(a){k.input=a,console.log("passed back from DeleteFieldModalInstanceCtrl:",a)},function(){console.log("Modal dismissed at: "+new Date)})}}]),angular.module("clientApp").factory("logHelpers",["$q","dataService","ENV","$window",function(a,b,c,d){function e(a){return null!==a&&"undefined"!=typeof a}function f(b){var c=a.defer(),d=[];return e(b)&&b.length>0?g.each(b,function(a){g.each(a.logs,function(a){d.push(a.weekOf),d=g.uniq(d.sort(),!0).reverse()})}):(c.resolve(d),c.reject(new Error("Error getting log dates"))),c.promise}var g=d._;return{getLogDates:f}}]),angular.module("clientApp").controller("RegistrationCtrl",["$user","$http","$scope",function(a,b,c){c.submit=function(b){a.create(b).then(function(a){"ENABLED"===a.status?console.log("account registered"):"UNVERIFIED"===a.status&&console.log("account unverified")})["catch"](function(a){c.error=a.message,c.error&&console.log(c.error)})}}]),angular.module("clientApp").run(["$templateCache",function(a){a.put("views/addfieldmodal.html",'<!-- <link rel="stylesheet" href=\'styles/forms.scss\'> --><!-- <link rel=\'stylesheet\' href=\'styles/addFieldModal.scss\'> --> <div if-user> <div class=modal-header> <h3 class=modal-title id=add-field-header>Add field</h3> <button type=button class=close ng-click=close() style=margin-top:-35px> &times; </button> </div> <!-- {{ assetType }} --> <!-- {{ field }} --> <!-- {{ objects }}? --> <!-- {{ field}} --> <!-- {{ expressionFieldSelect }} --> <div class=modal-body> <form novalidate role=form name=form ng-submit=submit()> <!-- Choose field type --> <div class=form-group> <div class="alert alert-info"> <h4 class=control-label>Type</h4> <div class=radio> <label> <input id=text ng-model=field.type value=text type=radio ng-change=setDataType(field.type)>Text <!-- <i class="fa fa-question-circle" tooltip=""></i> --> </label> </div> <div class=radio> <label> <input id=number ng-model=field.type value=number type=radio ng-change=setDataType(field.type)>Number <!-- <i class="fa fa-question-circle" tooltip=""></i> --> </label> </div> <div class=radio> <label> <input id=boolean ng-model=field.type value=boolean type=radio ng-change=setDataType(field.type)>Boolean <i class="fa fa-question-circle" tooltip="ex. yes/no, true/false"></i> </label> </div> <div class=radio> <label> <input id=function ng-model=field.type value=function type=radio ng-change=setDataType(field.type)> Function <i class="fa fa-question-circle" tooltip="Outputs a value in terms of other functions and numbers"></i> </label> </div> <div class=radio> <label> <input id=inequality ng-model=field.type value=inequality type=radio ng-change=setDataType(field.type)> Inequality <i class="fa fa-question-circle" tooltip="Compares two values and returns a true or false value"></i> </label> </div> </div> </div> <!-- Choose field data type --> <!-- SHOW ONLY WHEN FIELD TYPE IS CHOSEN -- >\n        <!-- Function implies Number --> <!-- Boolean implies Boolean --> <!-- Therefore, this radio list is obly shown for Variable/Constant field type --> <!-- TODO: SET correct dataType when field type is function or boolean --> <div class=form-group ng-show="field.type === &quot;variable&quot;"> <div class="alert alert-info"> <ul class=fieldTypes> <label class=control-label>Field data type</label> <li> <label class=radio> <input ng-model=field.dataType value=number type=radio>Number <i class="fa fa-question-circle" tooltip="ex. 1234567890"></i> </label> </li> <li> <label class=radio> <input ng-model=field.dataType value=text type=radio> Text <i class="fa fa-question-circle" tooltip="ex. The quick brown fox jumps over the lazy dog."></i> </label> </li> <li> <label class=radio> <input ng-model=field.dataType value=boolean type=radio> Boolean <i class="fa fa-question-circle" tooltip="ex. true/false, yes/no"></i> </label> </li> </ul> </div> </div> <div class=form-group> <label for=field>Name</label> <input name=field class=form-control ng-model=field.name ng-required=true ng-pattern="/^[a-zA-Z0-9_]*$/"> </div> <div class=form-group ng-show="field.type === &quot;variable&quot;"> <label for=value>Value</label> <input name=value class=form-control ng-model=formData.value> </div> <!-- Function input --> <!-- Validation: \n            1. Function cannot begin nor end with an operator \n            2. Corollary: It must begin and end with a function/variable/constant\n        --> <div class=form-group ng-show="field.type === &quot;function&quot; || field.type === &quot;inequality&quot;"> <div class=well> <h4 ng-if="field.type === &quot;function&quot;">Function</h4> <h4 ng-if="field.type === &quot;inequality&quot;">Inequality</h4><br> <h5 id=display-function-expr class=expression ng-if="field.type === &quot;function&quot;">{{ field.expression }}</h5> <h5 id=display-inequality-expr class=expression ng-if="field.type === &quot;inequality&quot;"> <span>{{ field.leftExpression }}<span> <span>{{ field.inequalitySign }}</span> <span>{{ field.rightExpression }}</span> </span></span></h5> <br> <div class=input-group ng-if="field.type === &quot;inequality&quot;"> <input bs-switch ng-model=rightSide.value type=checkbox switch-on-text=Right switch-off-text=Left switch-label=Side switch-inverse=true switch-off-color=primary switch-active="{{ validExpression.value }}" id=inequality-side-switch> </div><br> <div class=btn-toolbar role=toolbar> <button id=add-operator class="btn btn-warning operator" type=button ng-click="appendItemToFunction(&quot;+&quot;, &quot;operator&quot;)">+</button> <button id=sub-operator class="btn btn-warning operator" type=button ng-click="appendItemToFunction(&quot;-&quot;, &quot;operator&quot;)">-</button> <button id=mult-operator class="btn btn-warning operator" type=button ng-click="appendItemToFunction(&quot;*&quot;, &quot;operator&quot;)">*</button> <button id=div-operator class="btn btn-warning operator" type=button ng-click="appendItemToFunction(&quot;/&quot;, &quot;operator&quot;)">/</button> <button id=open-parens-operator class="btn btn-warning operator" type=button ng-click="appendItemToFunction(&quot;(&quot;, &quot;operator&quot;)">(</button> <button id=close-parens-operator class="btn btn-warning operator" type=button ng-click="appendItemToFunction(&quot;)&quot;, &quot;operator&quot;)">)</button> <div class=undoAndClear> <button class="btn btn-primary undo" type=button ng-click=undoExpression()>Undo</button> <button class="btn btn-danger clear" type=button ng-click=clearExpression()>Clear</button> </div> </div><br> <label ng-if="field.type === &quot;inequality&quot;"> Sign </label> <select ng-if="field.type === &quot;inequality&quot;" class=form-control ng-model=field.inequalitySignId ng-change=setInequalitySign(field.inequalitySignId)> <option class=inequality-sign-opt value=0>&gt; Greater Than</option> <option class=inequality-sign-opt value=1>&ge; Greater Than or Equal To</option> <option class=inequality-sign-opt value=2>&lt; Less Than</option> <option class=inequality-sign-opt value=3>&le; Less Than or Equal To</option> </select><br> <label> Constant <i class="fa fa-question-circle" tooltip="Add a constant number to the function"></i> </label> <div class=input-group> <span class=input-group-btn> <button id=add-const class=btn type=button ng-click="appendItemToFunction(expressionConstantInput.value, &quot;constant&quot;)" ng-disabled="form.functionConst.$dirty && form.functionConst.$invalid">+</button> </span> <input name=functionConst class=form-control ng-model=expressionConstantInput.value ng-pattern="/^[0-9]\\d*(\\.\\d+)?$/"> <!-- regex patterns for constant --> <!-- ^[1-9]\\d*(\\.\\d+)?$ --> <!-- /^[0-9]*$/ --> </div><br><!-- /input-group --> <label> Fields <i class="fa fa-question-circle" tooltip="Add an existing field to the function"></i> </label> <select class=form-control ng-model=expressionFieldSelect.value ng-change="appendItemToFunction(expressionFieldSelect.value, &quot;field&quot;)" ng-options="field for field in validFieldsForExpressions"> </select> <!-- {{ validFieldsForExpressions }} --> </div> </div> <div ng-messages=form.field.$error ng-show="form.field.$dirty && form.field.$invalid" class="alert alert-danger" role=alert> <div> Field must <ul> <li>be alphanumeric</li> <li>contain no special characters except _</li> <li>contain no spaces</li> <li>not be empty</li> </ul> </div> </div> <div ng-messages=form.functionConst.$error ng-show="form.functionConst.$dirty && form.functionConst.$invalid" class="alert alert-danger" role=alert> <div> Constant must <ul> <li>be a number</li> <li>include at least one digit following a decimal point</li> </ul> </div> </div> <div ng-if=!validExpression.value class="alert alert-danger" role=alert> <div id=expression-error-message ng-if=expressionErrorMessage> <h4>Function error(s):</h4> <ul> <li>{{ expressionErrorMessage }}</li> </ul> </div> <br> <div id=general-expression-rules> <h4>Function must</h4> <ul> <li>not end or begin with a mathematical operator</li> <li>contain a mathematical operator between any two values</li> <li>not contain unclosed parentheses</li> </ul> </div> </div> <div id=field-name-exists-msg ng-messages=form.field.$error ng-show="form.field.$dirty && fieldNameAlreadyExists()" class="alert alert-danger" role=alert> <p> Error: Field name already exists. </p> </div> </form> </div> <div class=modal-footer> <button id=submit-field class="btn btn-success" type=button ng-click=submit() ng-disabled="form.$invalid || invalidFieldType() || !validExpression.value || !inequalityIsComplete() || emptyExpression() || fieldNameAlreadyExists()">Submit</button> <button class="btn btn-danger" type=button ng-click=reset()>Reset</button> <button class="btn btn-default" type=button ng-click=close()>Close</button> </div> </div>'),a.put("views/addobjectmodal.html",'<!-- <link rel="stylesheet" href=\'styles/forms.scss\'> --> <div if-user> <div class=modal-header> <h3 class=modal-title>Add {{ objectType }}</h3> <button type=button class=close ng-click=close() style=margin-top:-35px> &times; </button> </div> <!-- {{ assetType }} --> <!-- {{ identifier }} --> <div class=modal-body> <div class=btn-toolbar role=toolbar> <div class=btn-group role=group> <!-- opens add field modal --> <button class="btn btn-info" type=button ng-click=addField(identifier.value) ng-disabled=disableAddField() name=addFieldBtn> + Field </button> </div> </div> <!-- add field disabled: {{ disableAddField() }} --> <br ng-show=disableAddField()> <div class="alert alert-danger" role=alert ng-show="objectType === &quot;asset&quot; && disableAddField()"> Please add an asset type before adding fields. </div> <br ng-show=!disableAddField()> <form novalidate role=form id=newObjectForm name=form ng-submit=submit($data)> <div class=form-group ng-if="objectType === &quot;asset&quot;"> <label>Type</label> <select ng-model=formData.assetType.value class=form-control ng-change=renderForm(formData.assetType.value)> <option ng-repeat="type in assetTypes" value="{{ ::type.value }}">{{ ::type.value }}</option> </select> </div> <h4 id=fields-header ng-show=expressions.length>Fields</h4> <div class=form-group ng-if="(objectType === &quot;car&quot;) || (objectType === &quot;asset&quot;)"> <label>Organize {{ assetType.value || objectType }}<span ng-if=!formData.assetType></span> with this identifier</label> <select ng-model=identifier.value class=form-control ng-options="field for field in fields" ng-if="field !== &quot;assetType&quot;"> </select> </div> <div class=form-group ng-if="objectType === &quot;prospect&quot;"> <label>Status</label> <select ng-model=status.value class=form-control> <option ng-repeat="status in statuses" value="{{ ::status.value }}" ng-if=!status.special>{{ ::status.value }}</option> </select> </div> <div class=form-group ng-repeat="(field, data) in formData" ng-if=!hide(field)> <label for="{{ ::field }}" class=field-name-label>{{ ::field }}</label> <input id="{{ ::field }}" name="{{ ::field }}" class="form-control field-value-input" ng-model=formData[field].value data-datatype="{{ ::data.dataType }}" data-fieldtype="{{ ::data.type }}" ng-if="data.type === &quot;text&quot;"> <input id="{{ ::field }}" name=numberField class=form-control ng-model=formData[field].value data-datatype="{{ ::data.dataType }}" data-fieldtype="{{ ::data.type }}" ng-if="data.type === &quot;number&quot;" ng-pattern="/^[-+]?([0-9]*\\.[0-9]+|[0-9]+)$/"> <br ng-if="data.type === &quot;boolean&quot;"> <input bs-switch ng-model=formData[field].value type=checkbox switch-on-text=Yes switch-off-text=No switch-label="" switch-inverse=true switch-off-color=primary ng-if="data.type === &quot;boolean&quot;" class=boolean-field-switch id="{{ ::field }}" name="{{ ::field }}" data-datatype="{{ ::data.dataType }}" data-fieldtype="{{ ::data.type }}"> <!-- {{ formData[field].value }} --> </div> <!-- Error messages --> <div id=add-object-error-msg ng-messages=form.numberField.$error ng-show="form.numberField.$dirty && form.numberField.$invalid" class="alert alert-danger" role=alert> <p> Error: Non-number entered into number field. </p> </div> </form> <!-- {{ formData }} --> <!-- Show expressions --> <div ng-show="expressions.length > 0"> <h4 id=expression-header>Expressions</h4> <div ng-repeat="expression in expressions"> <h5> <span><strong>{{ ::expression.field }}:</strong></span> <span>{{ ::expression.expression }}</span> </h5> </div> </div> <!-- <div>\n        {{ formData }}\n    </div>  --> </div> <div class=modal-footer> <button id=submit-object class="btn btn-success" type=button ng-click=submit() ng-disabled="!disableConditions(formData) || invalidIdentifier(identifier) || form.numberField.$invalid">Submit</button> <!-- {{ !disableConditions(formData) }\n  {{ invalidIdentifier(identifier) }}\n  {{ form.$invalid }} --> <button class="btn btn-danger" type=button ng-click=reset()>Reset</button> <button class="btn btn-default" type=button ng-click=close()>Close</button> </div> </div>'),a.put("views/assetTypeModal.html",'<div if-user> <div class=modal-header> <h3 class=modal-title>Add asset type</h3> <button type=button class=close ng-click=close() style=margin-top:-35px> &times; </button> </div> <div class=modal-body> <form novalidate role=form name=form ng-submit=submit()> <div class=form-group> <label for=type>Type</label> <input name=type class=form-control ng-model=newType.value ng-required=true placeholder="e.g. Gas Cards"> </div> </form> <!-- <div>\n        {{ newStatus.value }}\n    </div> --> </div> <div class=modal-footer> <button class="btn btn-success" type=button ng-click=submit() ng-disabled=!validForm()>Submit</button> <button class="btn btn-danger" type=button ng-click=reset()>Reset</button> <button class="btn btn-default" type=button ng-click=close()>Close</button> </div> </div>'),a.put("views/assignmentmodal.html",'<div if-user> <div class=modal-header> <h3 class=modal-title>Assign {{ ::objectType }}</h3> <button type=button class=close ng-click=close() style=margin-top:-35px> &times; </button> </div> <div class=modal-body> <form novalidate role=form name=form ng-submit=submit()> <div class=form-group ng-if="objectType === &quot;asset&quot;"> Select asset type <select class=form-control ng-model=formData.assetType> <option ng-repeat="assetType in assetTypes.types" value="{{ assetType.value }}"> {{ assetType.value }} </option> </select> </div> <div class=form-group ng-if="objectType !== &quot;asset&quot;"> Select <span ng-if="objIdentifier !== &quot;Name&quot;">{{ ::objIdentifier }}</span><span ng-if="objIdentifier === &quot;Name&quot;">Driver</span> <select class=form-control ng-model=formData.objId> <option ng-repeat="object in simpleObjects | orderBy:&quot;id&quot;" value="{{ object.id }}"> <!-- Do not show inactive cars --> {{ ::object.identifierValue }} </option> </select> </div> <div class=form-group ng-if="objectType === &quot;asset&quot;"> Select <select class=form-control ng-model=formData.objId> <option ng-repeat="object in simpleObjects | orderBy:&quot;id&quot;" value="{{ object.id }}" ng-if="object.assetType === formData.assetType"> <!-- Do not show inactive cars --> {{ ::object.identifierValue }} </option> </select> </div> <div class=form-group> Date Assigned/Started <div class=btn-group role=group> <div class="input-group date-picker"> <input class=form-control datepicker-popup={{format}} ng-model=dt is-open=status.opened max-date=maxDate datepicker-options=dateOptions ng-required=true close-text="Close"> <div class=input-group-btn> <button type=button class="btn btn-primary" ng-click=open($event)> <i class="fa fa-calendar"></i> </button> </div> </div> </div> </div> </form> <!-- <div>\n        {{ formData.carId }}\n        {{ dt }}\n    </div> --> </div> <div class=modal-footer> <button class="btn btn-success" type=button ng-click=submit() ng-disabled=validForm()>Submit</button> <button class="btn btn-default" type=button ng-click=close()>Close</button> </div> </div>'),a.put("views/deletefieldmodal.html",'<!-- <link rel=\'stylesheet\' href=\'styles/deletemodal.scss\' /> --> <div if-user> <div class=modal-header> <h3 class=modal-title> Delete </h3> <button type=button class=close ng-click=close() style=margin-top:-35px> &times; </button> </div> <div class=modal-body> <form novalidate role=form> <div class=form-group> <label for=input> Deleting this will apply to ALL {{ ::objectType }}s and is irreversible.<span ng-if="thing.type === &quot;field&quot;"> Please note that functions and inequalities using this field will not be deleted. </span> Enter "DELETE" below to confirm you want to permanently delete it: </label> <input class=form-control id=delete-confirmation ng-model=confirmation.value> </div> </form> </div> <div class=modal-footer> <button class="btn btn-default" type=button ng-click=close()> Cancel </button> <button class="btn btn-danger" id=delete-btn-final type=button ng-click=submit() ng-disabled="confirmation.value !== \'DELETE\'"> DELETE </button> </div> </div>'),
a.put("views/deleteobjmodal.html",'<!-- <link rel=\'stylesheet\' href=\'styles/deletemodal.scss\' /> --> <div if-user> <div class=modal-header> <h3 class=modal-title> Delete {{ objectType }} </h3> <button type=button class=close ng-click=close() style=margin-top:-35px> &times; </button> </div> <div class=modal-body> <form novalidate role=form> <div class=form-group> <label for=input> Deleting this {{ ::objectType }} and is irreversible. <span ng-if="objectType !== &quot;prospect&quot;">Its logs will not be deleted.</span> Enter "DELETE" below to confirm you want to permanently delete: </label> <input class=form-control id=delete-confirmation ng-model=input> </div> </form> </div> <div class=modal-footer> <button class="btn btn-default" type=button ng-click=close()> Cancel </button> <button id=delete-btn-final class="btn btn-danger" type=button ng-click=submit() ng-disabled="input !== \'DELETE\'"> DELETE </button> </div> </div>'),a.put("views/editFieldModal.html","<!-- <link rel=\"stylesheet\" href='styles/forms.scss'> --><!-- <link rel='stylesheet' href='styles/addFieldModal.scss'> --> <div if-user> <div class=modal-header> <h3 class=modal-title>Edit field</h3> <button type=button class=close ng-click=close() style=margin-top:-35px> &times; </button> </div> <!-- {{ formData }} --> <div class=modal-body> <form novalidate role=form name=form ng-submit=submit()> <!-- <div class='form-group' ng-if='objectType === \"prospect\" && field.name === \"status\"'>\n            <label for='status'>Status</label>\n\n            <input id='{{ ::field.name }}' data-dataType='{{ ::field.dataType }}' data-fieldType='{{ ::field.type }}' name='fieldName' type='text' class='form-control' ng-model='field.value' ng-required='true'>\n"+'        </div> --> <div class=form-group> <label for=fieldName>Name</label> <input id="{{ ::field.name }}" data-datatype="{{ ::field.dataType }}" data-fieldtype="{{ ::field.type }}" name=fieldName class=form-control ng-model=field.name ng-required=true ng-pattern="/^[a-zA-Z0-9_]*$/" ng-if=!dontEditFieldName(field.name)> <p ng-if=dontEditFieldName(field.name)>{{ ::field.name.capitalizeIfStatus() }}</p> </div> <div class=form-group ng-if=isProspectStatus(field.name)> <label for=fieldValue>Value</label> {{ field.value }} <select id="{{ ::field.name }}" data-datatype="{{ ::field.dataType }}" data-fieldtype="{{ ::field.type }}" type=text class=form-control ng-model=field.value ng-required=true ng-options="status.value for status in statuses" name=textField></select> </div> <div class=form-group ng-if="field.type === &quot;text&quot;" ng-hide=isProspectStatus(field.name)> <label for=fieldValue>Value</label> <input id="{{ ::field.name }}" data-datatype="{{ ::field.dataType }}" data-fieldtype="{{ ::field.type }}" name=textField class=form-control ng-model=field.value ng-required=true> </div> <div class=form-group ng-if="field.type === &quot;number&quot;"> <label for=fieldValue>Value</label> <input id="{{ ::field.name }}" data-datatype="{{ ::field.dataType }}" data-fieldtype="{{ ::field.type }}" name=numberField class=form-control ng-model=field.value ng-required=true ng-pattern="/^[-+]?([0-9]*\\.[0-9]+|[0-9]+)$/"> </div> <div class=form-group ng-if="field.type === &quot;boolean&quot;"> <label for=fieldValue>Value</label> <br> <input bs-switch ng-model=field.value type=checkbox switch-on-text=Yes switch-off-text=No switch-label="" switch-inverse=true switch-off-color=primary class=boolean-field-switch id="{{ ::field.name }}" name=booleanField data-datatype="{{ ::field.dataType }}" data-fieldtype="{{ ::field.type }}"> <!-- {{ formData[field].value }} --> </div> <div class=form-group ng-if=loggable(field.name)> <label for=logValue>Log?</label> <br> <input bs-switch ng-model=field.log type=checkbox switch-on-text=Yes switch-off-text=No switch-label="" switch-inverse=true switch-off-color=primary class=boolean-field-switch id="{{ ::field.name }}" name=logValue data-datatype="{{ ::field.dataType }}" data-fieldtype="{{ ::field.type }}" switch-active="{{ validExpression.value }}" ng-change="logValueChanged.value = !logValueChanged.value"> </div> <div class=form-group ng-if="(objectType === &quot;car&quot;) || (objectType === &quot;asset&quot;)"> <label>Identify {{ object.assetType.value || objectType }}<span ng-if=!object.assetType.value>s</span> with this field</label> <br> <input bs-switch ng-model=field.identifier type=checkbox switch-on-text=Yes switch-off-text=No switch-label="" switch-inverse=true switch-off-color=primary class=boolean-field-switch id="{{ ::field.name }}" name=identifierValue data-datatype="{{ ::field.dataType }}" data-fieldtype="{{ ::field.type }}" switch-active="{{ !field.identifier }}"> </div> <div class=form-group ng-if="field.type === &quot;function&quot; || field.type === &quot;inequality&quot;"> <div class=well> <h4 ng-if="field.type === &quot;function&quot;">Function</h4> <h4 ng-if="field.type === &quot;inequality&quot;">Inequality</h4><br> <h5 class=expression ng-if="field.type === &quot;function&quot;">{{ field.expression }}</h5> <h5 class=expression ng-if="field.type === &quot;inequality&quot;">{{ field.leftExpression }} {{ displayInequalitySign(field.inequalitySignId) }} {{ field.rightExpression }}</h5> <br> <div class=input-group ng-if="field.type === &quot;inequality&quot;"> <input bs-switch ng-model=rightSide.value type=checkbox switch-on-text=Right switch-off-text=Left switch-label=Side switch-inverse=true switch-off-color=primary switch-active="{{ validExpression.value }}" id=inequality-side-switch ng-change=buildAndValidateExpression()> </div><br> <div class=btn-toolbar role=toolbar> <button id=add-operator class="btn btn-warning operator" type=button ng-click="appendItemToFunction(&quot;+&quot;, &quot;operator&quot;)">+</button> <button id=sub-operator class="btn btn-warning operator" type=button ng-click="appendItemToFunction(&quot;-&quot;, &quot;operator&quot;)">-</button> <button id=mult-operator class="btn btn-warning operator" type=button ng-click="appendItemToFunction(&quot;*&quot;, &quot;operator&quot;)">*</button> <button id=div-operator class="btn btn-warning operator" type=button ng-click="appendItemToFunction(&quot;/&quot;, &quot;operator&quot;)">/</button> <button id=open-parens-operator class="btn btn-warning operator" type=button ng-click="appendItemToFunction(&quot;(&quot;, &quot;operator&quot;)">(</button> <button id=close-parens-operator class="btn btn-warning operator" type=button ng-click="appendItemToFunction(&quot;)&quot;, &quot;operator&quot;)">)</button> <div class=undoAndClear> <button class="btn btn-primary undo" type=button ng-click=undoExpression()>Undo</button> <button class="btn btn-danger clear" type=button ng-click=clearExpression()>Clear</button> </div> </div><br> <div ng-if="field.type === &quot;inequality&quot;"> <label> Sign </label> <select class=form-control ng-model=field.inequalitySignId ng-change=setInequalitySign()> <option class=inequality-sign-opt value=0>&gt; Greater Than</option> <option class=inequality-sign-opt value=1>&ge; Greater Than or Equal To</option> <option class=inequality-sign-opt value=2>&lt; Less Than</option> <option class=inequality-sign-opt value=3>&le; Less Than or Equal To</option> </select><br> </div> <label> Constant <i class="fa fa-question-circle" tooltip="Add a constant number to the function"></i> </label> <div class=input-group> <span class=input-group-btn> <button id=add-const class=btn type=button ng-click="appendItemToFunction(expressionConstantInput.value, &quot;constant&quot;)" ng-disabled="form.functionConst.$dirty && form.functionConst.$invalid">+</button> </span> <input name=functionConst class=form-control ng-model=expressionConstantInput.value ng-pattern="/^[0-9]\\d*(\\.\\d+)?$/"> <!-- regex patterns for constant --> <!-- ^[1-9]\\d*(\\.\\d+)?$ --> <!-- /^[0-9]*$/ --> </div><br><!-- /input-group --> <label> Fields <i class="fa fa-question-circle" tooltip="Add an existing field to the function"></i> </label> <select class=form-control ng-model=expressionFieldSelect.value ng-change="appendItemToFunction(expressionFieldSelect.value, &quot;field&quot;)"> <option ng-repeat="field in validFieldsForExpressions" value="{{ ::field }}">{{ ::field }}</option> </select> </div> </div> <div ng-messages=form.fieldName.$error ng-show=form.fieldName.$invalid class="alert alert-danger" role=alert> <div> Field must <ul> <li>be alphanumeric</li> <li>contain no special characters except _</li> <li>contain no spaces</li> </ul> </div> </div> <div ng-messages=form.functionConst.$error ng-show="form.functionConst.$dirty && form.functionConst.$invalid" class="alert alert-danger" role=alert> <div> Constant must <ul> <li>be a number</li> <li>include at least one digit following a decimal point</li> </ul> </div> </div> <!-- {{ validExpression }} --> <div ng-if=!validExpression.value class="alert alert-danger" role=alert> <div id=expression-error-message ng-if=expressionErrorMessage> <h4>Function error(s):</h4> <ul> <li>{{ expressionErrorMessage }}</li> </ul> </div> <br> <div id=general-expression-rules> <h4>Function must</h4> <ul> <li>not end or begin with a mathematical operator</li> <li>contain a mathematical operator between any two values</li> <li>not contain unclosed parentheses</li> </ul> </div> </div> <div id=number-field-error-msg ng-messages=form.numberField.$error ng-show="form.numberField.$dirty && form.numberField.$invalid" class="alert alert-danger" role=alert> <p> Error: Non-number entered into number field. </p> </div> <div id=field-name-exists-msg ng-messages=form.fieldName.$error ng-show="form.fieldName.$dirty && fieldNameAlreadyExists()" class="alert alert-danger" role=alert> <p> Error: Field name already exists. </p> </div> </form> </div> <div class=modal-footer popover="Please change the identifier if you want to delete this field." popover-enable=field.identifier popover-trigger=mouseenter popover-placement=bottom-left> <button class="btn btn-danger" type=button ng-click=delete() style="float: left" ng-disabled=field.identifier>DELETE</button> <button class="btn btn-success" type=button ng-click=submit() ng-disabled="form.fieldName.$invalid || form.numberField.$invalid || form.functionConst.$invalid || !validExpression.value || invalidFieldType() || !inequalityIsComplete() || emptyExpression() || fieldNameAlreadyExists()">Submit</button> <!-- {{ form.fieldName.$invalid }}\n    {{ form.numberField.$invalid }}\n    {{ form.functionConst.$invalid }}\n    {{ !validExpression.value }}\n    {{ invalidFieldType() }}\n    {{ !inequalityIsComplete() }}\n    {{ emptyExpression() }}\n    {{ fieldNameAlreadyExists() }} --> <button class="btn btn-danger" type=button ng-click=reset()>Reset</button> <button class="btn btn-default" type=button ng-click=close()>Close</button> </div> </div>'),a.put("views/objectData.html",'<!-- <link rel="stylesheet" type="text/css" href="styles/tables.scss"> --><!-- <div if-user> --> <div class="col-md-10 col-md-offset-2 col-sm-offset-3"> <div class=sub-header> <h3 id=identifier>{{ ::identifierValue }}</h3> <!-- <button class=\'btn btn-danger btn-xs delete-obj\' ng-controller=\'DeleteObjModalCtrl\' ng-click=\'open(lg, car.id)\'>Delete</button> --> </div> <!-- {{ state }}  --> <tabset ng-if="objectType !== \'prospect\'"> <tab ng-repeat="tab in tabs" data-tabname="{{ ::tab.title }}" heading="{{ ::tab.title }}" active=tab.active ui-sref="{{ ::tab.state }}"> </tab> </tabset> <br> <div class=btn-toolbar role=toolbar> <div class=btn-group role=group> <button class="btn btn-success" ng-click=addField()> + Field </button> </div> <div class=btn-group role=group style=float:right ng-if="objectType === &quot;prospect&quot;"> <button class="btn btn-danger" role=group ng-click=open(prospect.id) ng-controller=DeleteObjModalCtrl> Delete </button> </div> <div class=btn-group role=group style=float:right ng-if="objectType === &quot;prospect&quot;"> <button class="btn btn-warning" ng-click=convert()> Convert to driver </button> </div> <!-- <div class=\'btn-group\' role=\'group\' style=\'float:right;\'>\n            <button class=\'btn btn-danger\' role=\'group\' ng-click=\'open(prospect.id)\' ng-controller=\'DeleteObjModalCtrl\'>\n                Delete\n            </button>\n        </div> --> </div> <br> <div class="table-responsive table-bordered"> <table class=table> <thead> <tr> <th>Field</th> <th>Value</th> <th>Logged</th> <th>Id.</th> <th>Edit</th> </tr> </thead> <tbody> <!-- non expressions --> <!-- TODO: only allow these to be identifiers? --> <tr ng-repeat="(field, data) in object.data" ng-if="data.type !== &quot;function&quot; && data.type !== &quot;inequality&quot;" ng-hide=notName(field)> <td data-field="{{ ::field }}" class=field-name> {{ ::field.capitalizeIfStatus() }} </td> <td class=field-value data-field="{{ ::field }}"> {{ ::data.value }} </td> <td> <i class="fa fa-check log-check" data-field="{{ ::field }}" ng-if=data.log></i> </td> <td> <i class="fa fa-check identifier-check" data-field="{{ ::field }}" ng-if="field === object.identifier"></i> </td> <td> <button class="btn btn-warning btn-xs" ng-click="editField(object, field)" data-field="{{ ::field }}">Edit</button> </td> </tr> <!-- functions --> <tr ng-repeat="(field, data) in object.data" ng-if="data.type === &quot;function&quot;"> <td class=field-name data-field="{{ ::field }}"> {{ ::field }} </td> <td class=field-value data-field="{{ ::field }}"> {{ ::data.value | number : 2 }} </td> <td> <!-- TODO: logging of functions disallowed until thinking about how to impelment --> <i class="fa fa-check log-check" ng-if=data.log data-field="{{ ::field }}"></i> </td> <td> <!-- disallow functions from being identifiers --> <!-- <i class=\'fa fa-check\' ng-if=\'field === currentIdentifier.name && !expressionForm.$visible\'></i>\n                        <input type=\'radio\' e-name=\'identifier\' value=\'{{ field }}\' e-form=\'expressionForm\' ng-model=\'identifier.name\' ng-show=\'expressionForm.$visible\' onbeforesave=\'checkIdentifierValue($data, currentIdentifier.name)\'></input> --> <i class="fa fa-check identifier-check" ng-if="field === object.identifier" data-field="{{ ::field }}"></i> </td> <td> <button class="btn btn-warning btn-xs" ng-click="editField(object, field)" data-field="{{ ::field }}">Edit</button> </td> </tr> <!-- inequality --> <tr ng-repeat="(field, data) in object.data" ng-if="data.type === &quot;inequality&quot;"> <td data-field="{{ ::field }}" class=field-name> {{ ::field }} </td> <td data-field="{{ ::field }}" class=field-value> {{ ::data.value }} </td> <td> <!-- TODO: logging of functions disallowed until thinking about how to impelment --> <!-- <i class=\'fa fa-check\' ng-if=\'data.log && !expressionForm.$visible\'></i>\n                        <input type=\'checkbox\' editable-checkbox=\'data.log\' e-name=\'log\' e-form=\'expressionForm\' ng-show=\'expressionForm.$visible\' onbeforesave=\'checkLogValue($data, data.log)\'></input>        --> <i class="fa fa-check log-check" ng-if=data.log data-field="{{ ::field }}"></i> </td> <td> <!-- disallow functions from being identifiers --> <!-- <i class=\'fa fa-check\' ng-if=\'field === currentIdentifier.name && !expressionForm.$visible\'></i>\n                        <input type=\'radio\' e-name=\'identifier\' value=\'{{ field }}\' e-form=\'expressionForm\' ng-model=\'identifier.name\' ng-show=\'expressionForm.$visible\' onbeforesave=\'checkIdentifierValue($data, currentIdentifier.name)\'></input> --> <i class="fa fa-check identifier-check" ng-if="field === object.identifier" data-field="{{ ::field }}"></i> </td> <td> <button class="btn btn-warning btn-xs" ng-click="editField(object, field)" data-field="{{ ::field }}">Edit</button> </td> </tr> </tbody> </table> <!-- {{ object.data }} --> </div> <br> <!-- Driver Assignment --> <div ng-if="objectType === &quot;car&quot;"> <h3>Driver<span ng-if="(object.driversAssigned > 1) || (object.driversAssigned === 0)">s</span> Assigned</h3> <div class=btn-toolbar role=toolbar> <div class=btn-group role=group> <button class="btn btn-success" ng-click=assign(&quot;driver&quot;)>+ Driver</button> </div> </div> <br> <div class="table-responsive table-bordered"> <table class=table> <thead> <tr> <th>Name</th> <th>Date Assigned</th> </tr> </thead> <tbody> <tr ng-repeat="driver in object.driversAssigned | orderBy:&quot;dateAssigned&quot;" ui-sref="driverData({ id: driver.id })" class=table-row-link> <td>{{ ::driver.identifier.value }}</td> <td>{{ ::driver.dateAssigned | date: \'fullDate\' }}<span ng-if="driver.dateUnassigned !== null"> - {{ ::driver.dateEnded | date: \'fullDate\' }}</span></td> </tr> </tbody> </table> </div> </div> <!-- Car Assignment --> <div ng-if="objectType === &quot;driver&quot;"> <h3>Car<span ng-if="(object.carsAssigned > 1) || (object.carsAssigned === 0)">s</span> Assigned</h3> <div class=btn-toolbar role=toolbar> <div class=btn-group role=group> <button class="btn btn-success" ng-click=assign(&quot;car&quot;)>+ Car</button> </div> </div> <br> <div class="table-responsive table-bordered"> <table class=table> <thead> <tr> <th ng-if=valid(carIdentifier)>{{ ::carIdentifier }}</th> <th ng-if=!valid(carIdentifier)>Identifier</th> <th>Date Assigned</th> </tr> </thead> <tbody> <tr ng-repeat="car in object.carsAssigned | orderBy:&quot;dateAssigned&quot;" ui-sref="carData({ id: car.id })" class=table-row-link> <td>{{ ::car.identifier.value }}</td> <td>{{ ::car.dateAssigned | date: \'fullDate\' }}<span ng-if="car.dateUnassigned !== null"> - {{ ::car.dateEnded | date: \'fullDate\' }}</span></td> </tr> </tbody> </table> </div> </div> <!-- Asset Assignment --> <div ng-if="objectType === &quot;driver&quot;"> <h3>Asset<span ng-if="(object.assetsAssigned > 1) || (object.assetsAssigned === 0)">s</span> Assigned</h3> <div class=btn-toolbar role=toolbar> <div class=btn-group role=group> <button class="btn btn-success" ng-click=assign(&quot;asset&quot;)>+ Asset</button> </div> </div> <br> <div class="table-responsive table-bordered"> <table class=table> <thead> <tr> <th>Type</th> <th>Identifier</th> <th>Date Assigned</th> </tr> </thead> <tbody> <tr ng-repeat="asset in driver.assetsAssigned | orderBy:&quot;dateAssigned&quot;" ui-sref="assetData({ type: asset.assetType, id: asset.id })" class=table-row-link> <td>{{ ::asset.assetType }}</td> <td>{{ ::asset.identifier.value }}</td> <td>{{ ::asset.dateAssigned | date: \'fullDate\' }}<span ng-if="asset.dateUnassigned !== null"> - {{ ::asset.dateEnded | date: \'fullDate\' }}</span></td> </tr> </tbody> </table> </div> </div> </div> <!-- </div> -->'),a.put("views/objectLogs.html",'<!-- <link rel="stylesheet" href="styles/partials/logs.scss"> --> <div if-user> <div class="col-md-10 col-md-offset-2 col-sm-offset-3"> <!-- {{ state }}  --> <div class=sub-header> <h3 id=identifier>{{ ::identifierValue }}</h3> <!-- <button class=\'btn btn-danger btn-xs delete-obj\' ng-controller=\'DeleteObjModalCtrl\' ng-click=\'open(lg, car.id)\'>Delete</button> --> </div> <tabset> <tab ng-repeat="tab in tabs" heading="{{ ::tab.title }}" active=tab.active ui-sref="{{ ::tab.state }}"> </tab> </tabset> <br> <!-- {{ logDataArray }}\n    {{ dates }} --> <div class=table-responsive ng-model=object ng-init="tabs[0].active = true"> <table class="table table-bordered table-striped table-hover"> <thead> <tr> <td><strong>Week \\ Fields</strong></td> <td ng-repeat="field in fields | orderBy:\'$index\'"> {{ ::field }} </td> </tr> </thead> <tbody> <tr ng-repeat="log in object.logs | orderBy:&quot;-weekOf&quot;"> <td> <span class=log-date> {{ ::log.weekOf | date:\'longDate\' }} </span> <button class="btn btn-warning btn-xs btn-edit" ng-click=logform.$show() ng-show=!logform.$visible> Edit </button> <div class=btn-toolbar role=toolbar> <form editable-form name=logform ng-show=logform.$visible class="form-buttons form-inline" onaftersave=save(date)> <button type=submit ng-disabled=logform.$waiting class="btn btn-success btn-xs btn-group" role=group> Save </button> <button type=button ng-disabled=logform.$waiting ng-click=logform.$cancel() class="btn btn-default btn-xs btn-group" role=group> Cancel </button> </form> </div> </td> <!-- logDataArray(log) --> <!-- <td>{{ getLogDataByDate(log.weekOf)[0].value }}</td> --> <td ng-repeat="logData in getLogDataByDate(log.weekOf)"> <!-- <p ng-show=\'logform.$visible\'></p> --> <span editable-text="log.data.{{ ::logData.field }}" e-name="{{ ::logData.field }}" data-fieldentry="{{ ::logData.field }}" e-form=logform e-required ng-if=notExpressionField(logData.type)> {{ ::logData.value }} </span> <span ng-if=!notExpressionField(logData.type) data-fieldentry="{{ ::logData.field }}"> {{ ::logData.value }} </span> </td> </tr> </tbody> </table> </div> </div> </div>'),a.put("views/objectProfile.html",'<!-- <link rel="stylesheet" type="text/css" href="styles/profile.scss"> --> <div if-user> <div class="col-md-10 col-md-offset-2 col-sm-offset-3"> <div class=sub-header> <h3 id=identifier>{{ ::simpleObject.identifierValue }}</h3> <!-- <button class=\'btn btn-danger btn-xs delete-obj\' ng-controller=\'DeleteObjModalCtrl\' ng-click=\'open(lg, car.id)\'>Delete</button> --> </div> <div ui-view></div> </div> </div>'),a.put("views/objectsList.html",'<!-- <link rel="stylesheet" href="styles/assetList.scss"> --> <div if-user> <div class="col-md-10 col-md-offset-2 col-sm-offset-3" id=object-list> <h2 class=page-header ng-if="objectType === &quot;car&quot;">{{ title.value }}s</h2> <h2 class=page-header ng-if="objectType === &quot;driver&quot;">{{ title.value }}s</h2> <h2 class=page-header ng-if="objectType === &quot;prospect&quot;">{{ title.value }}s</h2> <h2 class=page-header ng-if="objectType === &quot;asset&quot;">{{ title.value }}s</h2> <br> <div ng-if="objectType === &quot;car&quot; || objectType === &quot;driver&quot;"> <table class="table table-striped"> <thead> <td> <button type=button class="btn btn-success" data-toggle=modal ng-click=addObject()> + {{ title.value }} </button> </td> <td> <h4 ng-if=thereAreObjects()>{{ ::objects[0].identifier }}</h4> </td> </thead> <tbody> <tr ng-repeat="object in simpleObjects | orderBy:&quot;id&quot;"> <td> <h4>{{ ::$index+1 }}</h4> </td> <td> <h4> <a ui-sref="{{ profile.state }}"> {{ ::object.identifierValue }} </a> </h4> </td> </tr> </tbody> </table> </div> <!-- Prospect List --> <div ng-if="objectType === &quot;prospect&quot;"> <div> <button class="btn btn-success" data-toggle=modal ng-click=addObject()> + Prospect </button> <button class="btn btn-success" ng-click=addStatus()> + Status </button> </div> <!-- Order by user provided order --> <!-- {{ statuses }}\n    {{ order }}\n    {{ newIndex }} --> <div ng-repeat="status in statuses"> <h3> <span ng-show=!rowform.$visible> {{ ::status.value }} </span> <span ng-show=rowform.$visible>Name: </span> <span editable-text=status.value e-name=name e-form=rowform onbeforesave=saveStatusName() ng-show=rowform.$visible> {{ status.value }} </span> <span ng-show=rowform.$visible>Order: </span> <span ng-show=rowform.$visible e-form=rowform> <select ng-model=newIndex.val> <option ng-repeat="index in order" value="{{ index }}"> {{ ::index }} </option> </select> </span> <button ng-click=rowform.$show() ng-show=!rowform.$visible class="btn btn-xs btn-warning" style=float:right> Edit </button> <form editable-form name=rowform onbeforesave="saveStatus($data, $index, status.value)" ng-show=rowform.$visible class="form-buttons form-inline" style=float:right> <button type=submit ng-disabled=rowform.$waiting class="btn btn-primary btn-xs"> Save </button> <button class="btn btn-xs btn-danger" ng-click="deleteStatus($index, status.value)" type=button ng-if=!status.special> Delete </button> <button class="btn btn-xs btn-default" ng-click=rowform.$cancel() type=button ng-disabled=rowform.$waiting> Cancel </button> </form> </h3> <table class="table table-striped"> <tbody> <!-- filter prospects with status --> <tr ng-repeat="object in objects" ng-if="belongsToStatus(object, status)"> <td> <h4> <a ui-sref="prospectData({ id: object.id })"> <!-- {{ ::prospect.identifierValue }} --> {{ ::object.data.Name.value }} </a> </h4> </td> </tr> </tbody> </table> <br> </div> </div> <!-- Assets List --> <div ng-if="objectType === &quot;asset&quot;"> <div> <button class="btn btn-success" data-toggle=modal ng-click=addObject()> + Asset </button> <button class="btn btn-success" ng-click=addType()> + Type </button> </div><br> <accordion> <accordion-group ng-repeat="type in types"> <accordion-heading> {{ type.value }} <i class="pull-right fa fa-chevron-down"></i> </accordion-heading> <ul class=assetsOfType> <li ng-repeat="asset in simpleObjects" ng-if="belongsToType(asset, type.value)"> <h4> <a ui-sref="assetData({ id: asset.id })"> {{ ::asset.identifierValue }} </a> </h4> </li> </ul> </accordion-group> </accordion> </div> </div> </div>'),a.put("views/objectsLogs.html",'<!-- <link rel="stylesheet" href="styles/partials/logs.scss"> --> <div if-user> <div class="col-md-10 col-md-offset-2 col-sm-offset-3"> <div class=sub-header> <!-- class=\'page-header\' --> <h2>{{ ::title }} Logs</h2> </div> <tabset ng-if="objectType === \'asset\'"> <tab ng-repeat="tab in tabs" data-tabname="{{ ::tab.title }}" heading="{{ ::tab.title }}" active=tab.active select=renderLogs(tab.title)> </tab> </tabset><br> <div class=btn-toolbar role=toolbar> <div class=btn-group role=group> <button class="btn btn-success" ng-click=newLog() ng-disabled="datepicker.dt.getDay() !== datepicker.getStartingDayNum()"> + Log </button> </div> <div class=btn-group role=group> <div class="input-group date-picker"> <input class=form-control datepicker-popup="{{ datepicker.format }}" ng-model=datepicker.dt is-open=datepicker.status.opened max-date=datepicker.maxDate datepicker-options=datepicker.dateOptions ng-required=true close-text="Close"> <div class=input-group-btn> <button type=button class="btn btn-primary" ng-click=datepicker.open($event)> <i class="fa fa-calendar"></i> </button> </div> </div> </div> <div class=btn-group role=group> <p id=datepicker-instructions> * Choose the {{ ::datepicker.getStartingDayWord() }} of the week to be logged. </p> </div> </div> <!-- <div>most recent log: {{ mostRecentLogDate | date:\'longDate\' }}</div> --> <br> <div ng-messages=logForm.$error ng-show="invalidEntries.length > 0" class="alert alert-danger" role=alert> <!-- field is object with name, identifierVal, logDate properties --> <p ng-repeat="entry in invalidEntries"> Invalid entry for number field <span class=underline>{{ ::entry.fieldName }}</span> of <span class=underline>{{ ::entry.identifierValue }}</span>, date <span class=underline>{{ ::entry.logDate | date:\'longDate\'}}</span>. </p> </div> <div class=table-responsive> <table class="table table-bordered table-striped table-hover"> <thead> <tr> <td><strong>Week \\ {{ title }}</strong></td> <td ng-repeat="object in simpleObjects | orderBy:\'id\'" ng-if=ifAssetIsOfType(object)> <a ui-sref="{{ ::state.logs }}"> {{ ::object.identifierValue }} </a> </td> </tr> </thead> <tbody> <tr ng-repeat="date in dates"> <td> <span class=log-date> {{ ::date | date:\'longDate\' }} </span> <button class="btn btn-warning btn-xs" ng-click=logform.$show() ng-show=!logform.$visible> Edit </button> <div class=btn-toolbar role=toolbar> <form editable-form name=logform ng-show=logform.$visible class="form-buttons form-inline" onaftersave=save(date)> <button type=submit ng-disabled=logform.$waiting class="btn btn-success btn-xs"> Save </button> <button type=button ng-disabled=logform.$waiting ng-click=logform.$cancel() class="btn btn-default btn-xs"> Cancel </button> <button class="btn btn-danger btn-xs" style=margin-left:1vw ng-click="open(lg, { type: &quot;log&quot;, logDate: date })"> Delete </button> </form> </div> </td> <td ng-repeat="object in objects | orderBy:&quot;id&quot;" ng-if=ifAssetIsOfType(object)> <ul ng-repeat="log in object.logs" ng-if="log.weekOf === date" class=log> <li ng-repeat="(field, value) in log.data"> <span ng-if="notExpressionField(field, object)" ng-show=logform.$visible>{{ ::field }}:</span> <span ng-if="notExpressionField(field, object)" editable-text="log.data.{{ ::field }}" e-name="{{ ::field }}" e-form=logform onbeforesave="validate($data, value, field, log, object)"> {{ ::field }}: {{ value }} </span> <span ng-if="!notExpressionField(field, object)" ng-hide=logform.$visible> {{ ::field }}: {{ ::value }} </span> </li> </ul> </td> </tr> </tbody> </table> <!-- {{ invalidEntries }} --> <!-- {{ objects }} --> </div> </div> </div>'),a.put("views/prospectstatusmodal.html",'<div if-user> <div class=modal-header> <h3 class=modal-title>Add prospect status</h3> <button type=button class=close ng-click=close() style=margin-top:-35px> &times; </button> </div> <div class=modal-body> <form novalidate role=form name=form ng-submit=submit()> <div class=form-group> <label for=name>Name</label> <input name=name class=form-control ng-model=newStatus.value ng-required=true> </div> </form> <!-- <div>\n        {{ newStatus.value }}\n    </div> --> </div> <div class=modal-footer> <button class="btn btn-success" type=button ng-click=submit() ng-disabled=!validForm()>Submit</button> <button class="btn btn-danger" type=button ng-click=reset()>Reset</button> <button class="btn btn-default" type=button ng-click=close()>Close</button> </div> </div>')}]);